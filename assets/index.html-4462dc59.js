const e=JSON.parse('{"key":"v-91aa47ec","path":"/project/chatgpt-assistant/chapter8/","title":"第八期 Stream 请求 ChatGPT/WebSocket 推送响应","lang":"zh-CN","frontmatter":{"description":"第八期 Stream 请求 ChatGPT/WebSocket 推送响应 本期内容 使用 Websocket Stomp 协议配合@MessageMapping和@Payload 开放消息接口，和接收 JSON 请求体。 实现私有订阅，服务器将请求的结果响应给对应的用户，而不是广播给所有用户。 使用 Proxy 将请求转发给 OpenAI。 对代码进行逻辑分层，让代码更清晰。 代码实现 1. WebsocketController 接收消息","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/qifan-blog-vuepress2/project/chatgpt-assistant/chapter8/"}],["meta",{"property":"og:site_name","content":"起凡Code闲聊"}],["meta",{"property":"og:title","content":"第八期 Stream 请求 ChatGPT/WebSocket 推送响应"}],["meta",{"property":"og:description","content":"第八期 Stream 请求 ChatGPT/WebSocket 推送响应 本期内容 使用 Websocket Stomp 协议配合@MessageMapping和@Payload 开放消息接口，和接收 JSON 请求体。 实现私有订阅，服务器将请求的结果响应给对应的用户，而不是广播给所有用户。 使用 Proxy 将请求转发给 OpenAI。 对代码进行逻辑分层，让代码更清晰。 代码实现 1. WebsocketController 接收消息"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-30T07:38:06.000Z"}],["meta",{"property":"article:author","content":"起凡"}],["meta",{"property":"article:modified_time","content":"2023-09-30T07:38:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第八期 Stream 请求 ChatGPT/WebSocket 推送响应\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-30T07:38:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"起凡\\",\\"url\\":\\"https://www.jarcheng.top\\"}]}"]]},"headers":[{"level":2,"title":"本期内容","slug":"本期内容","link":"#本期内容","children":[]},{"level":2,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[{"level":3,"title":"1. WebsocketController 接收消息","slug":"_1-websocketcontroller-接收消息","link":"#_1-websocketcontroller-接收消息","children":[]},{"level":3,"title":"2 发送消息","slug":"_2-发送消息","link":"#_2-发送消息","children":[]},{"level":3,"title":"3. 组合各个步骤发送消息","slug":"_3-组合各个步骤发送消息","link":"#_3-组合各个步骤发送消息","children":[]}]},{"level":2,"title":"代码测试","slug":"代码测试","link":"#代码测试","children":[{"level":3,"title":"创建会话","slug":"创建会话","link":"#创建会话","children":[]},{"level":3,"title":"发送消息","slug":"发送消息","link":"#发送消息","children":[]}]}],"git":{"createdTime":1694528205000,"updatedTime":1696059486000,"contributors":[{"name":"qifan","email":"1507906763@qq.com","commits":2}]},"readingTime":{"minutes":7.67,"words":2302},"filePathRelative":"project/chatgpt-assistant/chapter8/README.md","localizedDate":"2023年9月12日","excerpt":"<h1> 第八期 Stream 请求 ChatGPT/WebSocket 推送响应</h1>\\n<h2> 本期内容</h2>\\n<ol>\\n<li>使用 Websocket Stomp 协议配合<code>@MessageMapping</code>和<code>@Payload</code> 开放消息接口，和接收 JSON 请求体。</li>\\n<li>实现私有订阅，服务器将请求的结果响应给对应的用户，而不是广播给所有用户。</li>\\n<li>使用 Proxy 将请求转发给 OpenAI。</li>\\n<li>对代码进行逻辑分层，让代码更清晰。</li>\\n</ol>\\n<h2> 代码实现</h2>\\n<h3> 1. WebsocketController 接收消息</h3>","autoDesc":true}');export{e as data};
