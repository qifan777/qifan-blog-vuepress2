const n=JSON.parse('{"key":"v-82f8857c","path":"/project/qifan-shop/reference/generator.html","title":"","lang":"zh-CN","frontmatter":{"description":"Controller @RestController @Slf4j @AllArgsConstructor @RequestMapping(\\"user\\") public class UserController { private final UserService userService; @GetMapping(\\"{id}\\") public UserResponse findById(@PathVariable String id) { return userService.findById(id); } @PostMapping public String createUser(@RequestBody @Validated UserCreateRequest createRequest) { return userService.createUser(createRequest); } @PutMapping(\\"{id}\\") public Boolean updateUser(@RequestBody UserUpdateRequest updateRequest, @PathVariable String id) { userService.updateUser(updateRequest, id); return true; } @PatchMapping(\\"{id}/valid\\") public Boolean validUser(@PathVariable String id) { userService.validUser(id); return true; } @PatchMapping(\\"{id}/invalid\\") public Boolean invalidUser(@PathVariable String id) { userService.invalidUser(id); return true; } @PostMapping(\\"query\\") public Page&lt;UserResponse&gt; queryUser( @RequestBody QueryRequest&lt;UserQueryRequest&gt; queryRequest) { return userService.queryUser(queryRequest); } @DeleteMapping public Boolean deleteUser(@RequestBody List&lt;String&gt; ids) { return userService.deleteUser(ids); } # 代码生成器 ## 注解 ### @GenEntity 在实体类上增加该注解自动生成后端增删改查和前端的增删改查。 ### @GenField 用于生成后端查询条件、前端的表格、创建表单、删除表单、查询表单。 ```java @Retention(RetentionPolicy.RUNTIME) @Inherited @Target({ElementType.FIELD}) public @interface GenField { // 字段注释 String value() default \\"\\"; // 生成dto时的类型 String dtoType() default \\"\\"; // 是否是关联实体 boolean association() default false; // 生成dto时在request中忽略 boolean ignoreRequest() default false; // 生成dto时在response中忽略 boolean ignoreResponse() default false; // 生成前端表单时选用的组件根据此字段生成。比如：ElInput,ELInputNumber ItemType type() default ItemType.INPUT_TEXT; // 前端v-model绑定的路径 String bind() default \\"\\"; // 枚举Class Class&lt;? extends SelectableItem&gt; selectOptionClass() default SelectableItem.class; // 获取所有的枚举值方法 String selectOptionMethod() default \\"getSelectOptions\\"; // 当type=INPUT_NUMBER时可以填写最大值和最小值在前端做限制 String max() default \\"99999999\\"; String min() default \\"0\\"; }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/qifan-blog-vuepress2/project/qifan-shop/reference/generator.html"}],["meta",{"property":"og:site_name","content":"起凡Code闲聊"}],["meta",{"property":"og:description","content":"Controller @RestController @Slf4j @AllArgsConstructor @RequestMapping(\\"user\\") public class UserController { private final UserService userService; @GetMapping(\\"{id}\\") public UserResponse findById(@PathVariable String id) { return userService.findById(id); } @PostMapping public String createUser(@RequestBody @Validated UserCreateRequest createRequest) { return userService.createUser(createRequest); } @PutMapping(\\"{id}\\") public Boolean updateUser(@RequestBody UserUpdateRequest updateRequest, @PathVariable String id) { userService.updateUser(updateRequest, id); return true; } @PatchMapping(\\"{id}/valid\\") public Boolean validUser(@PathVariable String id) { userService.validUser(id); return true; } @PatchMapping(\\"{id}/invalid\\") public Boolean invalidUser(@PathVariable String id) { userService.invalidUser(id); return true; } @PostMapping(\\"query\\") public Page&lt;UserResponse&gt; queryUser( @RequestBody QueryRequest&lt;UserQueryRequest&gt; queryRequest) { return userService.queryUser(queryRequest); } @DeleteMapping public Boolean deleteUser(@RequestBody List&lt;String&gt; ids) { return userService.deleteUser(ids); } # 代码生成器 ## 注解 ### @GenEntity 在实体类上增加该注解自动生成后端增删改查和前端的增删改查。 ### @GenField 用于生成后端查询条件、前端的表格、创建表单、删除表单、查询表单。 ```java @Retention(RetentionPolicy.RUNTIME) @Inherited @Target({ElementType.FIELD}) public @interface GenField { // 字段注释 String value() default \\"\\"; // 生成dto时的类型 String dtoType() default \\"\\"; // 是否是关联实体 boolean association() default false; // 生成dto时在request中忽略 boolean ignoreRequest() default false; // 生成dto时在response中忽略 boolean ignoreResponse() default false; // 生成前端表单时选用的组件根据此字段生成。比如：ElInput,ELInputNumber ItemType type() default ItemType.INPUT_TEXT; // 前端v-model绑定的路径 String bind() default \\"\\"; // 枚举Class Class&lt;? extends SelectableItem&gt; selectOptionClass() default SelectableItem.class; // 获取所有的枚举值方法 String selectOptionMethod() default \\"getSelectOptions\\"; // 当type=INPUT_NUMBER时可以填写最大值和最小值在前端做限制 String max() default \\"99999999\\"; String min() default \\"0\\"; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-21T00:23:28.000Z"}],["meta",{"property":"article:author","content":"起凡"}],["meta",{"property":"article:modified_time","content":"2023-09-21T00:23:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-21T00:23:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"起凡\\",\\"url\\":\\"https://www.jarcheng.top\\"}]}"]]},"headers":[{"level":2,"title":"Controller","slug":"controller","link":"#controller","children":[]},{"level":2,"title":"Service","slug":"service","link":"#service","children":[{"level":3,"title":"Repository","slug":"repository","link":"#repository","children":[]},{"level":3,"title":"Mapper","slug":"mapper","link":"#mapper","children":[]}]}],"git":{"createdTime":1695135050000,"updatedTime":1695255808000,"contributors":[{"name":"qifan","email":"1507906763@qq.com","commits":2},{"name":"起凡","email":"1507906763@qq.com","commits":1}]},"readingTime":{"minutes":1.76,"words":527},"filePathRelative":"project/qifan-shop/reference/generator.md","localizedDate":"2023年9月19日","excerpt":"<h2> Controller</h2>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token annotation punctuation\\">@RestController</span>\\n<span class=\\"token annotation punctuation\\">@Slf4j</span>\\n<span class=\\"token annotation punctuation\\">@AllArgsConstructor</span>\\n<span class=\\"token annotation punctuation\\">@RequestMapping</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"user\\"</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">UserController</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">final</span> <span class=\\"token class-name\\">UserService</span> userService<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token annotation punctuation\\">@GetMapping</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"{id}\\"</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">UserResponse</span> <span class=\\"token function\\">findById</span><span class=\\"token punctuation\\">(</span><span class=\\"token annotation punctuation\\">@PathVariable</span> <span class=\\"token class-name\\">String</span> id<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> userService<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">findById</span><span class=\\"token punctuation\\">(</span>id<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token annotation punctuation\\">@PostMapping</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">createUser</span><span class=\\"token punctuation\\">(</span><span class=\\"token annotation punctuation\\">@RequestBody</span> <span class=\\"token annotation punctuation\\">@Validated</span> <span class=\\"token class-name\\">UserCreateRequest</span> createRequest<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> userService<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">createUser</span><span class=\\"token punctuation\\">(</span>createRequest<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token annotation punctuation\\">@PutMapping</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"{id}\\"</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Boolean</span> <span class=\\"token function\\">updateUser</span><span class=\\"token punctuation\\">(</span><span class=\\"token annotation punctuation\\">@RequestBody</span> <span class=\\"token class-name\\">UserUpdateRequest</span> updateRequest<span class=\\"token punctuation\\">,</span> <span class=\\"token annotation punctuation\\">@PathVariable</span> <span class=\\"token class-name\\">String</span> id<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        userService<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">updateUser</span><span class=\\"token punctuation\\">(</span>updateRequest<span class=\\"token punctuation\\">,</span> id<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token annotation punctuation\\">@PatchMapping</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"{id}/valid\\"</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Boolean</span> <span class=\\"token function\\">validUser</span><span class=\\"token punctuation\\">(</span><span class=\\"token annotation punctuation\\">@PathVariable</span> <span class=\\"token class-name\\">String</span> id<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        userService<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">validUser</span><span class=\\"token punctuation\\">(</span>id<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token annotation punctuation\\">@PatchMapping</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"{id}/invalid\\"</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Boolean</span> <span class=\\"token function\\">invalidUser</span><span class=\\"token punctuation\\">(</span><span class=\\"token annotation punctuation\\">@PathVariable</span> <span class=\\"token class-name\\">String</span> id<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        userService<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">invalidUser</span><span class=\\"token punctuation\\">(</span>id<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token annotation punctuation\\">@PostMapping</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"query\\"</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Page</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">UserResponse</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token function\\">queryUser</span><span class=\\"token punctuation\\">(</span>\\n            <span class=\\"token annotation punctuation\\">@RequestBody</span> <span class=\\"token class-name\\">QueryRequest</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">UserQueryRequest</span><span class=\\"token punctuation\\">&gt;</span></span> queryRequest<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> userService<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">queryUser</span><span class=\\"token punctuation\\">(</span>queryRequest<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token annotation punctuation\\">@DeleteMapping</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Boolean</span> <span class=\\"token function\\">deleteUser</span><span class=\\"token punctuation\\">(</span><span class=\\"token annotation punctuation\\">@RequestBody</span> <span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">&gt;</span></span> ids<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> userService<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">deleteUser</span><span class=\\"token punctuation\\">(</span>ids<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n# 代码生成器\\n\\n## 注解\\n\\n### <span class=\\"token annotation punctuation\\">@GenEntity</span>\\n\\n在实体类上增加该注解自动生成后端增删改查和前端的增删改查。\\n\\n### <span class=\\"token annotation punctuation\\">@GenField</span>\\n\\n用于生成后端查询条件、前端的表格、创建表单、删除表单、查询表单。\\n\\n```java\\n<span class=\\"token annotation punctuation\\">@Retention</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">RetentionPolicy</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">RUNTIME</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token annotation punctuation\\">@Inherited</span>\\n<span class=\\"token annotation punctuation\\">@Target</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span><span class=\\"token class-name\\">ElementType</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">FIELD</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token annotation punctuation\\">@interface</span> <span class=\\"token class-name\\">GenField</span> <span class=\\"token punctuation\\">{</span>\\n\\n  <span class=\\"token comment\\">// 字段注释</span>\\n  <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">value</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token comment\\">// 生成dto时的类型</span>\\n  <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">dtoType</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token comment\\">// 是否是关联实体</span>\\n  <span class=\\"token keyword\\">boolean</span> <span class=\\"token function\\">association</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token comment\\">// 生成dto时在request中忽略</span>\\n  <span class=\\"token keyword\\">boolean</span> <span class=\\"token function\\">ignoreRequest</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token comment\\">// 生成dto时在response中忽略</span>\\n  <span class=\\"token keyword\\">boolean</span> <span class=\\"token function\\">ignoreResponse</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token comment\\">// 生成前端表单时选用的组件根据此字段生成。比如：ElInput,ELInputNumber</span>\\n  <span class=\\"token class-name\\">ItemType</span> <span class=\\"token function\\">type</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token class-name\\">ItemType</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">INPUT_TEXT</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token comment\\">// 前端v-model绑定的路径</span>\\n  <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">bind</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token comment\\">// 枚举Class</span>\\n  <span class=\\"token class-name\\">Class</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token operator\\">?</span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\">SelectableItem</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token function\\">selectOptionClass</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token class-name\\">SelectableItem</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token comment\\">// 获取所有的枚举值方法</span>\\n  <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">selectOptionMethod</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token string\\">\\"getSelectOptions\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token comment\\">// 当type=INPUT_NUMBER时可以填写最大值和最小值在前端做限制</span>\\n  <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">max</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token string\\">\\"99999999\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">min</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token string\\">\\"0\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
