import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as n,a as e}from"./app-2bab2c15.js";const t={},i=e(`<h2 id="技术栈" tabindex="-1"><a class="header-anchor" href="#技术栈" aria-hidden="true">#</a> 技术栈</h2><ul><li><code>sa-token</code> 权限认证框架</li><li><code>mybati-plus</code></li><li><code>springboot</code></li><li><code>mysql</code></li><li><code>redis</code></li><li><code>rabbitmq</code></li></ul><h2 id="项目运行" tabindex="-1"><a class="header-anchor" href="#项目运行" aria-hidden="true">#</a> 项目运行</h2><h3 id="环境要求" tabindex="-1"><a class="header-anchor" href="#环境要求" aria-hidden="true">#</a> 环境要求</h3><p>redis，mysql5.7以上，rabbitmq3.8（需要启动延迟消息插件）</p><p>建议rabbitmq通过以下命令安装，不要手动安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> rabbitmq <span class="token parameter variable">-p</span> <span class="token number">5672</span>:5672 <span class="token parameter variable">-p</span> <span class="token number">15672</span>:15672 <span class="token parameter variable">-e</span> <span class="token assign-left variable">RABBITMQ_DEFAULT_USER</span><span class="token operator">=</span>root <span class="token parameter variable">-e</span> <span class="token assign-left variable">RABBITMQ_DEFAULT_PASS</span><span class="token operator">=</span><span class="token number">123456</span> <span class="token parameter variable">-v</span> rabbitmq-data:/var/lib/rabbitmq circleci/rabbitmq-delayed:3.8.9-management-38
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="环境配置" tabindex="-1"><a class="header-anchor" href="#环境配置" aria-hidden="true">#</a> 环境配置</h3><h4 id="_1-修改数据库密码" tabindex="-1"><a class="header-anchor" href="#_1-修改数据库密码" aria-hidden="true">#</a> 1. 修改数据库密码</h4><p>修改admin/src/main/resources/application-dev.yml</p><h4 id="_2-配置阿里云oss" tabindex="-1"><a class="header-anchor" href="#_2-配置阿里云oss" aria-hidden="true">#</a> 2. 配置阿里云oss</h4><p>修改admin/src/main/resources/application.yml</p><p>要改成你自己的阿里云oss<br> 最终格式如下：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">oss</span><span class="token punctuation">:</span>
  <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//oss<span class="token punctuation">-</span>cn<span class="token punctuation">-</span>beijing.aliyuncs.com
  <span class="token key atrule">accessKeyId</span><span class="token punctuation">:</span> LTAI5t6DcTaSUFLSX6YwBGxx
  <span class="token key atrule">accessKeySecret</span><span class="token punctuation">:</span> eiUTDvGwCg11GR118njEXjIoSX2fi9
  <span class="token key atrule">bucketName</span><span class="token punctuation">:</span> letter<span class="token punctuation">-</span>post
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-配置微信支付信息和小程序信息" tabindex="-1"><a class="header-anchor" href="#_3-配置微信支付信息和小程序信息" aria-hidden="true">#</a> 3. 配置微信支付信息和小程序信息</h4><p>修改admin/src/main/resources/application-dev.yml</p><p>需要在微信支付后台生成的配置信息如下：</p><p><code>apiclient_key</code>, <code>apiclient_cert.pem</code>, <code>apiclient_cert.p12</code>,<code>api-key3</code></p><p>最终格式如下，</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">wechat</span><span class="token punctuation">:</span>
  <span class="token key atrule">api-key</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span>
  <span class="token key atrule">app-id</span><span class="token punctuation">:</span> <span class="token string">&quot;wxe6cas450d2dff083&quot;</span>
  <span class="token key atrule">app-secret</span><span class="token punctuation">:</span> <span class="token string">&quot;69f493f6dec2a6agc5ebh1l37821919d&quot;</span>
  <span class="token key atrule">mch-id</span><span class="token punctuation">:</span> <span class="token string">&quot;1619421445&quot;</span>
  <span class="token key atrule">key-path</span><span class="token punctuation">:</span> <span class="token string">&quot;apiclient_key.pem&quot;</span>
  <span class="token key atrule">cert-path</span><span class="token punctuation">:</span> <span class="token string">&quot;apiclient_cert.pem&quot;</span>
  <span class="token key atrule">cert-p12-path</span><span class="token punctuation">:</span> <span class="token string">&quot;apiclient_cert.p12&quot;</span>
  <span class="token key atrule">api-key3</span><span class="token punctuation">:</span> <span class="token string">&quot;kklcklaxjiijjjkjkjlkjsuhauy4abcd&quot;</span>
  <span class="token key atrule">platform-cert-path</span><span class="token punctuation">:</span> <span class="token string">&quot;wx_cert.pem&quot;</span>
  <span class="token key atrule">notify-url</span><span class="token punctuation">:</span> <span class="token string">&quot;https://www.jarcheng.top/test-api/order/notify&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运行步骤" tabindex="-1"><a class="header-anchor" href="#运行步骤" aria-hidden="true">#</a> 运行步骤</h3><ol><li>导入doc目录下的sql到mysql</li><li>启动redis，mysql，rabbitmq</li><li>启动AdminApplication</li></ol>`,22),p=[i];function l(c,o){return s(),n("div",null,p)}const u=a(t,[["render",l],["__file","index.html.vue"]]);export{u as default};
