import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c as u,d as a,e as n,f as s,w as r,a as t}from"./app-fce880b4.js";const d={},k=t('<h1 id="模型设计" tabindex="-1"><a class="header-anchor" href="#模型设计" aria-hidden="true">#</a> 模型设计</h1><p>权限管理模型主要分以下几种</p><ul><li>ACL模型：访问控制列表</li><li>DAC 模型：自主访问控制</li><li>MAC 模型：强制访问控制</li><li>ABAC 模型：基于属性的访问控制</li><li>RBAC 模型：基于角色的权限访问控制 <ul><li>RBAC0 模型</li><li>RBAC1 模型</li><li>RBAC2 模型</li><li>RBAC3 模型</li></ul></li></ul><p>在上面的这么多模型中,RBAC这类的模型是应用最广泛的。然后根据系统的复杂度在RBAC0-3中进行选择。RBAC0就已经可以解决大部分小项目的需求了。</p><p>下面的内容就是实现RBAC0权限模型。</p><h2 id="er图" tabindex="-1"><a class="header-anchor" href="#er图" aria-hidden="true">#</a> ER图</h2>',6),v=t(`<h2 id="jimmer实现关系图" tabindex="-1"><a class="header-anchor" href="#jimmer实现关系图" aria-hidden="true">#</a> jimmer实现关系图</h2><h3 id="user-实体类" tabindex="-1"><a class="header-anchor" href="#user-实体类" aria-hidden="true">#</a> User 实体类</h3><p>user表中包含了一些必要的字段的，其余的拓展字段可以通过关联表的形式在后续增加。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Entity</span>
<span class="token annotation punctuation">@GenEntity</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token keyword">extends</span> <span class="token class-name">BaseDateTime</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Id</span>
    <span class="token annotation punctuation">@GeneratedValue</span><span class="token punctuation">(</span>generatorType <span class="token operator">=</span> <span class="token class-name">UUIDIdGenerator</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token class-name">String</span> <span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Key</span>
    <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;手机号&quot;</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token class-name">String</span> <span class="token function">phone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">String</span> <span class="token function">password</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;昵称&quot;</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token class-name">String</span> <span class="token function">nickname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;头像&quot;</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">ItemType</span><span class="token punctuation">.</span><span class="token constant">PICTURE</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> nullable <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Nullable</span>
    <span class="token class-name">String</span> <span class="token function">avatar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;性别&quot;</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">ItemType</span><span class="token punctuation">.</span><span class="token constant">SELECTABLE</span><span class="token punctuation">,</span> dictId <span class="token operator">=</span> <span class="token number">1001</span><span class="token punctuation">,</span> nullable <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Nullable</span>
    <span class="token class-name">String</span> <span class="token function">gender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 参考ER图中的user拥有多个UserRoleRel</span>
    <span class="token annotation punctuation">@OneToMany</span><span class="token punctuation">(</span>mappedBy <span class="token operator">=</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserRoleRel</span><span class="token punctuation">&gt;</span></span> <span class="token function">roles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 将UserRoleRel中的Role映射出来，方便获取用户关联的角色列表。</span>
    <span class="token annotation punctuation">@ManyToManyView</span><span class="token punctuation">(</span>
            prop <span class="token operator">=</span> <span class="token string">&quot;roles&quot;</span><span class="token punctuation">,</span>
            deeperProp <span class="token operator">=</span> <span class="token string">&quot;role&quot;</span>
    <span class="token punctuation">)</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Role</span><span class="token punctuation">&gt;</span></span> <span class="token function">rolesView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),m={class:"hint-container info"},b=n("p",{class:"hint-container-title"},"相关信息",-1),h={href:"https://babyfish-ct.gitee.io/jimmer-doc/docs/mapping/base/association/one-to-many",target:"_blank",rel:"noopener noreferrer"},g=n("br",null,null,-1),y=n("code",null,'mappedBy = "xxx"',-1),_={href:"https://babyfish-ct.gitee.io/jimmer-doc/docs/mapping/advanced/key",target:"_blank",rel:"noopener noreferrer"},R=n("code",null,"@Id",-1),f=n("br",null,null,-1),E={href:"https://babyfish-ct.gitee.io/jimmer-doc/docs/mapping/advanced/view/many-to-many-view#%E5%88%9D%E8%AF%86manytomanyview",target:"_blank",rel:"noopener noreferrer"},M=n("br",null,null,-1),B=n("code",null,"List<Role> roles=user.getRoles().map(userRoleRel -> userRoleRel.getRole()).toList();",-1),q=n("br",null,null,-1),T=n("code",null,"@ManyToManyView",-1),w=n("code",null,"UserRoleRel",-1),x=n("code",null,"Role",-1),A=n("h3",{id:"userrolerel实体类",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#userrolerel实体类","aria-hidden":"true"},"#"),s(" UserRoleRel实体类")],-1),I=n("p",null,"要实现两个实体类的多对多关联必然需要一张中间表。UserRoleRel就是负责建立起User 多——多 Role这个联系的中间表。",-1),j=n("p",null,[s("除了BaseEntity中的逻辑主键"),n("code",null,"@Id"),s("之外，还包含了两个业务主键"),n("code",null,"@Key"),s("，分别是userId和roleId。他们组合起来可以唯一标识一行记录，因此加上了"),n("code",null,"@Key"),s("。")],-1),L={href:"https://babyfish-ct.gitee.io/jimmer-doc/docs/mutation/save-command/dissociation#%E8%84%B1%E5%8B%BE%E4%B8%AD%E9%97%B4%E8%A1%A8%E6%95%B0%E6%8D%AE",target:"_blank",rel:"noopener noreferrer"},U=n("code",null,"@OnDissociate(DissociateAction.DELETE)",-1),S=n("br",null,null,-1),C=t(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Entity</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserRoleRel</span> <span class="token keyword">extends</span> <span class="token class-name">BaseEntity</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@OnDissociate</span><span class="token punctuation">(</span><span class="token class-name">DissociateAction</span><span class="token punctuation">.</span><span class="token constant">DELETE</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ManyToOne</span>
    <span class="token annotation punctuation">@Key</span>
    <span class="token class-name">User</span> <span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@ManyToOne</span>
    <span class="token annotation punctuation">@Key</span>
    <span class="token class-name">Role</span> <span class="token function">role</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),G={class:"hint-container info"},D=n("p",{class:"hint-container-title"},"相关信息",-1),O=t(`<h3 id="role实体类" tabindex="-1"><a class="header-anchor" href="#role实体类" aria-hidden="true">#</a> Role实体类</h3><p>根据ER图中可以知道角色是权限模型的核心部分，它不仅和用户建立起了多对多关系，同时也和菜单建立起了多对多关系。<br> 因此下面的角色实体类中包含了两个中间表<code>RoleMenuRel</code>和<code>UserRoleRel</code>。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GenEntity</span>
<span class="token annotation punctuation">@Entity</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Role</span> <span class="token keyword">extends</span> <span class="token class-name">BaseEntity</span> <span class="token punctuation">{</span>
    <span class="token comment">// 业务主键</span>
    <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;角色名称&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Key</span>
    <span class="token class-name">String</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 角色拥有多个菜单</span>
    <span class="token annotation punctuation">@OneToMany</span><span class="token punctuation">(</span>mappedBy <span class="token operator">=</span> <span class="token string">&quot;role&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RoleMenuRel</span><span class="token punctuation">&gt;</span></span> <span class="token function">menus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 角色可以被多个用户拥有</span>
    <span class="token annotation punctuation">@OneToMany</span><span class="token punctuation">(</span>mappedBy <span class="token operator">=</span> <span class="token string">&quot;role&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserRoleRel</span><span class="token punctuation">&gt;</span></span> <span class="token function">users</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// 将RoleMenuRel中的Menu映射出来</span>
    <span class="token annotation punctuation">@ManyToManyView</span><span class="token punctuation">(</span>prop <span class="token operator">=</span> <span class="token string">&quot;menus&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Menu</span><span class="token punctuation">&gt;</span></span> <span class="token function">menusView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rolemenurel实体类" tabindex="-1"><a class="header-anchor" href="#rolemenurel实体类" aria-hidden="true">#</a> RoleMenuRel实体类</h3><p>包含roleId和menuId，用于实现角色和菜单直接的多对多关联。参考<a href="#userrolerel%E5%AE%9E%E4%BD%93%E7%B1%BB">UserRoleRel</a></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Entity</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">RoleMenuRel</span> <span class="token keyword">extends</span> <span class="token class-name">BaseEntity</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@OnDissociate</span><span class="token punctuation">(</span><span class="token class-name">DissociateAction</span><span class="token punctuation">.</span><span class="token constant">DELETE</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ManyToOne</span>
    <span class="token annotation punctuation">@Key</span>
    <span class="token class-name">Role</span> <span class="token function">role</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@ManyToOne</span>
    <span class="token annotation punctuation">@Key</span>
    <span class="token class-name">Menu</span> <span class="token function">menu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="menu实体类" tabindex="-1"><a class="header-anchor" href="#menu实体类" aria-hidden="true">#</a> Menu实体类</h3><p>为了实现不同的角色显示的菜单和操作权限不一样，菜单表就诞生了。</p><p>由于菜单本身就是树状的结构，所以它还需要关联子菜单和父亲菜单。<code>@OneToMany List&lt;Menu&gt; children();</code>关联了子菜单<code>@ManyToOne Menu parent();</code>关联了父菜单。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GenEntity</span>
<span class="token annotation punctuation">@Entity</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Menu</span> <span class="token keyword">extends</span> <span class="token class-name">BaseEntity</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;菜单名称&quot;</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token class-name">String</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Nullable</span>
    <span class="token annotation punctuation">@ManyToOne</span>
    <span class="token class-name">Menu</span> <span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@IdView</span>
    <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;父菜单Id&quot;</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Nullable</span>
    <span class="token class-name">String</span> <span class="token function">parentId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;路由路径&quot;</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token class-name">String</span> <span class="token function">path</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;排序号&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">Integer</span> <span class="token function">orderNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;菜单类型&quot;</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">ItemType</span><span class="token punctuation">.</span><span class="token constant">SELECTABLE</span><span class="token punctuation">,</span> dictId <span class="token operator">=</span> <span class="token number">1002</span><span class="token punctuation">)</span>
    <span class="token class-name">String</span> <span class="token function">menuType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;图标&quot;</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">ItemType</span><span class="token punctuation">.</span><span class="token constant">PICTURE</span><span class="token punctuation">,</span> nullable <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Nullable</span>
    <span class="token class-name">String</span> <span class="token function">icon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@OneToMany</span><span class="token punctuation">(</span>mappedBy <span class="token operator">=</span> <span class="token string">&quot;parent&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Menu</span><span class="token punctuation">&gt;</span></span> <span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@OneToMany</span><span class="token punctuation">(</span>mappedBy <span class="token operator">=</span> <span class="token string">&quot;menu&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RoleMenuRel</span><span class="token punctuation">&gt;</span></span> <span class="token function">roles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),F={class:"hint-container info"},N=n("p",{class:"hint-container-title"},"相关信息",-1),K={href:"https://babyfish-ct.gitee.io/jimmer-doc/docs/mapping/advanced/view/id-view",target:"_blank",rel:"noopener noreferrer"},V=n("code",null,"menu.getParent().getId()",-1),P=n("code",null,"@IdView",-1),z=n("code",null,"parentId",-1),W=n("code",null,"parent.id",-1);function X(Z,H){const p=o("Mermaid"),e=o("ExternalLinkIcon"),c=o("RouterLink");return i(),u("div",null,[k,a(p,{id:"mermaid-64",code:"eJzT1dXlKsksyUm1Ung+ZcWzju3P5ja/nDnBNejp7H1cIEmu1CKXzMT0osRcLgWF0OLUIoWaGl3d/GowOyg/JzUoNUfBSkHpWffSZ3M6laCKYBJQtSAuSNGLRasR6sCCSAp8U/NKgXpQzEIShykFcTHMAjusGsgAgeKSosy8dIXMFIUAb6BQLZqbqhWwq0MSKgUq90xRcPNWUHq6ZNrLKeuetm5+0TjlaccGkMyLhSue7NgNFAXZjKSrCGgBdl0gGRRdIDeB/Y/TzWieJ8LRJFiPpCsXaAF2XSAZDEeDQx+nowH9GOOz"}),v,n("div",m,[b,n("p",null,[n("a",h,[s('@OneToMany(mappedBy = "xxx")'),a(e)]),s("代表一对多映射，和ER图中的一对多相对应。"),g,s(" 由于一对多的一方不存在外键，因此为了确定是哪张表关联了自己需要指定"),y,s("。")]),n("p",null,[n("a",_,[s("@Key"),a(e)]),s("是业务主键。还有一种主键是"),R,s("，这种主键和业务无关。"),f,s(" 两者都可以唯一的标识一行记录，只是前者有业务的意义。如User表中的Phone也可以唯一代表一个用户，但是它多了一个业务含义——手机号。")]),n("p",null,[n("a",E,[s("@ManyToManyView"),a(e)]),s("："),M,s(" 在权限模型中，如果用户需要获得它关联的角色，需要通过下面这种方式获得"),B,s("。"),q,s(" 使用"),T,s("可以便捷的将"),w,s("中的"),x,s("获取。")])]),A,I,j,n("p",null,[s("用户拥有多个角色，当减少关联的角色时我们希望删除掉UserRoleRel中相应的记录。"),n("a",L,[U,a(e)]),S,s(" 即可达到这种脱钩操作。")]),C,n("div",G,[D,n("p",null,[a(c,{to:"/project/qifan-mall/reference/backend/README.md/#baseentity"},{default:r(()=>[s("BaseEntity")]),_:1}),s("包含通用的id, editedTime, createdTime, editor, creator。并且会自动填写这些字段。")])]),O,n("div",F,[N,n("p",null,[n("a",K,[s("@IdView"),a(e)]),s("可以将关联对象的id映射到当前的实体类。如果菜单想要获取父亲菜单的id，正常来说需要"),V,s("，这样就有点麻烦。使用"),P,s("生成"),z,s("就代表着"),W,s("。")])])])}const Y=l(d,[["render",X],["__file","index.html.vue"]]);export{Y as default};
