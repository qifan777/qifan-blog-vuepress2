import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,a as t}from"./app-9431dd74.js";const p={},e=t(`<h1 id="后端基础" tabindex="-1"><a class="header-anchor" href="#后端基础" aria-hidden="true">#</a> 后端基础</h1><h2 id="baseentity" tabindex="-1"><a class="header-anchor" href="#baseentity" aria-hidden="true">#</a> BaseEntity</h2><p>实体类的通用字段，创建时会填写id，采用的是uuid生成策略。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@MappedSuperclass</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">BaseEntity</span> <span class="token keyword">extends</span> <span class="token class-name">BaseDateTime</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Id</span>
    <span class="token annotation punctuation">@GeneratedValue</span><span class="token punctuation">(</span>generatorType <span class="token operator">=</span> <span class="token class-name">UUIDIdGenerator</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token class-name">String</span> <span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@ManyToOne</span>
    <span class="token annotation punctuation">@OnDissociate</span><span class="token punctuation">(</span><span class="token class-name">DissociateAction</span><span class="token punctuation">.</span><span class="token constant">SET_NULL</span><span class="token punctuation">)</span>
    <span class="token class-name">User</span> <span class="token function">editor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@ManyToOne</span>
    <span class="token annotation punctuation">@OnDissociate</span><span class="token punctuation">(</span><span class="token class-name">DissociateAction</span><span class="token punctuation">.</span><span class="token constant">SET_NULL</span><span class="token punctuation">)</span>
    <span class="token class-name">User</span> <span class="token function">creator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="拦截器" tabindex="-1"><a class="header-anchor" href="#拦截器" aria-hidden="true">#</a> 拦截器</h3><p>分别在创建时和更新时填充<code>creator</code>和<code>editor</code>。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BaseEntityDraftInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">DraftInterceptor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BaseEntityDraft</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>


    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">beforeSave</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NotNull</span> <span class="token class-name">BaseEntityDraft</span> draft<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isNew<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">ImmutableObjects</span><span class="token punctuation">.</span><span class="token function">isLoaded</span><span class="token punctuation">(</span>draft<span class="token punctuation">,</span> <span class="token class-name">BaseEntityProps</span><span class="token punctuation">.</span><span class="token constant">EDITOR</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            draft<span class="token punctuation">.</span><span class="token function">applyEditor</span><span class="token punctuation">(</span>user <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                user<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">getLoginIdAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>isNew<span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">ImmutableObjects</span><span class="token punctuation">.</span><span class="token function">isLoaded</span><span class="token punctuation">(</span>draft<span class="token punctuation">,</span> <span class="token class-name">BaseEntityProps</span><span class="token punctuation">.</span><span class="token constant">CREATOR</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                draft<span class="token punctuation">.</span><span class="token function">applyCreator</span><span class="token punctuation">(</span>user <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    user<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">getLoginIdAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),c=[e];function o(i,l){return s(),a("div",null,c)}const k=n(p,[["render",o],["__file","index.html.vue"]]);export{k as default};
