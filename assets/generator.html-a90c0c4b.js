import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as i,c as u,d as a,w as t,e as n,f as s,a as p}from"./app-4221f1d2.js";const k="/qifan-blog-vuepress2/assets/img_1-fe6a9774.png",r="/qifan-blog-vuepress2/assets/img_2-13646a9c.png",d="/qifan-blog-vuepress2/assets/img_3-6c7d630a.png",v="/qifan-blog-vuepress2/assets/img_4-c0124595.png",m="/qifan-blog-vuepress2/assets/img_5-6fe094c3.png",b="/qifan-blog-vuepress2/assets/img_6-a486ce2d.png",g={},y=p(`<h1 id="代码生成器" tabindex="-1"><a class="header-anchor" href="#代码生成器" aria-hidden="true">#</a> 代码生成器</h1><h2 id="注解" tabindex="-1"><a class="header-anchor" href="#注解" aria-hidden="true">#</a> 注解</h2><h3 id="genentity" tabindex="-1"><a class="header-anchor" href="#genentity" aria-hidden="true">#</a> @GenEntity</h3><p>在实体类上增加该注解自动生成后端增删改查和前端的增删改查。</p><h3 id="genfield" tabindex="-1"><a class="header-anchor" href="#genfield" aria-hidden="true">#</a> @GenField</h3><p>用于生成后端查询条件、前端的表格、创建表单、删除表单、查询表单。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Inherited</span>
<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">FIELD</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">GenField</span> <span class="token punctuation">{</span>

  <span class="token comment">// 字段注释</span>
  <span class="token class-name">String</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

  <span class="token comment">// 生成dto时的类型</span>
  <span class="token class-name">String</span> <span class="token function">dtoType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

  <span class="token comment">// 是否是关联实体</span>
  <span class="token keyword">boolean</span> <span class="token function">association</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

  <span class="token comment">// 生成dto时在request中忽略</span>
  <span class="token keyword">boolean</span> <span class="token function">ignoreRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

  <span class="token comment">// 生成dto时在response中忽略</span>
  <span class="token keyword">boolean</span> <span class="token function">ignoreResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

  <span class="token comment">// 生成前端表单时选用的组件根据此字段生成。比如：ElInput,ELInputNumber</span>
  <span class="token class-name">ItemType</span> <span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token class-name">ItemType</span><span class="token punctuation">.</span><span class="token constant">INPUT_TEXT</span><span class="token punctuation">;</span>

  <span class="token comment">// 前端v-model绑定的路径</span>
  <span class="token class-name">String</span> <span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

  <span class="token comment">// 枚举Class</span>
  <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">SelectableItem</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectOptionClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token class-name">SelectableItem</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>

  <span class="token comment">// 获取所有的枚举值方法</span>
  <span class="token class-name">String</span> <span class="token function">selectOptionMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;getSelectOptions&quot;</span><span class="token punctuation">;</span>

  <span class="token comment">// 当type=INPUT_NUMBER时可以填写最大值和最小值在前端做限制</span>
  <span class="token class-name">String</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;99999999&quot;</span><span class="token punctuation">;</span>

  <span class="token class-name">String</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="后端模板" tabindex="-1"><a class="header-anchor" href="#后端模板" aria-hidden="true">#</a> 后端模板</h2>`,8),f=n("img",{src:k},null,-1),w=n("p",null,"图1 后端模板结构",-1),h=p(`<ul><li>dto：根据entity生成dto <ul><li>request：dto中的request分别对应create/update/query三种请求。</li><li>response：通用的response用与返回查询的数据</li></ul></li><li>mapper：dto和entity之间的映射，可以灵活的控制各个字段的映射规则。</li><li>controller：接收create（创建）、update（更新）、findById（根据id查询）、query（查询）、invalid（失效）、valid（生效）。</li><li>service：对应controller中的api。</li><li>repository：SpringDataJpa通用增删改查。</li><li>predicate：query中的查询条件，根据实体类的字段生成。</li></ul><h3 id="dto" tabindex="-1"><a class="header-anchor" href="#dto" aria-hidden="true">#</a> Dto</h3><p>下面展示以User实体类和UserCreateRequest为例子，UserCreateRequest是User的dto，字段的属性上名称是一致的但是类型不一定一致。<code>gender</code>、<code>roles</code>、<code>phonePassword</code>、<code>weChat</code>这四个属性的类型和实体类中的都不一致。</p><p>剩余的<code>UpdateRequest</code>、<code>QueryRequest</code>，<code>CommonResponse</code>都是一样的。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserCreateRequest</span> <span class="token keyword">implements</span> <span class="token class-name">BaseRequest</span> <span class="token punctuation">{</span>

  <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> createdAt<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> updatedAt<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token class-name">Integer</span> version<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token class-name">String</span> nickname<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token class-name">String</span> avatar<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token class-name">Integer</span> gender <span class="token operator">=</span> <span class="token class-name">GenderType</span><span class="token punctuation">.</span><span class="token constant">PRIVATE</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RoleCreateRequest</span><span class="token punctuation">&gt;</span></span> roles<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token class-name">UserPhonePasswordCreateRequest</span> phonePassword<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token class-name">UserWeChatCreateRequest</span> weChat<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用户实体类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GenEntity</span>
<span class="token annotation punctuation">@Entity</span>
<span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;USER&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Getter</span>
<span class="token annotation punctuation">@Setter</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token annotation punctuation">@RequiredArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token keyword">extends</span> <span class="token class-name">BaseEntity</span> <span class="token punctuation">{</span>

  <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;用户昵称&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">private</span> <span class="token class-name">String</span> nickname<span class="token punctuation">;</span>

  <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;用户头像&quot;</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">ItemType</span><span class="token punctuation">.</span><span class="token constant">PICTURE</span><span class="token punctuation">)</span>
  <span class="token keyword">private</span> <span class="token class-name">String</span> avatar<span class="token punctuation">;</span>

  <span class="token annotation punctuation">@Convert</span><span class="token punctuation">(</span>converter <span class="token operator">=</span> <span class="token class-name">GenderTypeConverter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
  <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;性别&quot;</span><span class="token punctuation">,</span> dtoType <span class="token operator">=</span> <span class="token string">&quot;java.lang.Integer&quot;</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">ItemType</span><span class="token punctuation">.</span><span class="token constant">SELECTABLE</span><span class="token punctuation">,</span> selectOptionClass <span class="token operator">=</span> <span class="token class-name">GenderType</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
  <span class="token keyword">private</span> <span class="token class-name">GenderType</span> gender<span class="token punctuation">;</span>

  <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;角色列表&quot;</span><span class="token punctuation">,</span> association <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">ItemType</span><span class="token punctuation">.</span><span class="token constant">NONE</span><span class="token punctuation">)</span>
  <span class="token annotation punctuation">@ManyToMany</span><span class="token punctuation">(</span>fetch <span class="token operator">=</span> <span class="token class-name">FetchType</span><span class="token punctuation">.</span><span class="token constant">LAZY</span><span class="token punctuation">)</span>
  <span class="token annotation punctuation">@ToString.Exclude</span>
  <span class="token annotation punctuation">@JoinTable</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;USER_ROLE&quot;</span><span class="token punctuation">,</span> joinColumns <span class="token operator">=</span> <span class="token annotation punctuation">@JoinColumn</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;user_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> inverseJoinColumns <span class="token operator">=</span> <span class="token annotation punctuation">@JoinColumn</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;role_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">private</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Role</span><span class="token punctuation">&gt;</span></span> roles<span class="token punctuation">;</span>

  <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;手机号&quot;</span><span class="token punctuation">,</span> bind <span class="token operator">=</span> <span class="token string">&quot;phonePassword.phoneNumber&quot;</span><span class="token punctuation">)</span>
  <span class="token annotation punctuation">@OneToOne</span><span class="token punctuation">(</span>mappedBy <span class="token operator">=</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span> cascade <span class="token operator">=</span> <span class="token class-name">CascadeType</span><span class="token punctuation">.</span><span class="token constant">ALL</span><span class="token punctuation">)</span>
  <span class="token annotation punctuation">@ToString.Exclude</span>
  <span class="token keyword">private</span> <span class="token class-name">UserPhonePassword</span> phonePassword<span class="token punctuation">;</span>

  <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;小程序openId&quot;</span><span class="token punctuation">,</span> bind <span class="token operator">=</span> <span class="token string">&quot;weChat.openId&quot;</span><span class="token punctuation">)</span>
  <span class="token annotation punctuation">@OneToOne</span><span class="token punctuation">(</span>mappedBy <span class="token operator">=</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span> cascade <span class="token operator">=</span> <span class="token class-name">CascadeType</span><span class="token punctuation">.</span><span class="token constant">ALL</span><span class="token punctuation">)</span>
  <span class="token annotation punctuation">@ToString.Exclude</span>
  <span class="token keyword">private</span> <span class="token class-name">UserWeChat</span> weChat<span class="token punctuation">;</span>

  <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;是否生效&quot;</span><span class="token punctuation">,</span> ignoreRequest <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">ItemType</span><span class="token punctuation">.</span><span class="token constant">NONE</span><span class="token punctuation">)</span>
  <span class="token annotation punctuation">@Convert</span><span class="token punctuation">(</span>converter <span class="token operator">=</span> <span class="token class-name">ValidStatusConverter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
  <span class="token keyword">private</span> <span class="token class-name">ValidStatus</span> validStatus<span class="token punctuation">;</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">preCreate0</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">valid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">valid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setValidStatus</span><span class="token punctuation">(</span><span class="token class-name">ValidStatus</span><span class="token punctuation">.</span><span class="token constant">VALID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">invalid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setValidStatus</span><span class="token punctuation">(</span><span class="token class-name">ValidStatus</span><span class="token punctuation">.</span><span class="token constant">INVALID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">==</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> oEffectiveClass <span class="token operator">=</span>
        o <span class="token keyword">instanceof</span> <span class="token class-name">HibernateProxy</span> <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">HibernateProxy</span><span class="token punctuation">)</span> o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHibernateLazyInitializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">getPersistentClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> o<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> thisEffectiveClass <span class="token operator">=</span>
        <span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">HibernateProxy</span> <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">HibernateProxy</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHibernateLazyInitializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">getPersistentClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>thisEffectiveClass <span class="token operator">!=</span> oEffectiveClass<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">)</span> o<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mapper" tabindex="-1"><a class="header-anchor" href="#mapper" aria-hidden="true">#</a> Mapper</h3><p>Mapper文件用于dto和实体类之间的映射，通过下面的几个方法的入参和返回值可以知道映射关系。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Mapper</span><span class="token punctuation">(</span>
        <span class="token keyword">uses</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">CustomMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        nullValueCheckStrategy <span class="token operator">=</span> <span class="token class-name">NullValueCheckStrategy</span><span class="token punctuation">.</span><span class="token constant">ALWAYS</span><span class="token punctuation">,</span>
        componentModel <span class="token operator">=</span> <span class="token class-name">MappingConstants<span class="token punctuation">.</span>ComponentModel</span><span class="token punctuation">.</span><span class="token constant">SPRING</span>

<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMapper</span> <span class="token punctuation">{</span>

    <span class="token class-name">User</span> <span class="token function">createRequest2Entity</span><span class="token punctuation">(</span><span class="token class-name">UserCreateRequest</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">User</span> <span class="token function">queryRequest2Entity</span><span class="token punctuation">(</span><span class="token class-name">UserQueryRequest</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">User</span> <span class="token function">updateEntityFromUpdateRequest</span><span class="token punctuation">(</span><span class="token class-name">UserUpdateRequest</span> request<span class="token punctuation">,</span> <span class="token annotation punctuation">@MappingTarget</span> <span class="token class-name">User</span> entity<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">UserResponse</span> <span class="token function">entity2Response</span><span class="token punctuation">(</span><span class="token class-name">User</span> entity<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="controller" tabindex="-1"><a class="header-anchor" href="#controller" aria-hidden="true">#</a> Controller</h3><p>生成基本地增删改查生效失效。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;{id}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">UserResponse</span> <span class="token function">findById</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@PostMapping</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">createUser</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token annotation punctuation">@Validated</span> <span class="token class-name">UserCreateRequest</span> createRequest<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">createUser</span><span class="token punctuation">(</span>createRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@PutMapping</span><span class="token punctuation">(</span><span class="token string">&quot;{id}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">updateUser</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">UserUpdateRequest</span> updateRequest<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        userService<span class="token punctuation">.</span><span class="token function">updateUser</span><span class="token punctuation">(</span>updateRequest<span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@PatchMapping</span><span class="token punctuation">(</span><span class="token string">&quot;{id}/valid&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">validUser</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        userService<span class="token punctuation">.</span><span class="token function">validUser</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@PatchMapping</span><span class="token punctuation">(</span><span class="token string">&quot;{id}/invalid&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">invalidUser</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        userService<span class="token punctuation">.</span><span class="token function">invalidUser</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;query&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserResponse</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryUser</span><span class="token punctuation">(</span>
            <span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">QueryRequest</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserQueryRequest</span><span class="token punctuation">&gt;</span></span> queryRequest<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">queryUser</span><span class="token punctuation">(</span>queryRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@DeleteMapping</span>
    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">deleteUser</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> ids<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">deleteUser</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="service" tabindex="-1"><a class="header-anchor" href="#service" aria-hidden="true">#</a> Service</h3><p>和Controller中的API一一对应。</p>`,15),q={class:"hint-container info"},U=n("p",{class:"hint-container-title"},"相关信息",-1),E=p(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Service</span>
<span class="token annotation punctuation">@Transactional</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>

  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">RoleMapper</span> roleMapper<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">UserMapper</span> userMapper<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">MenuMapper</span> menuMapper<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">UserRepository</span> userRepository<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">UserPhonePasswordMapper</span> phonePasswordMapper<span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token class-name">UserResponse</span> <span class="token function">findById</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> userMapper<span class="token punctuation">.</span><span class="token function">entity2Response</span><span class="token punctuation">(</span>userRepository<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">BusinessException</span><span class="token punctuation">(</span><span class="token class-name">ResultCode<span class="token punctuation">.</span>NotFindError</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateUser</span><span class="token punctuation">(</span><span class="token class-name">UserUpdateRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">EntityOperations</span><span class="token punctuation">.</span><span class="token function">doUpdate</span><span class="token punctuation">(</span>userRepository<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">loadById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
      userMapper<span class="token punctuation">.</span><span class="token function">updateEntityFromUpdateRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getPhonePassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">getPhonePassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setUser</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">successHook</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;更新user：{}&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">createUser</span><span class="token punctuation">(</span><span class="token class-name">UserCreateRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> user <span class="token operator">=</span> <span class="token class-name">EntityOperations</span><span class="token punctuation">.</span><span class="token function">doCreate</span><span class="token punctuation">(</span>userRepository<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> userMapper<span class="token punctuation">.</span><span class="token function">createRequest2Entity</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> e<span class="token punctuation">.</span><span class="token function">getPhonePassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setUser</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">successHook</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;创建user：{}&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> user<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> user<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">validUser</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">EntityOperations</span><span class="token punctuation">.</span><span class="token function">doUpdate</span><span class="token punctuation">(</span>userRepository<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">loadById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">valid</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">successHook</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;生效user：{}&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">invalidUser</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">EntityOperations</span><span class="token punctuation">.</span><span class="token function">doUpdate</span><span class="token punctuation">(</span>userRepository<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">loadById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">invalid</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">successHook</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;失效user：{}&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserResponse</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryUser</span><span class="token punctuation">(</span><span class="token class-name">QueryRequest</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserQueryRequest</span><span class="token punctuation">&gt;</span></span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> page <span class="token operator">=</span> userRepository<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> query<span class="token punctuation">,</span> criteriaBuilder<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// 拼接User实体类上的查询条件</span>
      <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Predicate</span><span class="token punctuation">&gt;</span></span> predicates <span class="token operator">=</span> <span class="token class-name">UserPredicate</span><span class="token punctuation">.</span><span class="token function">predicate</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> criteriaBuilder<span class="token punctuation">,</span>
          request<span class="token punctuation">.</span><span class="token function">getQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">getMatchMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> userMapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// 拼接UserPhonePassword实体类上的查询条件</span>
      <span class="token class-name">Join</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">,</span> <span class="token class-name">UserPhonePassword</span><span class="token punctuation">&gt;</span></span> phonePasswordJoin <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token class-name">User_</span><span class="token punctuation">.</span>phonePassword<span class="token punctuation">,</span>
          <span class="token class-name">JoinType</span><span class="token punctuation">.</span><span class="token constant">LEFT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      predicates<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token class-name">UserPhonePasswordPredicate</span><span class="token punctuation">.</span><span class="token function">predicate</span><span class="token punctuation">(</span>phonePasswordJoin<span class="token punctuation">,</span> criteriaBuilder<span class="token punctuation">,</span>
          request<span class="token punctuation">.</span><span class="token function">getQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPhonePassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">getMatchMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> phonePasswordMapper<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token class-name">SpecificationUtils</span><span class="token punctuation">.</span><span class="token function">conjunction</span><span class="token punctuation">(</span>predicates<span class="token punctuation">,</span> criteriaBuilder<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">toPageable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> page<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>userMapper<span class="token operator">::</span><span class="token function">entity2Response</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="predicate" tabindex="-1"><a class="header-anchor" href="#predicate" aria-hidden="true">#</a> Predicate</h3><p>在Predicate中可以定义动态的查询条件，根据参数值是否存在来确定是否要拼接条件。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserPredicate</span> <span class="token punctuation">{</span>

  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Predicate</span><span class="token punctuation">&gt;</span></span> <span class="token function">predicate</span><span class="token punctuation">(</span><span class="token class-name">From</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> root<span class="token punctuation">,</span> <span class="token class-name">CriteriaBuilder</span> criteriaBuilder<span class="token punctuation">,</span>
      <span class="token class-name">UserQueryRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">QueryRequest<span class="token punctuation">.</span>MatchMode</span> matchMode<span class="token punctuation">,</span> <span class="token class-name">UserMapper</span> userMapper<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Predicate</span><span class="token punctuation">&gt;</span></span> predicates <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">User</span> requestQuery <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">queryRequest2Entity</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>requestQuery<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      predicates<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>criteriaBuilder<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">User_</span><span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span> requestQuery<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>requestQuery<span class="token punctuation">.</span><span class="token function">getNickname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      predicates<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>criteriaBuilder<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">User_</span><span class="token punctuation">.</span>nickname<span class="token punctuation">)</span><span class="token punctuation">,</span>
          matchMode<span class="token punctuation">.</span><span class="token function">toPredicate</span><span class="token punctuation">(</span>requestQuery<span class="token punctuation">.</span><span class="token function">getNickname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 根据</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>requestQuery<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      predicates<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>criteriaBuilder<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">User_</span><span class="token punctuation">.</span>gender<span class="token punctuation">)</span><span class="token punctuation">,</span> requestQuery<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> predicates<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="repository" tabindex="-1"><a class="header-anchor" href="#repository" aria-hidden="true">#</a> Repository</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserRepository</span> <span class="token keyword">extends</span> <span class="token class-name">BaseRepository</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="后台管理模板" tabindex="-1"><a class="header-anchor" href="#后台管理模板" aria-hidden="true">#</a> 后台管理模板</h2>`,7),S=n("img",{src:r},null,-1),x=n("p",null,"图2 后台管理模板",-1),C=p('<ul><li>view：展示页面</li><li>query：查询框</li><li>table：数据展示</li><li>dialog：对话框，内涵create表单和update表单。</li><li>createForm：创建表单</li><li>updateForm：更新表单</li><li>common：表格列，查询条件，创建/更新表单项</li><li>store：状态管理</li></ul><h3 id="view" tabindex="-1"><a class="header-anchor" href="#view" aria-hidden="true">#</a> View</h3>',2),R=n("img",{src:d},null,-1),_=n("p",null,"图3 展示页面",-1),T=n("p",null,"View页面内包含了Query, Table, Dialog。三个组件。View页面组合这些组件并将页面注册到路由中用于访问。",-1),I=n("h3",{id:"query",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#query","aria-hidden":"true"},"#"),s(" Query")],-1),D=n("img",{src:v},null,-1),P=n("p",null,"图4 查询框",-1),F=p(`<p>Query组件点击查询会携带当前的条件去分页请求数组并且刷新表格<code>userStore.reloadTableData({query: query.value, matchMode: matchMode.value})</code>。</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tsx<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ElButton<span class="token punctuation">,</span> ElForm<span class="token punctuation">,</span> ElFormItem<span class="token punctuation">,</span> ElOption<span class="token punctuation">,</span> ElSelect<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;element-plus&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>defineComponent<span class="token punctuation">,</span> toRefs<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>useUserStore<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../store/user-store&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>storeToRefs<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>matchModeList<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/constants&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>userQueryItemList<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./UserCommon&#39;</span>

  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> userStore <span class="token operator">=</span> <span class="token function">useUserStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span>queryData<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">storeToRefs</span><span class="token punctuation">(</span>userStore<span class="token punctuation">)</span>
      <span class="token comment">// query是一个响应式的变量 const query= ref({})</span>
      <span class="token comment">// matchMode同理</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span>query<span class="token punctuation">,</span> matchMode<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">toRefs</span><span class="token punctuation">(</span>queryData<span class="token punctuation">.</span>value<span class="token punctuation">)</span>

      <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
          <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;search&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>ElForm inline labelWidth<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">60</span><span class="token punctuation">}</span> size<span class="token operator">=</span><span class="token string">&quot;small&quot;</span><span class="token operator">&gt;</span>
              <span class="token punctuation">{</span><span class="token comment">/* 导入查询条件 用户昵称：, 性别：， 手机号: */</span><span class="token punctuation">}</span>
              <span class="token punctuation">{</span><span class="token function">userQueryItemList</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">)</span><span class="token punctuation">}</span>
              <span class="token operator">&lt;</span>ElFormItem label<span class="token operator">=</span><span class="token string">&quot; &quot;</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
                  <span class="token operator">&lt;</span>ElSelect v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token punctuation">{</span>matchMode<span class="token punctuation">.</span>value<span class="token punctuation">}</span> placeholder<span class="token operator">=</span><span class="token string">&quot;匹配模式&quot;</span><span class="token operator">&gt;</span>
                    <span class="token punctuation">{</span>matchModeList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
                        <span class="token operator">&lt;</span>ElOption key<span class="token operator">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>value<span class="token punctuation">}</span> label<span class="token operator">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>label<span class="token punctuation">}</span> value<span class="token operator">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>value<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>ElOption<span class="token operator">&gt;</span>
                    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
                  <span class="token operator">&lt;</span><span class="token operator">/</span>ElSelect<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;btn-wrapper&quot;</span><span class="token operator">&gt;</span>
                  <span class="token operator">&lt;</span>ElButton
                      type<span class="token operator">=</span><span class="token string">&quot;primary&quot;</span>
                      size<span class="token operator">=</span><span class="token string">&quot;small&quot;</span>
                      onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        <span class="token comment">// 调用Store中方法刷新表格中的数据，携带新的查询条件。</span>
                        userStore<span class="token punctuation">.</span><span class="token function">reloadTableData</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">query</span><span class="token operator">:</span> query<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token literal-property property">matchMode</span><span class="token operator">:</span> matchMode<span class="token punctuation">.</span>value<span class="token punctuation">}</span><span class="token punctuation">)</span>
                      <span class="token punctuation">}</span><span class="token punctuation">}</span>
                  <span class="token operator">&gt;</span>
                    <span class="token punctuation">{</span><span class="token string">&#39;查询&#39;</span><span class="token punctuation">}</span>
                  <span class="token operator">&lt;</span><span class="token operator">/</span>ElButton<span class="token operator">&gt;</span>
                  <span class="token operator">&lt;</span>ElButton
                      type<span class="token operator">=</span><span class="token string">&quot;warning&quot;</span>
                      size<span class="token operator">=</span><span class="token string">&quot;small&quot;</span>
                      onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        userStore<span class="token punctuation">.</span><span class="token function">restQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                      <span class="token punctuation">}</span><span class="token punctuation">}</span>
                  <span class="token operator">&gt;</span>
                    <span class="token punctuation">{</span><span class="token string">&#39;重置&#39;</span><span class="token punctuation">}</span>
                  <span class="token operator">&lt;</span><span class="token operator">/</span>ElButton<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span><span class="token operator">/</span>ElFormItem<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>ElForm<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scss<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token selector">:deep(.el-form-item)</span> <span class="token punctuation">{</span>
    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">.search</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
    <span class="token property">flex-flow</span><span class="token punctuation">:</span> column nowrap<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>

    <span class="token selector">.btn-wrapper</span> <span class="token punctuation">{</span>
      <span class="token property">margin-left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p><a href="#store">useUserStore</a> UserStore中包含query查询条件。双向绑定到Query组件。<br><a href="#common">userQueryItemList</a> 抽取查询条件</p></div><h3 id="table" tabindex="-1"><a class="header-anchor" href="#table" aria-hidden="true">#</a> Table</h3>`,4),B=n("img",{src:m},null,-1),M=n("p",null,"图5 数据展示表格",-1),j=p(`<p>Table组件有如下功能</p><ol><li>使用ElPagination分页加载数据：<code>loadTableData</code></li><li>点击新增/编辑按钮弹出对话框：<code>handleEdit</code>，<code>handleCreate</code></li><li>多选/单选删除：<code>handleBatchDelete</code>，<code>handleSingleDelete</code>，<code> onSelection-change={handleSelectChange}（多选）</code></li><li>点击列头可以升序/降序排序数据（后端排序）：<code>onSort-change={handleSortChange}</code></li><li>请求后端数据时显示加载动画：<code>v-loading={tableData.value.loading}</code></li></ol><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tsx<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>defineComponent<span class="token punctuation">,</span> onMounted<span class="token punctuation">,</span> toRefs<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ElButton<span class="token punctuation">,</span> ElIcon<span class="token punctuation">,</span> ElMessageBox<span class="token punctuation">,</span> ElPagination<span class="token punctuation">,</span> ElTable<span class="token punctuation">,</span> ElTableColumn<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;element-plus&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>BaseEntity<span class="token punctuation">,</span> User<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/typings&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>Delete<span class="token punctuation">,</span> Edit<span class="token punctuation">,</span> Plus<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@element-plus/icons-vue&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>useUserStore<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../store/user-store&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>storeToRefs<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>deleteUser<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/api/user&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>assertSuccess<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/common&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>userTableItemList<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./UserCommon&#39;</span>

  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> userStore <span class="token operator">=</span> <span class="token function">useUserStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span>
        loadTableData<span class="token punctuation">,</span>
        reloadTableData<span class="token punctuation">,</span>
        openDialog<span class="token punctuation">,</span>
        restForm<span class="token punctuation">,</span>
        handleSelectChange<span class="token punctuation">,</span>
        handleSortChange<span class="token punctuation">,</span>
        getTableSelectedRows
      <span class="token punctuation">}</span> <span class="token operator">=</span> userStore
      <span class="token keyword">const</span> <span class="token punctuation">{</span>tableData<span class="token punctuation">,</span> table<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">storeToRefs</span><span class="token punctuation">(</span>userStore<span class="token punctuation">)</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span>pageData<span class="token punctuation">,</span> queryRequest<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">toRefs</span><span class="token punctuation">(</span>tableData<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
      <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">reloadTableData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token keyword">const</span> <span class="token function-variable function">handleEdit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">row</span><span class="token operator">:</span> User</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">openDialog</span><span class="token punctuation">(</span><span class="token string">&#39;UPDATE&#39;</span><span class="token punctuation">)</span>
        <span class="token function">restForm</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">const</span> <span class="token function-variable function">handleCreate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">row</span><span class="token operator">:</span> User</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">openDialog</span><span class="token punctuation">(</span><span class="token string">&#39;CREATE&#39;</span><span class="token punctuation">)</span>
        <span class="token function">restForm</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">const</span> <span class="token function-variable function">handleSingleDelete</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">row</span><span class="token operator">:</span> BaseEntity</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">handleDelete</span><span class="token punctuation">(</span><span class="token punctuation">[</span>row<span class="token punctuation">.</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">const</span> <span class="token function-variable function">handleBatchDelete</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">handleDelete</span><span class="token punctuation">(</span><span class="token function">getTableSelectedRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">row</span><span class="token operator">:</span> BaseEntity</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> row<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">const</span> <span class="token function-variable function">handleDelete</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">ids</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        ElMessageBox<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&#39;此操作将删除数据且无法恢复, 是否继续?&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;警告&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">confirmButtonText</span><span class="token operator">:</span> <span class="token string">&#39;确定&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">cancelButtonText</span><span class="token operator">:</span> <span class="token string">&#39;取消&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;warning&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">deleteUser</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">assertSuccess</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reloadTableData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
          <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;button-section&quot;</span><span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span>ElButton
                  type<span class="token operator">=</span><span class="token string">&quot;success&quot;</span>
                  size<span class="token operator">=</span><span class="token string">&quot;small&quot;</span>
                  onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token function">handleCreate</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">}</span> <span class="token keyword">as</span> User<span class="token punctuation">)</span>
                  <span class="token punctuation">}</span><span class="token punctuation">}</span>
              <span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>ElIcon<span class="token operator">&gt;</span>
                  <span class="token operator">&lt;</span>Plus<span class="token operator">/</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>ElIcon<span class="token operator">&gt;</span>
                新增
              <span class="token operator">&lt;</span><span class="token operator">/</span>ElButton<span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span>ElButton
                  type<span class="token operator">=</span><span class="token string">&quot;danger&quot;</span>
                  size<span class="token operator">=</span><span class="token string">&quot;small&quot;</span>
                  onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token function">handleBatchDelete</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                  <span class="token punctuation">}</span><span class="token punctuation">}</span>
              <span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>ElIcon<span class="token operator">&gt;</span>
                  <span class="token operator">&lt;</span>Delete<span class="token operator">/</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>ElIcon<span class="token operator">&gt;</span>
                删除
              <span class="token operator">&lt;</span><span class="token operator">/</span>ElButton<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
            <span class="token punctuation">{</span><span class="token comment">/* ref={table} ：将ElTable实例绑定到table变量上。table.value就可以调用ElTable的方法了 */</span><span class="token punctuation">}</span>
            <span class="token punctuation">{</span><span class="token comment">/* onSelection-change={handleSelectChange}：当表格选择生改变时，tableData.value.tableSelectedRows也会随之改变 */</span><span class="token punctuation">}</span>
            <span class="token punctuation">{</span><span class="token comment">/* data={pageData.value.list} : 表格内的数据定义在Store中，也是响应式的。当pageData发生改变时表格内的数据也会改变 */</span><span class="token punctuation">}</span>
            <span class="token punctuation">{</span><span class="token comment">/*  v-loading={tableData.value.loading} : 请求分页数据时出现加载图标，后端成功响应数据之后取消加载 */</span><span class="token punctuation">}</span>
            <span class="token operator">&lt;</span>ElTable
                ref<span class="token operator">=</span><span class="token punctuation">{</span>table<span class="token punctuation">}</span>
                data<span class="token operator">=</span><span class="token punctuation">{</span>pageData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>list<span class="token punctuation">}</span>
                border<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span>
                onSelection<span class="token operator">-</span>change<span class="token operator">=</span><span class="token punctuation">{</span>handleSelectChange<span class="token punctuation">}</span>
                onSort<span class="token operator">-</span>change<span class="token operator">=</span><span class="token punctuation">{</span>handleSortChange<span class="token punctuation">}</span>
                v<span class="token operator">-</span>loading<span class="token operator">=</span><span class="token punctuation">{</span>tableData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>loading<span class="token punctuation">}</span>
            <span class="token operator">&gt;</span>
              <span class="token punctuation">{</span><span class="token comment">/* 表格多选 */</span><span class="token punctuation">}</span>
              <span class="token operator">&lt;</span>ElTableColumn type<span class="token operator">=</span><span class="token string">&quot;selection&quot;</span> width<span class="token operator">=</span><span class="token string">&quot;55&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>ElTableColumn<span class="token operator">&gt;</span>
              <span class="token punctuation">{</span><span class="token comment">/* 导入表格的列 */</span><span class="token punctuation">}</span>
              <span class="token punctuation">{</span><span class="token function">userTableItemList</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> pageData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>list<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">column</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> column<span class="token punctuation">)</span><span class="token punctuation">}</span>
              <span class="token operator">&lt;</span>ElTableColumn label<span class="token operator">=</span><span class="token string">&quot;操作&quot;</span> fixed<span class="token operator">=</span><span class="token string">&quot;right&quot;</span> width<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">280</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
                <span class="token punctuation">{</span><span class="token punctuation">{</span>
                  <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>row<span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">row</span><span class="token operator">:</span> User <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
                      <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
                        <span class="token operator">&lt;</span>ElButton
                            <span class="token keyword">class</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;edit-btn&#39;</span><span class="token punctuation">}</span>
                            link
                            size<span class="token operator">=</span><span class="token string">&quot;small&quot;</span>
                            type<span class="token operator">=</span><span class="token string">&quot;primary&quot;</span>
                            onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                              <span class="token function">handleEdit</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span>
                            <span class="token punctuation">}</span><span class="token punctuation">}</span>
                        <span class="token operator">&gt;</span>
                          <span class="token operator">&lt;</span>ElIcon<span class="token operator">&gt;</span>
                            <span class="token operator">&lt;</span>Edit<span class="token operator">/</span><span class="token operator">&gt;</span>
                          <span class="token operator">&lt;</span><span class="token operator">/</span>ElIcon<span class="token operator">&gt;</span>
                        <span class="token operator">&lt;</span><span class="token operator">/</span>ElButton<span class="token operator">&gt;</span>
                        <span class="token operator">&lt;</span>ElButton
                            <span class="token keyword">class</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;delete-btn&#39;</span><span class="token punctuation">}</span>
                            link
                            size<span class="token operator">=</span><span class="token string">&quot;small&quot;</span>
                            type<span class="token operator">=</span><span class="token string">&quot;primary&quot;</span>
                            onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                              <span class="token function">handleSingleDelete</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span>
                            <span class="token punctuation">}</span><span class="token punctuation">}</span>
                        <span class="token operator">&gt;</span>
                          <span class="token operator">&lt;</span>ElIcon<span class="token operator">&gt;</span>
                            <span class="token operator">&lt;</span>Delete<span class="token operator">/</span><span class="token operator">&gt;</span>
                          <span class="token operator">&lt;</span><span class="token operator">/</span>ElIcon<span class="token operator">&gt;</span>
                        <span class="token operator">&lt;</span><span class="token operator">/</span>ElButton<span class="token operator">&gt;</span>
                      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
                  <span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">}</span>
              <span class="token operator">&lt;</span><span class="token operator">/</span>ElTableColumn<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>ElTable<span class="token operator">&gt;</span>
            <span class="token punctuation">{</span><span class="token comment">/* 分页组件 */</span><span class="token punctuation">}</span>
            <span class="token operator">&lt;</span>ElPagination
                style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token literal-property property">marginTop</span><span class="token operator">:</span> <span class="token string">&#39;30px&#39;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
                v<span class="token operator">-</span>model<span class="token operator">:</span>currentPage<span class="token operator">=</span><span class="token punctuation">{</span>queryRequest<span class="token punctuation">.</span>value<span class="token punctuation">.</span>pageNum<span class="token punctuation">}</span>
                v<span class="token operator">-</span>model<span class="token operator">:</span>pageSize<span class="token operator">=</span><span class="token punctuation">{</span>queryRequest<span class="token punctuation">.</span>value<span class="token punctuation">.</span>pageSize<span class="token punctuation">}</span>
                pageSizes<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
                total<span class="token operator">=</span><span class="token punctuation">{</span>pageData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>total<span class="token punctuation">}</span>
                background
                small
                layout<span class="token operator">=</span><span class="token string">&quot;prev, pager, next, jumper, total, sizes&quot;</span>
                onCurrent<span class="token operator">-</span>change<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">pageNum</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">loadTableData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>pageNum<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
                onSize<span class="token operator">-</span>change<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">pageSize</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">loadTableData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>pageSize<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
            <span class="token operator">/</span><span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scss<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token selector">.button-section</span> <span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 20px 0<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p><a href="#store">useUserStore</a> UserStore中包含Table组件中通用的pageData（分页结果），queryRequest（分页请求），table（ElTable实例），loading（加载动画控制）以及其他函数。<br><a href="#common">userTableItemList</a> 抽取Table中的列，方便后续的其他业务复用。</p></div><h3 id="dialog" tabindex="-1"><a class="header-anchor" href="#dialog" aria-hidden="true">#</a> Dialog</h3>`,5),L=n("img",{src:b},null,-1),Q=n("p",null,"图6 数据展示表格",-1),O=p(`<p>点击编辑或者新增按钮时，会修改Store中的dialogData。由于Dialog和Table中使用的都是全局状态管理共享dialogData变量。因此Dialog会弹出，对话框内部根据是编辑还是新增显示updateFrom或者createForm。</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tsx<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ElDialog<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;element-plus&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>defineComponent<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>storeToRefs<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>useUserStore<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../store/user-store&#39;</span>
  <span class="token keyword">import</span> UserCreateForm <span class="token keyword">from</span> <span class="token string">&#39;./UserCreateForm.vue&#39;</span>
  <span class="token keyword">import</span> UserUpdateForm <span class="token keyword">from</span> <span class="token string">&#39;./UserUpdateForm.vue&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>type EditMode<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/typings&#39;</span>

  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      UserCreateForm<span class="token punctuation">,</span>
      UserUpdateForm
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> userStore <span class="token operator">=</span> <span class="token function">useUserStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span>dialogData<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">storeToRefs</span><span class="token punctuation">(</span>userStore<span class="token punctuation">)</span>
      <span class="token keyword">const</span> <span class="token literal-property property">formMap</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span>EditMode<span class="token punctuation">,</span> <span class="token constant">JSX</span><span class="token punctuation">.</span>Element<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token constant">CREATE</span><span class="token operator">:</span> <span class="token operator">&lt;</span>UserCreateForm<span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
        <span class="token constant">UPDATE</span><span class="token operator">:</span> <span class="token operator">&lt;</span>UserUpdateForm<span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
          <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>ElDialog
                v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token punctuation">{</span>dialogData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>visible<span class="token punctuation">}</span>
                title<span class="token operator">=</span><span class="token punctuation">{</span>dialogData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>title<span class="token punctuation">}</span>
                width<span class="token operator">=</span><span class="token punctuation">{</span>dialogData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>width<span class="token punctuation">}</span>
            <span class="token operator">&gt;</span>
              <span class="token punctuation">{</span><span class="token comment">/* 根据是创建还是编辑显示不同表单 */</span><span class="token punctuation">}</span>
              <span class="token punctuation">{</span><span class="token punctuation">{</span>
                <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> formMap<span class="token punctuation">[</span>dialogData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>mode<span class="token punctuation">]</span>
              <span class="token punctuation">}</span><span class="token punctuation">}</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>ElDialog<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scss<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p><a href="#store">useUserStore</a> UserStore中包含Dialog组件中通用的dialogData以及其他函数。</p></div><h3 id="updateform" tabindex="-1"><a class="header-anchor" href="#updateform" aria-hidden="true">#</a> UpdateForm</h3><p>更新表单功能如下</p><ol><li>监听对话框是否打开，打开则执行init方法，根据id请求数据：<code>watch</code>。</li><li>请求数据之后需要将后端返回的数据转成前端可以使用的格式：<code>..._.omitBy(后端数据,_.isNull)</code>。</li><li>提交表单时对数据进行处理，提交成功后关闭对话框并刷新表格：<code>handleConfirm</code>。</li></ol><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tsx<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>storeToRefs<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>defineComponent<span class="token punctuation">,</span> watch<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>useUserStore<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../store/user-store&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>findUserById<span class="token punctuation">,</span> getUserRole<span class="token punctuation">,</span> saveUser<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/api/user&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>assertSuccess<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/common&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ElForm<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;element-plus&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>Role<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/typings&#39;</span>
  <span class="token keyword">import</span> FooterButton <span class="token keyword">from</span> <span class="token string">&#39;@/components/base/dialog/FooterButton.vue&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>userFormItemList<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./UserCommon&#39;</span>
  <span class="token keyword">import</span> _ <span class="token keyword">from</span> <span class="token string">&#39;lodash&#39;</span>

  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> userStore <span class="token operator">=</span> <span class="token function">useUserStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span>closeDialog<span class="token punctuation">,</span> reloadTableData<span class="token punctuation">}</span> <span class="token operator">=</span> userStore
      <span class="token keyword">const</span> <span class="token punctuation">{</span>formData<span class="token punctuation">,</span> dialogData<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">storeToRefs</span><span class="token punctuation">(</span>userStore<span class="token punctuation">)</span>
      <span class="token keyword">const</span> <span class="token function-variable function">init</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        dialogData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">&#39;编辑&#39;</span>
        <span class="token comment">// 加载用户的信息合并默认值，防止空指针异常</span>
        formData<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">{</span>
          <span class="token operator">...</span>formData<span class="token punctuation">.</span>value<span class="token punctuation">,</span>
          <span class="token comment">// 忽略值是null的属性</span>
          <span class="token operator">...</span>_<span class="token punctuation">.</span><span class="token function">omitBy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">findUserById</span><span class="token punctuation">(</span>formData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>result<span class="token punctuation">,</span> _<span class="token punctuation">.</span>isNull<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 加载用户的角色信息</span>
        <span class="token function">getUserRole</span><span class="token punctuation">(</span>formData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          formData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>selectedRoleIds <span class="token operator">=</span> res<span class="token punctuation">.</span>result<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">role</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> role<span class="token punctuation">.</span>id<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// 当对话框打开时执行初始化操作</span>
      <span class="token function">watch</span><span class="token punctuation">(</span>
          <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> dialogData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>visible<span class="token punctuation">,</span>
          <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span><span class="token literal-property property">immediate</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span>
      <span class="token punctuation">)</span>
      <span class="token comment">// 提交时对表单进行处理</span>
      <span class="token keyword">const</span> <span class="token function-variable function">handleConfirm</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        formData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>roles <span class="token operator">=</span> formData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>selectedRoleIds<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> role <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Role</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          role<span class="token punctuation">.</span>id <span class="token operator">=</span> id
          <span class="token keyword">return</span> role
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token comment">// 操作成功则关闭对话框并重新加载表格</span>
        <span class="token function">saveUser</span><span class="token punctuation">(</span>formData<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">assertSuccess</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">closeDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token function">reloadTableData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
          <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;update-form&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>ElForm labelWidth<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">120</span><span class="token punctuation">}</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;form&#39;</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
              <span class="token punctuation">{</span><span class="token function">userFormItemList</span><span class="token punctuation">(</span>formData<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>ElForm<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>FooterButton onClose<span class="token operator">=</span><span class="token punctuation">{</span>closeDialog<span class="token punctuation">}</span> onConfirm<span class="token operator">=</span><span class="token punctuation">{</span>handleConfirm<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>FooterButton<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p><a href="#store">useUserStore</a> UserStore中包含Form组件中通用的formData以及其他函数。</p></div><h3 id="createform" tabindex="-1"><a class="header-anchor" href="#createform" aria-hidden="true">#</a> CreateForm</h3><p>创建表单和更新表单类似。</p><h3 id="common" tabindex="-1"><a class="header-anchor" href="#common" aria-hidden="true">#</a> Common</h3><p>以UserCommon.tsx为例子，它抽取了User相关的表格列，查询条件，创建/更新表单项。相关的枚举值也会存放在这里。</p><p>考虑到下面的这些TableItem很容易被复用，所以采用<code>columnProvider($index).nickname</code>代替<code>row.nickname</code>。这种方式可以降低耦合性，有些业务可能关联了User表也想展示用户的信息，比如展示订单的用户信息，<code>userUserTableItemList((index)=&gt; pageData.value.list[index].user)</code>，此时采用第一种方式订单业务也可以复用用户的表格。</p><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>ElAvatar<span class="token punctuation">,</span> ElFormItem<span class="token punctuation">,</span> ElInput<span class="token punctuation">,</span> ElOption<span class="token punctuation">,</span> ElSelect<span class="token punctuation">,</span> ElTableColumn<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;element-plus&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>User<span class="token punctuation">,</span> <span class="token keyword">type</span> <span class="token class-name">Scope</span><span class="token punctuation">,</span> <span class="token keyword">type</span> <span class="token class-name">OptionEnum</span><span class="token punctuation">,</span> QueryRequest<span class="token punctuation">,</span> Role<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/typings&#39;</span>
<span class="token keyword">import</span> AvatarUpload <span class="token keyword">from</span> <span class="token string">&#39;@/components/avatar/AvatarUpload.vue&#39;</span>
<span class="token keyword">import</span> RemoteSelect<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token keyword">type</span> <span class="token class-name">OptionItem</span><span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/components/base/form/RemoteSelect.vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>queryRole<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/api/role&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> genderList<span class="token operator">:</span> OptionEnum <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>label<span class="token operator">:</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>label<span class="token operator">:</span> <span class="token string">&#39;保密&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>label<span class="token operator">:</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span>
<span class="token punctuation">]</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">userFormItemList</span> <span class="token operator">=</span> <span class="token punctuation">(</span>form<span class="token operator">:</span> User<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ElFormItem</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>用户昵称<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ElInput</span></span> <span class="token attr-name">v-model</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>form<span class="token punctuation">.</span>nickname<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ElFormItem</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ElFormItem</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>用户头像<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AvatarUpload</span></span> <span class="token attr-name"><span class="token namespace">v-model:</span>avatar</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>form<span class="token punctuation">.</span>avatar<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">AvatarUpload</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ElFormItem</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ElFormItem</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>性别<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ElSelect</span></span> <span class="token attr-name">v-model</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>form<span class="token punctuation">.</span>gender<span class="token punctuation">}</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>请选择性别<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
                </span><span class="token punctuation">{</span>genderList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ElOption</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>value<span class="token punctuation">}</span></span> <span class="token attr-name">label</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>label<span class="token punctuation">}</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>value<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ElOption</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ElSelect</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ElFormItem</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ElFormItem</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>手机号<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ElInput</span></span> <span class="token attr-name">v-model</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>form<span class="token punctuation">.</span>phonePassword<span class="token punctuation">.</span>phoneNumber<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ElFormItem</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ElFormItem</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>角色<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            &lt;RemoteSelect
                v-model=</span><span class="token punctuation">{</span>form<span class="token punctuation">.</span>selectedRoleIds<span class="token punctuation">}</span><span class="token plain-text">
                multiple
                queryOptions=</span><span class="token punctuation">{</span><span class="token keyword">async</span> <span class="token punctuation">(</span>keyword<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">queryRole</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">QueryRequest<span class="token operator">&lt;</span>Role<span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>name<span class="token operator">:</span> keyword<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> res<span class="token punctuation">.</span>result<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>role<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token punctuation">{</span>label<span class="token operator">:</span> role<span class="token punctuation">.</span>name<span class="token punctuation">,</span> value<span class="token operator">:</span> role<span class="token punctuation">.</span>id<span class="token punctuation">}</span> satisfies OptionItem
                    <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token plain-text">
            &gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">RemoteSelect</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ElFormItem</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">userQueryItemList</span> <span class="token operator">=</span> <span class="token punctuation">(</span>query<span class="token operator">:</span> User<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ElFormItem</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>用户昵称<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ElInput</span></span> <span class="token attr-name">v-model</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>query<span class="token punctuation">.</span>nickname<span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>width<span class="token operator">:</span> <span class="token string">&#39;100%&#39;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ElFormItem</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ElFormItem</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>性别<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ElSelect</span></span>
                <span class="token attr-name">v-model</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>query<span class="token punctuation">.</span>gender<span class="token punctuation">}</span></span>
                <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>请选择性别<span class="token punctuation">&quot;</span></span>
                <span class="token attr-name">fitInputWidth</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span></span>
                <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>width<span class="token operator">:</span> <span class="token string">&#39;100%&#39;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span>
            <span class="token punctuation">&gt;</span></span><span class="token plain-text">
                </span><span class="token punctuation">{</span>genderList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ElOption</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>value<span class="token punctuation">}</span></span> <span class="token attr-name">label</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>label<span class="token punctuation">}</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>value<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ElOption</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ElSelect</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ElFormItem</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ElFormItem</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>手机号<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ElInput</span></span> <span class="token attr-name">v-model</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>query<span class="token punctuation">.</span>phonePassword<span class="token punctuation">.</span>phoneNumber<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ElFormItem</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">UserScope</span> <span class="token operator">=</span> Scope<span class="token operator">&lt;</span>User<span class="token operator">&gt;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">userTableItemList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function-variable function">columnProvider</span><span class="token operator">:</span> <span class="token punctuation">(</span>index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> User<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ElTableColumn</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>用户昵称<span class="token punctuation">&quot;</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nickname<span class="token punctuation">&quot;</span></span> <span class="token attr-name">sortable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token punctuation">{</span><span class="token punctuation">{</span>
                <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>$index<span class="token punctuation">}</span><span class="token operator">:</span> UserScope<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token function">columnProvider</span><span class="token punctuation">(</span>$index<span class="token punctuation">)</span><span class="token punctuation">.</span>nickname
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ElTableColumn</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ElTableColumn</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>用户头像<span class="token punctuation">&quot;</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>avatar<span class="token punctuation">&quot;</span></span> <span class="token attr-name">sortable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token punctuation">{</span><span class="token punctuation">{</span>
                <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>$index<span class="token punctuation">}</span><span class="token operator">:</span> UserScope<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ElAvatar</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">columnProvider</span><span class="token punctuation">(</span>$index<span class="token punctuation">)</span><span class="token punctuation">.</span>avatar<span class="token punctuation">}</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ElAvatar</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ElTableColumn</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ElTableColumn</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>性别<span class="token punctuation">&quot;</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>gender<span class="token punctuation">&quot;</span></span> <span class="token attr-name">sortable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token punctuation">{</span><span class="token punctuation">{</span>
                <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>$index<span class="token punctuation">}</span><span class="token operator">:</span> UserScope<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">const</span> result <span class="token operator">=</span> genderList<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token function">columnProvider</span><span class="token punctuation">(</span>$index<span class="token punctuation">)</span><span class="token punctuation">.</span>gender<span class="token punctuation">)</span>
                    <span class="token keyword">return</span> result<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> result<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>label <span class="token operator">:</span> <span class="token string">&#39;&#39;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ElTableColumn</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ElTableColumn</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>手机号<span class="token punctuation">&quot;</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>phonePassword.phoneNumber<span class="token punctuation">&quot;</span></span> <span class="token attr-name">sortable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token punctuation">{</span><span class="token punctuation">{</span>
                <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>$index<span class="token punctuation">}</span><span class="token operator">:</span> UserScope<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token function">columnProvider</span><span class="token punctuation">(</span>$index<span class="token punctuation">)</span><span class="token punctuation">.</span>phonePassword<span class="token operator">?.</span>phoneNumber
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ElTableColumn</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="store" tabindex="-1"><a class="header-anchor" href="#store" aria-hidden="true">#</a> Store</h3><p>Store同一管理Query,Table,Dialog,Form中涉及的通用变量。方便各个组件都可以对这些变量进行修改。比如当点击新增按钮时，Table组件会修改dialogData打开Dialog。</p>`,16),A={class:"hint-container info"},H=n("p",{class:"hint-container-title"},"相关信息",-1),N=n("br",null,null,-1),V=n("br",null,null,-1),G=n("br",null,null,-1),z=n("br",null,null,-1),J=p(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>queryUser<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/api/user&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>User<span class="token punctuation">,</span> UserPhonePassword<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/typings&#39;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span>defineStore<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span>useTableHelper<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/components/base/table/table-helper&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>useDialogHelper<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/components/base/dialog/dialog-helper&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>useQueryHelper<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/components/base/query/query-helper&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>useFormHelper<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/components/base/form/form-helper&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> useUserStore <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> initQuery <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    initQuery<span class="token punctuation">.</span>phonePassword <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserPhonePassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> initForm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    initForm<span class="token punctuation">.</span>phonePassword <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserPhonePassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    initForm<span class="token punctuation">.</span>selectedRoleIds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

    <span class="token keyword">const</span> tableHelper <span class="token operator">=</span> <span class="token function">useTableHelper</span><span class="token punctuation">(</span>queryUser<span class="token punctuation">,</span> initQuery<span class="token punctuation">)</span>
    <span class="token keyword">const</span> dialogHelper <span class="token operator">=</span> <span class="token function">useDialogHelper</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> queryHelper <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useQueryHelper</span><span class="token generic class-name"><span class="token operator">&lt;</span>User<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>initQuery<span class="token punctuation">)</span>
    <span class="token keyword">const</span> formHelper <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useFormHelper</span><span class="token generic class-name"><span class="token operator">&lt;</span>User<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>initForm<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token operator">...</span>tableHelper<span class="token punctuation">,</span> <span class="token operator">...</span>dialogHelper<span class="token punctuation">,</span> <span class="token operator">...</span>queryHelper<span class="token punctuation">,</span> <span class="token operator">...</span>formHelper<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function $(W,X){const e=c("center"),o=c("RouterLink");return i(),u("div",null,[y,a(e,null,{default:t(()=>[f,w]),_:1}),h,n("div",q,[U,n("p",null,[s("service中使用的"),a(o,{to:"/project/qifan-shop/reference/#entityoperations"},{default:t(()=>[s("EntityOperations")]),_:1}),s("是增改两个操作的流程封装。")])]),E,a(e,null,{default:t(()=>[S,x]),_:1}),C,a(e,null,{default:t(()=>[R,_]),_:1}),T,I,a(e,null,{default:t(()=>[D,P]),_:1}),F,a(e,null,{default:t(()=>[B,M]),_:1}),j,a(e,null,{default:t(()=>[L,Q]),_:1}),O,n("div",A,[H,n("p",null,[s("针对增删改查中场景的变量用组合式的思想抽取出来，方便后续快速编写增删改查。"),N,a(o,{to:"/project/qifan-shop/reference/front/#tablehelper"},{default:t(()=>[s("useTableHelper")]),_:1}),s(" 抽取Table中常用的变量和函数。"),V,a(o,{to:"/project/qifan-shop/reference/front/#dialoghelper"},{default:t(()=>[s("useDialogHelper")]),_:1}),s(" 抽取Dialog中常用的变量和函数。"),G,a(o,{to:"/project/qifan-shop/reference/front/#queryhelper"},{default:t(()=>[s("useQueryHelper")]),_:1}),s(" 抽取Query中的通用变量和函数。"),z,a(o,{to:"/project/qifan-shop/reference/front/#formhelper"},{default:t(()=>[s("useFormHelper")]),_:1}),s(" 抽取UpdateForm/CreateForm中的通用变量和函数。")])]),J])}const K=l(g,[["render",$],["__file","generator.html.vue"]]);export{K as default};
