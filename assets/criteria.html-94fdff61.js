const e=JSON.parse('{"key":"v-02b34382","path":"/knowledge/jpa/hibernate/criteria.html","title":"2. 动态SQL（Criteria）","lang":"zh-CN","frontmatter":{"order":2,"description":"2. 动态SQL（Criteria） 在JPA中写SQL三种方式 JPQL 如果你的SQL语句不是动态的那建议使用JPQL，JPQL和SQL写起来差不多。主要区别是JPQL是面向实体类，SQL是直接面向底层的表。 Criteria Criteria 查询提供了用编程的形式去写JPQL，同时它也是类型安全的。通过它可以编写动态的JPQL，比如where条件动态拼接，order by 动态字段等操作。相比于传统的字符串SQL拼接，它的优点就是类型安全。Criteria你也可以说是JPQL的编程版本。 NativeSQL 由于JPQL提供的是所有数据库通用的写法，如果你想使用具体数据库的特性，可以写NativeSQL（原生SQL）。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/qifan-blog-vuepress2/knowledge/jpa/hibernate/criteria.html"}],["meta",{"property":"og:site_name","content":"起凡Code闲聊"}],["meta",{"property":"og:title","content":"2. 动态SQL（Criteria）"}],["meta",{"property":"og:description","content":"2. 动态SQL（Criteria） 在JPA中写SQL三种方式 JPQL 如果你的SQL语句不是动态的那建议使用JPQL，JPQL和SQL写起来差不多。主要区别是JPQL是面向实体类，SQL是直接面向底层的表。 Criteria Criteria 查询提供了用编程的形式去写JPQL，同时它也是类型安全的。通过它可以编写动态的JPQL，比如where条件动态拼接，order by 动态字段等操作。相比于传统的字符串SQL拼接，它的优点就是类型安全。Criteria你也可以说是JPQL的编程版本。 NativeSQL 由于JPQL提供的是所有数据库通用的写法，如果你想使用具体数据库的特性，可以写NativeSQL（原生SQL）。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-26T15:04:04.000Z"}],["meta",{"property":"article:author","content":"起凡"}],["meta",{"property":"article:modified_time","content":"2023-09-26T15:04:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2. 动态SQL（Criteria）\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-26T15:04:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"起凡\\",\\"url\\":\\"https://www.jarcheng.top\\"}]}"]]},"headers":[{"level":2,"title":"简单的案例","slug":"简单的案例","link":"#简单的案例","children":[{"level":3,"title":"from对象","slug":"from对象","link":"#from对象","children":[]},{"level":3,"title":"字段访问","slug":"字段访问","link":"#字段访问","children":[]}]},{"level":2,"title":"Select","slug":"select","link":"#select","children":[{"level":3,"title":"SelectExpression","slug":"selectexpression","link":"#selectexpression","children":[]},{"level":3,"title":"SelectMultiExpression","slug":"selectmultiexpression","link":"#selectmultiexpression","children":[]},{"level":3,"title":"SelectDto1","slug":"selectdto1","link":"#selectdto1","children":[]},{"level":3,"title":"SelectDto2","slug":"selectdto2","link":"#selectdto2","children":[]},{"level":3,"title":"SelectRoot","slug":"selectroot","link":"#selectroot","children":[]},{"level":3,"title":"SelectMultiRoot","slug":"selectmultiroot","link":"#selectmultiroot","children":[]}]},{"level":2,"title":"条件表达式（Conditional Expressions）","slug":"条件表达式-conditional-expressions","link":"#条件表达式-conditional-expressions","children":[{"level":3,"title":"比较运算","slug":"比较运算","link":"#比较运算","children":[]},{"level":3,"title":"逻辑运算","slug":"逻辑运算","link":"#逻辑运算","children":[]}]}],"git":{"createdTime":1695482163000,"updatedTime":1695740644000,"contributors":[{"name":"qifan","email":"1507906763@qq.com","commits":2}]},"readingTime":{"minutes":6.92,"words":2075},"filePathRelative":"knowledge/jpa/hibernate/criteria.md","localizedDate":"2023年9月23日","excerpt":"<h1> 2. 动态SQL（Criteria）</h1>\\n<p>在JPA中写SQL三种方式</p>\\n<ul>\\n<li>JPQL<br>\\n如果你的SQL语句不是动态的那建议使用JPQL，JPQL和SQL写起来差不多。主要区别是JPQL是面向实体类，SQL是直接面向底层的表。</li>\\n<li>Criteria<br>\\nCriteria 查询提供了用编程的形式去写JPQL，同时它也是类型安全的。通过它可以编写动态的JPQL，比如where条件动态拼接，order by 动态字段等操作。相比于传统的字符串SQL拼接，它的优点就是类型安全。Criteria你也可以说是JPQL的编程版本。</li>\\n<li>NativeSQL<br>\\n由于JPQL提供的是所有数据库通用的写法，如果你想使用具体数据库的特性，可以写NativeSQL（原生SQL）。</li>\\n</ul>","autoDesc":true}');export{e as data};
