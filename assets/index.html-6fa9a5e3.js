import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as i,c as o,e as a,f as n,d as e,a as t}from"./app-5cdac6c5.js";const p="/qifan-blog-vuepress2/assets/next-gpt-web-1635f2ee.png",c="/qifan-blog-vuepress2/assets/import-90377efa.png",d="/qifan-blog-vuepress2/assets/choose-25128c8c.png",u="/qifan-blog-vuepress2/assets/openport-8ca640ba.png",v="/qifan-blog-vuepress2/assets/config-3c78f684.png",b="/qifan-blog-vuepress2/assets/password-5aa51406.png",m="/qifan-blog-vuepress2/assets/result-f67c325e.png",k={},h=t('<h1 id="chatgpt-next-web-搭建教程" tabindex="-1"><a class="header-anchor" href="#chatgpt-next-web-搭建教程" aria-hidden="true">#</a> ChatGPT Next Web 搭建教程</h1><h2 id="_1-2-介绍" tabindex="-1"><a class="header-anchor" href="#_1-2-介绍" aria-hidden="true">#</a> 1.2 介绍</h2><h3 id="_1-2-1-自我介绍" tabindex="-1"><a class="header-anchor" href="#_1-2-1-自我介绍" aria-hidden="true">#</a> 1.2.1 自我介绍</h3><p>我是起凡，一名全栈程序员，刚刚毕业于华侨大学。主要技术栈后端SpringBoot,Jpa, MongoDb等。前端Vue3, Typescript, Taro小程序。</p><h3 id="_1-2-2-chatgpt-next-web-介绍" tabindex="-1"><a class="header-anchor" href="#_1-2-2-chatgpt-next-web-介绍" aria-hidden="true">#</a> 1.2.2 ChatGPT Next Web 介绍</h3><p>ChatGPT Next Web可以使用OpenAI官方提供的API。比如ChatGPT3.5模型，ChatGPT4.0模型等等。并且提供了一个WEB界面将我们输入的内容转发给OpenAI。同时支持多聊天窗口会话等。</p><div style="text-align:center;"><img src="'+p+`" width="838" alt=""></div><h3 id="_1-2-3-被封锁的中国区域" tabindex="-1"><a class="header-anchor" href="#_1-2-3-被封锁的中国区域" aria-hidden="true">#</a> 1.2.3 被封锁的中国区域</h3><p>在中国地区无法调用OpenAI的接口，意味着即使你在本地部署了ChatGPT Next Web你无法与之对话。要解决上面的问题只能通过代理。</p><ul><li>使用稳定的代理服务软件和节点比如Windows的Clash for windows/v2ayN, linux的v2raya, mac下的Clash for mac等。</li><li>配置代理软件让ChatGPT Next Web能够走代理</li></ul><h2 id="_1-3-先决条件" tabindex="-1"><a class="header-anchor" href="#_1-3-先决条件" aria-hidden="true">#</a> 1.3 先决条件</h2><h3 id="_1-3-1-docker" tabindex="-1"><a class="header-anchor" href="#_1-3-1-docker" aria-hidden="true">#</a> 1.3.1 Docker</h3><p>ChatGPT Next<br> Web可以通过源码安装，这种方式对于不熟悉开发的人来说要安装许多的软件和配置很多环境所以不推荐。使用Docker安装只需要一行命令。所以我推荐使用Docker来安装。如果是Windows或者Mac用户下载Docker<br> Desktop。</p><p>请根据不同的操作系统安装docker。下面以Centos7操作系统为例安装docker。</p><table><thead><tr><th>家族</th><th>发行版</th></tr></thead><tbody><tr><td>Debian</td><td>Debian, Ubuntu, Mint, Pop!_OS, Elementary OS</td></tr><tr><td>Red Hat</td><td>Red Hat Enterprise Linux, Fedora, CentOS, AlmaLinux, Rocky Linux</td></tr></tbody></table><ol><li><p>配置yum 仓库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token parameter variable">-y</span> yum-utils
<span class="token function">sudo</span> yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>卸载旧版本</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">sudo</span> yum remove <span class="token function">docker</span> <span class="token punctuation">\\</span>
              docker-client <span class="token punctuation">\\</span>
              docker-client-latest <span class="token punctuation">\\</span>
              docker-common <span class="token punctuation">\\</span>
              docker-latest <span class="token punctuation">\\</span>
              docker-latest-logrotate <span class="token punctuation">\\</span>
              docker-logrotate <span class="token punctuation">\\</span>
              docker-engine
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>安装docker</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">sudo</span> yum <span class="token function">install</span> docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>启动docker</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span>
<span class="token function">sudo</span> systemctl start <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>验证</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">docker</span> run hello-world
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h3 id="_1-3-2-v2raya" tabindex="-1"><a class="header-anchor" href="#_1-3-2-v2raya" aria-hidden="true">#</a> 1.3.2 V2rayA</h3><p>将V2rayA安装到容器内与ChatGPT Next Web组成网络可以让ChatGPT Next Web走代理向OpenAI发请求。</p><ol><li><p>创建网络</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">docker</span> network create <span class="token punctuation">\\</span>
 <span class="token parameter variable">--driver</span><span class="token operator">=</span>bridge <span class="token punctuation">\\</span>
 <span class="token parameter variable">--subnet</span><span class="token operator">=</span><span class="token number">172.28</span>.0.0/16 <span class="token punctuation">\\</span>
 --ip-range<span class="token operator">=</span><span class="token number">172.28</span>.5.0/24 <span class="token punctuation">\\</span>
 <span class="token parameter variable">--gateway</span><span class="token operator">=</span><span class="token number">172.28</span>.5.254 <span class="token punctuation">\\</span>
 gpt-network
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>运行V2rayA容器</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token punctuation">\\</span>
<span class="token parameter variable">--privileged</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">--network</span><span class="token operator">=</span>gpt-network <span class="token punctuation">\\</span>
--network-alias<span class="token operator">=</span>v2raya <span class="token punctuation">\\</span>
<span class="token parameter variable">--name</span> v2raya <span class="token punctuation">\\</span>
<span class="token parameter variable">-p</span> <span class="token number">2017</span>:2017 <span class="token punctuation">\\</span>
<span class="token parameter variable">--ip</span><span class="token operator">=</span><span class="token number">172.28</span>.5.1 <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">V2RAYA_ADDRESS</span><span class="token operator">=</span><span class="token number">0.0</span>.0.0:2017 <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /lib/modules:/lib/modules:ro <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /etc/resolv.conf:/etc/resolv.conf <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /etc/v2raya:/etc/v2raya <span class="token punctuation">\\</span>
mzz2017/v2raya
<span class="token comment"># 打开端口</span>
firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>docker --add-port<span class="token operator">=</span><span class="token number">2017</span>/tcp <span class="token parameter variable">--permanent</span>
firewall-cmd <span class="token parameter variable">--reload</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>配置V2rayA</p><ul><li><strong>导入订阅地址</strong><br><img src="`+c+'" alt="" loading="lazy"></li><li><strong>选择订阅地址</strong><br><img src="'+d+'" alt="选择订阅" loading="lazy"></li><li><strong>允许局域网访问</strong><br><img src="'+u+'" alt="" loading="lazy"></li><li><strong>开启代理</strong><br><img src="'+v+'" alt="" loading="lazy"></li></ul></li></ol><h2 id="_1-4-安装-chatgpt-next-web" tabindex="-1"><a class="header-anchor" href="#_1-4-安装-chatgpt-next-web" aria-hidden="true">#</a> 1.4 安装 ChatGPT Next Web</h2>',20),g={href:"https://platform.openai.com/account/api-keys",target:"_blank",rel:"noopener noreferrer"},_=t(`<li>Docker安装ChatGPT Next Web<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">3000</span>:3000 <span class="token punctuation">\\</span>
   <span class="token parameter variable">-e</span> <span class="token assign-left variable">OPENAI_API_KEY</span><span class="token operator">=</span><span class="token string">&quot;api-keys&quot;</span> <span class="token punctuation">\\</span>
   <span class="token parameter variable">-e</span> <span class="token assign-left variable">CODE</span><span class="token operator">=</span><span class="token string">&quot;设置一个密码。如果有多个密码用,隔开。如：123456,2345612&quot;</span> <span class="token punctuation">\\</span>
   <span class="token parameter variable">-e</span> <span class="token assign-left variable">PROXY_URL</span><span class="token operator">=</span><span class="token string">&quot;http://172.28.5.1:20171&quot;</span> <span class="token punctuation">\\</span>
   <span class="token parameter variable">--name</span><span class="token operator">=</span>gpt-web <span class="token punctuation">\\</span>
   <span class="token parameter variable">--network</span><span class="token operator">=</span>gpt-network <span class="token punctuation">\\</span>
   yidadaa/chatgpt-next-web
<span class="token comment"># 打开端口</span>
firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>docker --add-port<span class="token operator">=</span><span class="token number">3000</span>/tcp <span class="token parameter variable">--permanent</span>
firewall-cmd <span class="token parameter variable">--reload</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),f=a("h2",{id:"_1-5-测试",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_1-5-测试","aria-hidden":"true"},"#"),n(" 1.5 测试")],-1),x={href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer"},y=a("li",null,[a("p",null,"输入密码"),a("div",{style:{"text-align":"center"}},[a("img",{src:b,width:"500"})])],-1),w=a("li",null,[a("p",null,"开始聊天"),a("div",{style:{"text-align":"center"}},[a("img",{src:m,width:"500"})])],-1),A=a("h2",{id:"_1-6-参考",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_1-6-参考","aria-hidden":"true"},"#"),n(" 1.6 参考")],-1),C={href:"https://github.com/Yidadaa/ChatGPT-Next-Web",target:"_blank",rel:"noopener noreferrer"},P={href:"https://github.com/v2rayA/v2rayA",target:"_blank",rel:"noopener noreferrer"},N={href:"https://docs.docker.com/",target:"_blank",rel:"noopener noreferrer"};function T(W,G){const s=l("ExternalLinkIcon");return i(),o("div",null,[h,a("ol",null,[a("li",null,[n("获取"),a("a",g,[n("OpenAI API Key"),e(s)]),n(" 。")]),_]),f,a("ol",null,[a("li",null,[a("p",null,[n("打开浏览器输入 "),a("a",x,[n("http://localhost:3000"),e(s)]),n("。点击左下角设置输入之前设置的密码。")])]),y,w]),A,a("ul",null,[a("li",null,[a("a",C,[n("ChatGPT Next Web git仓库"),e(s)])]),a("li",null,[a("a",P,[n("v2rayA git仓库"),e(s)])]),a("li",null,[a("a",N,[n("Docker官方文档"),e(s)])])])])}const I=r(k,[["render",T],["__file","index.html.vue"]]);export{I as default};
