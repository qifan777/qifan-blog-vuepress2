import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as i,c as l,e as a,f as n,d as e,w as t,a as p}from"./app-7cd3b270.js";const r="/qifan-blog-vuepress2/assets/img-23a7ccd0.png",u="/qifan-blog-vuepress2/assets/img_1-2c578511.png",d="/qifan-blog-vuepress2/assets/img_2-3583c1a3.png",k="/qifan-blog-vuepress2/assets/img_3-04c62307.png",m="/qifan-blog-vuepress2/assets/img_4-d59c2967.png",v="/qifan-blog-vuepress2/assets/img_5-6a5df7f9.png",b={},g=p(`<h1 id="开发流程" tabindex="-1"><a class="header-anchor" href="#开发流程" aria-hidden="true">#</a> 开发流程</h1><h2 id="后端" tabindex="-1"><a class="header-anchor" href="#后端" aria-hidden="true">#</a> 后端</h2><h3 id="编写ddl" tabindex="-1"><a class="header-anchor" href="#编写ddl" aria-hidden="true">#</a> 编写DDL</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> menu
<span class="token punctuation">(</span>
    id           <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span>  <span class="token operator">not</span> <span class="token boolean">null</span>
        <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>
    created_time <span class="token keyword">datetime</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>  <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    edited_time  <span class="token keyword">datetime</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>  <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    creator_id   <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span>  <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    editor_id    <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span>  <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    name         <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>  <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    parent_id    <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span>  <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    order_num    <span class="token keyword">int</span>          <span class="token boolean">null</span><span class="token punctuation">,</span>
    menu_type    <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span>  <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    icon         <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token boolean">null</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div style="text-align:center;"><figure><img src="`+r+`" alt="图1 实体生成" tabindex="0" loading="lazy"><figcaption>图1 实体生成</figcaption></figure></div><p>在数据库建好表之后使用<code>Jimmer-generator</code>插件生成实体。以上面的menu表为例，生成的<code>menu.java</code>需要放到<code>src/main/java/io/qifan/mall/server/menu/entity</code> 中。</p><p>即<code>src/main/java/io/qifan/mall/server/{你的表名}/entity</code></p><h3 id="生成代码" tabindex="-1"><a class="header-anchor" href="#生成代码" aria-hidden="true">#</a> 生成代码</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GenEntity</span>
<span class="token annotation punctuation">@Entity</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Menu</span> <span class="token keyword">extends</span> <span class="token class-name">BaseEntity</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;菜单名称&quot;</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token class-name">String</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;父菜单Id&quot;</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token class-name">String</span> <span class="token function">parentId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;排序号&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">Integer</span> <span class="token function">orderNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;菜单类型&quot;</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">ItemType</span><span class="token punctuation">.</span><span class="token constant">SELECTABLE</span><span class="token punctuation">,</span> dictId <span class="token operator">=</span> <span class="token number">1002</span><span class="token punctuation">)</span>
    <span class="token class-name">String</span> <span class="token function">menuType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;图标&quot;</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">ItemType</span><span class="token punctuation">.</span><span class="token constant">PICTURE</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Nullable</span>
    <span class="token class-name">String</span> <span class="token function">icon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@OneToMany</span><span class="token punctuation">(</span>mappedBy <span class="token operator">=</span> <span class="token string">&quot;menu&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RoleMenuRel</span><span class="token punctuation">&gt;</span></span> <span class="token function">roles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),h=a("code",null,"@GenEntity",-1),f=a("code",null,"@GenField",-1),y=p('<p>在mall-server模块下的test包下找到<code>MallCodeGenerator</code>运行生成代码。</p><h3 id="使用后端生成代码" tabindex="-1"><a class="header-anchor" href="#使用后端生成代码" aria-hidden="true">#</a> 使用后端生成代码</h3><p>生成的代码在<code>template/src/main/java/io/qifan/mall/server</code>下面，复制<code>menu</code>文件夹到<code>mall-server</code>模块内，然后整理生成的代码。</p><div style="text-align:center;"><figure><img src="'+u+'" alt="图2 整理生成的代码" tabindex="0" loading="lazy"><figcaption>图2 整理生成的代码</figcaption></figure></div><p>整理完之后需要用鼠标把<code>controller</code>,<code>service</code>,<code>repository</code>一个个点过去，确保idea可以正确加载这些类。</p><h3 id="生成dto文件" tabindex="-1"><a class="header-anchor" href="#生成dto文件" aria-hidden="true">#</a> 生成dto文件</h3><div style="text-align:center;"><figure><img src="'+d+'" alt="图3 生成dto文件" tabindex="0" loading="lazy"><figcaption>图3 生成dto文件</figcaption></figure></div><p>使用<code>JimmerDTO</code>插件可以右键实体类生成对应的dto文件。</p><div style="text-align:center;"><figure><img src="'+k+'" alt="图4 dto文件位置" tabindex="0" loading="lazy"><figcaption>图4 dto文件位置</figcaption></figure></div><p>然后将代码<code>Menu.dto</code>覆盖掉生成的<code>Menu.dto</code></p><div style="text-align:center;"><figure><img src="'+m+'" alt="图5 覆盖生成的dto" tabindex="0" loading="lazy"><figcaption>图5 覆盖生成的dto</figcaption></figure></div><h3 id="重新编译" tabindex="-1"><a class="header-anchor" href="#重新编译" aria-hidden="true">#</a> 重新编译</h3><p>由于新增了实体类，需要重新编译。</p><ol><li>在mall-server下 maven-clean</li><li>重新运行MallApplication</li></ol><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果报xxx找不到符号，请在mall-parent模块下<code>maven clean</code>然后再<code>maven install</code>。最后重新执行上面的编译步骤。</p></div><h2 id="前端" tabindex="-1"><a class="header-anchor" href="#前端" aria-hidden="true">#</a> 前端</h2><h3 id="使用前端生成代码" tabindex="-1"><a class="header-anchor" href="#使用前端生成代码" aria-hidden="true">#</a> 使用前端生成代码</h3><p>生成的前端文件在<code>template/front</code>下，复制<code>menu</code>文件夹到后台管理(mall-admin)工程。</p><p>使用eslint可以整理代码的格式，然后再把文件一个个点开确保没有错误。<br><img src="'+v+`" alt="图6 整理前端代码" loading="lazy"></p><h3 id="添加路由" tabindex="-1"><a class="header-anchor" href="#添加路由" aria-hidden="true">#</a> 添加路由</h3><p>在<code>router/index.ts</code>下添加menu路由</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>createRouter<span class="token punctuation">,</span> createWebHistory<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span>
<span class="token keyword">import</span> HomeView <span class="token keyword">from</span> <span class="token string">&#39;../views/HomeView.vue&#39;</span>
<span class="token keyword">import</span> MenuView <span class="token keyword">from</span> <span class="token string">&#39;@/views/menu/MenuView.vue&#39;</span>

<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    history<span class="token operator">:</span> <span class="token function">createWebHistory</span><span class="token punctuation">(</span><span class="token string">&#39;mall-admin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    routes<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            path<span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
            name<span class="token operator">:</span> <span class="token string">&#39;home&#39;</span><span class="token punctuation">,</span>
            component<span class="token operator">:</span> HomeView<span class="token punctuation">,</span>
            children<span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span>path<span class="token operator">:</span> <span class="token string">&#39;menu&#39;</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;menu&#39;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> MenuView<span class="token punctuation">}</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> router
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="同步api" tabindex="-1"><a class="header-anchor" href="#同步api" aria-hidden="true">#</a> 同步API</h3><p>运行<code>npm run api</code>即可同步后端的api</p>`,24);function _(w,x){const s=c("RouterLink");return i(),l("div",null,[g,a("p",null,[n("在需要生成代码的实体类上添加"),e(s,{to:"/project/reference/generator/README.md/#genentity"},{default:t(()=>[h]),_:1}),n("这样即可生成该实体的前后端增删改查。在需要生成的字段上使用"),e(s,{to:"/project/reference/generator/README.md/#genfield"},{default:t(()=>[f]),_:1}),n("标注，然后在生成的前端表格，表单，查询框中会包括这些字段。")]),y])}const M=o(b,[["render",_],["__file","develop.html.vue"]]);export{M as default};
