const n=JSON.parse('{"key":"v-82f8857c","path":"/project/qifan-shop/reference/generator.html","title":"代码生成器","lang":"zh-CN","frontmatter":{"category":["起凡小商店","后端基础"],"tag":["代码生成器"],"date":"2023-09-28T00:00:00.000Z","timeline":true,"description":"代码生成器 注解 @GenEntity 在实体类上增加该注解自动生成后端增删改查和前端的增删改查。 @GenField 用于生成后端查询条件、前端的表格、创建表单、删除表单、查询表单。 @Retention(RetentionPolicy.RUNTIME) @Inherited @Target({ElementType.FIELD}) public @interface GenField { // 字段注释 String value() default \\"\\"; // 生成dto时的类型 String dtoType() default \\"\\"; // 是否是关联实体 boolean association() default false; // 生成dto时在request中忽略 boolean ignoreRequest() default false; // 生成dto时在response中忽略 boolean ignoreResponse() default false; // 生成前端表单时选用的组件根据此字段生成。比如：ElInput,ELInputNumber ItemType type() default ItemType.INPUT_TEXT; // 前端v-model绑定的路径 String bind() default \\"\\"; // 枚举Class Class&lt;? extends SelectableItem&gt; selectOptionClass() default SelectableItem.class; // 获取所有的枚举值方法 String selectOptionMethod() default \\"getSelectOptions\\"; // 当type=INPUT_NUMBER时可以填写最大值和最小值在前端做限制 String max() default \\"99999999\\"; String min() default \\"0\\"; }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/qifan-blog-vuepress2/project/qifan-shop/reference/generator.html"}],["meta",{"property":"og:site_name","content":"起凡Code闲聊"}],["meta",{"property":"og:title","content":"代码生成器"}],["meta",{"property":"og:description","content":"代码生成器 注解 @GenEntity 在实体类上增加该注解自动生成后端增删改查和前端的增删改查。 @GenField 用于生成后端查询条件、前端的表格、创建表单、删除表单、查询表单。 @Retention(RetentionPolicy.RUNTIME) @Inherited @Target({ElementType.FIELD}) public @interface GenField { // 字段注释 String value() default \\"\\"; // 生成dto时的类型 String dtoType() default \\"\\"; // 是否是关联实体 boolean association() default false; // 生成dto时在request中忽略 boolean ignoreRequest() default false; // 生成dto时在response中忽略 boolean ignoreResponse() default false; // 生成前端表单时选用的组件根据此字段生成。比如：ElInput,ELInputNumber ItemType type() default ItemType.INPUT_TEXT; // 前端v-model绑定的路径 String bind() default \\"\\"; // 枚举Class Class&lt;? extends SelectableItem&gt; selectOptionClass() default SelectableItem.class; // 获取所有的枚举值方法 String selectOptionMethod() default \\"getSelectOptions\\"; // 当type=INPUT_NUMBER时可以填写最大值和最小值在前端做限制 String max() default \\"99999999\\"; String min() default \\"0\\"; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-15T12:37:15.000Z"}],["meta",{"property":"article:author","content":"起凡"}],["meta",{"property":"article:tag","content":"代码生成器"}],["meta",{"property":"article:published_time","content":"2023-09-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-15T12:37:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"代码生成器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-28T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-15T12:37:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"起凡\\",\\"url\\":\\"https://www.jarcheng.top\\"}]}"]]},"headers":[{"level":2,"title":"注解","slug":"注解","link":"#注解","children":[{"level":3,"title":"@GenEntity","slug":"genentity","link":"#genentity","children":[]},{"level":3,"title":"@GenField","slug":"genfield","link":"#genfield","children":[]}]},{"level":2,"title":"后端模板","slug":"后端模板","link":"#后端模板","children":[{"level":3,"title":"Dto","slug":"dto","link":"#dto","children":[]},{"level":3,"title":"Mapper","slug":"mapper","link":"#mapper","children":[]},{"level":3,"title":"Controller","slug":"controller","link":"#controller","children":[]},{"level":3,"title":"Service","slug":"service","link":"#service","children":[]},{"level":3,"title":"Predicate","slug":"predicate","link":"#predicate","children":[]},{"level":3,"title":"Repository","slug":"repository","link":"#repository","children":[]}]},{"level":2,"title":"后台管理模板","slug":"后台管理模板","link":"#后台管理模板","children":[{"level":3,"title":"View","slug":"view","link":"#view","children":[]},{"level":3,"title":"Query","slug":"query","link":"#query","children":[]},{"level":3,"title":"Table","slug":"table","link":"#table","children":[]},{"level":3,"title":"Dialog","slug":"dialog","link":"#dialog","children":[]},{"level":3,"title":"UpdateForm","slug":"updateform","link":"#updateform","children":[]},{"level":3,"title":"CreateForm","slug":"createform","link":"#createform","children":[]},{"level":3,"title":"Common","slug":"common","link":"#common","children":[]},{"level":3,"title":"Store","slug":"store","link":"#store","children":[]}]}],"git":{"createdTime":1695135050000,"updatedTime":1697373435000,"contributors":[{"name":"qifan","email":"1507906763@qq.com","commits":4},{"name":"起凡","email":"1507906763@qq.com","commits":1}]},"readingTime":{"minutes":11.66,"words":3497},"filePathRelative":"project/qifan-shop/reference/generator.md","localizedDate":"2023年9月28日","excerpt":"<h1> 代码生成器</h1>\\n<h2> 注解</h2>\\n<h3> @GenEntity</h3>\\n<p>在实体类上增加该注解自动生成后端增删改查和前端的增删改查。</p>\\n<h3> @GenField</h3>\\n<p>用于生成后端查询条件、前端的表格、创建表单、删除表单、查询表单。</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token annotation punctuation\\">@Retention</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">RetentionPolicy</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">RUNTIME</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token annotation punctuation\\">@Inherited</span>\\n<span class=\\"token annotation punctuation\\">@Target</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span><span class=\\"token class-name\\">ElementType</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">FIELD</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token annotation punctuation\\">@interface</span> <span class=\\"token class-name\\">GenField</span> <span class=\\"token punctuation\\">{</span>\\n\\n  <span class=\\"token comment\\">// 字段注释</span>\\n  <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">value</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token comment\\">// 生成dto时的类型</span>\\n  <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">dtoType</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token comment\\">// 是否是关联实体</span>\\n  <span class=\\"token keyword\\">boolean</span> <span class=\\"token function\\">association</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token comment\\">// 生成dto时在request中忽略</span>\\n  <span class=\\"token keyword\\">boolean</span> <span class=\\"token function\\">ignoreRequest</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token comment\\">// 生成dto时在response中忽略</span>\\n  <span class=\\"token keyword\\">boolean</span> <span class=\\"token function\\">ignoreResponse</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token comment\\">// 生成前端表单时选用的组件根据此字段生成。比如：ElInput,ELInputNumber</span>\\n  <span class=\\"token class-name\\">ItemType</span> <span class=\\"token function\\">type</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token class-name\\">ItemType</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">INPUT_TEXT</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token comment\\">// 前端v-model绑定的路径</span>\\n  <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">bind</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token comment\\">// 枚举Class</span>\\n  <span class=\\"token class-name\\">Class</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token operator\\">?</span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\">SelectableItem</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token function\\">selectOptionClass</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token class-name\\">SelectableItem</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token comment\\">// 获取所有的枚举值方法</span>\\n  <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">selectOptionMethod</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token string\\">\\"getSelectOptions\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token comment\\">// 当type=INPUT_NUMBER时可以填写最大值和最小值在前端做限制</span>\\n  <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">max</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token string\\">\\"99999999\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">min</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token string\\">\\"0\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
