import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as i,c as u,e as n,f as s,d as a,w as o,a as t}from"./app-53c4e0c1.js";const r="/qifan-blog-vuepress2/assets/img_2-4de7c0ea.png",d={},k=t(`<h1 id="用户角色" tabindex="-1"><a class="header-anchor" href="#用户角色" aria-hidden="true">#</a> 用户角色</h1><h2 id="建表" tabindex="-1"><a class="header-anchor" href="#建表" aria-hidden="true">#</a> 建表</h2><p>角色表</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- auto-generated definition</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> role
<span class="token punctuation">(</span>
    id           <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span>
        <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>
    created_time <span class="token keyword">datetime</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    edited_time  <span class="token keyword">datetime</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    creator_id   <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    editor_id    <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    name         <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    <span class="token keyword">constraint</span> role_pk
        <span class="token keyword">unique</span> <span class="token punctuation">(</span>name<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用户角色关联表</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- auto-generated definition</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> user_role_rel
<span class="token punctuation">(</span>
    id           <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span>
        <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>
    created_time <span class="token keyword">datetime</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    edited_time  <span class="token keyword">datetime</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    creator_id   <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    editor_id    <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    role_id      <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    user_id      <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    <span class="token keyword">constraint</span> role_id
        <span class="token keyword">unique</span> <span class="token punctuation">(</span>role_id<span class="token punctuation">,</span> user_id<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="实体类" tabindex="-1"><a class="header-anchor" href="#实体类" aria-hidden="true">#</a> 实体类</h2><h3 id="role" tabindex="-1"><a class="header-anchor" href="#role" aria-hidden="true">#</a> Role</h3>`,8),v=n("br",null,null,-1),m=n("code",null,"UserRoleRel",-1),b=t(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GenEntity</span>
<span class="token annotation punctuation">@Entity</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Role</span> <span class="token keyword">extends</span> <span class="token class-name">BaseEntity</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;角色名称&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Key</span>
    <span class="token class-name">String</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@OneToMany</span><span class="token punctuation">(</span>mappedBy <span class="token operator">=</span> <span class="token string">&quot;role&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserRoleRel</span><span class="token punctuation">&gt;</span></span> <span class="token function">users</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),h={class:"hint-container info"},g=n("p",{class:"hint-container-title"},"相关信息",-1),q={href:"https://babyfish-ct.gitee.io/jimmer-doc/docs/mapping/base/association/one-to-many",target:"_blank",rel:"noopener noreferrer"},y=n("br",null,null,-1),_=n("code",null,'mappedBy = "xxx"',-1),f={href:"https://babyfish-ct.gitee.io/jimmer-doc/docs/mapping/advanced/key",target:"_blank",rel:"noopener noreferrer"},w=n("code",null,"@Id",-1),E=n("br",null,null,-1),R=n("h3",{id:"userrolerel",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#userrolerel","aria-hidden":"true"},"#"),s(" UserRoleRel")],-1),U=n("p",null,"要实现两个实体类的多对多关联必然需要一张中间表。UserRoleRel就是负责建立起User和Role这个联系的中间表。",-1),I=n("p",null,[s("除了BaseEntity中的逻辑主键"),n("code",null,"@Id"),s("之外，还包含了两个业务主键"),n("code",null,"@Key"),s("，分别是userId和roleId。他们组合起来可以唯一标识一行记录，因此加上了"),n("code",null,"@Key"),s("。")],-1),x={href:"https://babyfish-ct.gitee.io/jimmer-doc/docs/mutation/save-command/dissociation#%E8%84%B1%E5%8B%BE%E4%B8%AD%E9%97%B4%E8%A1%A8%E6%95%B0%E6%8D%AE",target:"_blank",rel:"noopener noreferrer"},j=n("code",null,"@OnDissociate(DissociateAction.DELETE)",-1),B=n("br",null,null,-1),F=t(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Entity</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserRoleRel</span> <span class="token keyword">extends</span> <span class="token class-name">BaseEntity</span> <span class="token punctuation">{</span>

  <span class="token annotation punctuation">@ManyToOne</span>
  <span class="token annotation punctuation">@Key</span>
  <span class="token annotation punctuation">@OnDissociate</span><span class="token punctuation">(</span><span class="token class-name">DissociateAction</span><span class="token punctuation">.</span><span class="token constant">DELETE</span><span class="token punctuation">)</span>
  <span class="token class-name">User</span> <span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@ManyToOne</span>
  <span class="token annotation punctuation">@Key</span>
  <span class="token class-name">Role</span> <span class="token function">role</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),T={class:"hint-container info"},D=n("p",{class:"hint-container-title"},"相关信息",-1),A={href:"https://babyfish-ct.gitee.io/jimmer-doc/docs/mutation/save-command/dissociation#%E8%84%B1%E5%8B%BE%E4%B8%AD%E9%97%B4%E8%A1%A8%E6%95%B0%E6%8D%AE",target:"_blank",rel:"noopener noreferrer"},S=n("code",null,"@OnDissociate",-1),O=t(`<h3 id="user" tabindex="-1"><a class="header-anchor" href="#user" aria-hidden="true">#</a> User</h3><p>在User中新增roles和rolesView。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GenEntity</span>
<span class="token annotation punctuation">@Entity</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token keyword">extends</span> <span class="token class-name">BaseDateTime</span> <span class="token punctuation">{</span>

  <span class="token annotation punctuation">@Id</span>
  <span class="token annotation punctuation">@GeneratedValue</span><span class="token punctuation">(</span>generatorType <span class="token operator">=</span> <span class="token class-name">UUIDIdGenerator</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
  <span class="token class-name">String</span> <span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;手机号&quot;</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token annotation punctuation">@Key</span>
  <span class="token class-name">String</span> <span class="token function">phone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;密码&quot;</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token class-name">String</span> <span class="token function">password</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;昵称&quot;</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token annotation punctuation">@Null</span>
  <span class="token class-name">String</span> <span class="token function">nickname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;头像&quot;</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">ItemType</span><span class="token punctuation">.</span><span class="token constant">PICTURE</span><span class="token punctuation">)</span>
  <span class="token annotation punctuation">@Null</span>
  <span class="token class-name">String</span> <span class="token function">avatar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;性别&quot;</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">ItemType</span><span class="token punctuation">.</span><span class="token constant">SELECTABLE</span><span class="token punctuation">,</span> dictEnName <span class="token operator">=</span> <span class="token class-name">DictConstants</span><span class="token punctuation">.</span><span class="token constant">GENDER</span><span class="token punctuation">)</span>
  <span class="token annotation punctuation">@Null</span>
  <span class="token class-name">DictConstants<span class="token punctuation">.</span>Gender</span> <span class="token function">gender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@Null</span>
  <span class="token annotation punctuation">@OneToOne</span><span class="token punctuation">(</span>mappedBy <span class="token operator">=</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span>
  <span class="token class-name">UserWeChat</span> <span class="token function">wechat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@OneToMany</span><span class="token punctuation">(</span>mappedBy <span class="token operator">=</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span>
  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserRoleRel</span><span class="token punctuation">&gt;</span></span> <span class="token function">roles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),V={class:"hint-container info"},L=n("p",{class:"hint-container-title"},"相关信息",-1),C=n("h2",{id:"生成角色增删改查",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#生成角色增删改查","aria-hidden":"true"},"#"),s(" 生成角色增删改查")],-1),G=n("code",null,"mall-server/src/test/java/io/qifan/mall/server/MallCodeGenerator.java",-1),M=n("h2",{id:"用户角色创建",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#用户角色创建","aria-hidden":"true"},"#"),s(" 用户角色创建")],-1),K=n("h3",{id:"修改dto",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#修改dto","aria-hidden":"true"},"#"),s(" 修改dto")],-1),N={href:"https://babyfish-ct.gitee.io/jimmer-doc/docs/object/view/dto-language#3-viewinput%E5%92%8Cspecification",target:"_blank",rel:"noopener noreferrer"},$=n("br",null,null,-1),Q=n("code",null,"roleIds",-1),P=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># mall-server/src/main/dto/io/qifan/mall/server/user/entity/User.dto
input UserInput {
    #allScalars(User)
    id?
    # 新增roleIds
    roleIds: Array&lt;String&gt;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="后端实现" tabindex="-1"><a class="header-anchor" href="#后端实现" aria-hidden="true">#</a> 后端实现</h3><p>前端实现提交的数据结构如下</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;createdTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-11-24 17:13:08&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;editedTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-11-29 17:09:43&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1cb4db50-66fa-4250-9916-73283e536fa0&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;phone&quot;</span><span class="token operator">:</span> <span class="token string">&quot;13656987994&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;$2a$10$UeZxmCdikKwYFK.wk7lp8Oj6ZzoXUZKUhV9qFGXuc74.IqgDP9AU2&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;nickname&quot;</span><span class="token operator">:</span> <span class="token string">&quot;默认用户&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;avatar&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
  <span class="token property">&quot;gender&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0710c8a5-021c-404d-b09e-56db95c259e9&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;roleIds&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;17509f5c-9a6b-429c-b467-cadbd8873d2d&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在图1中可知选中了两个角色，所以roleIds里面包含两条id数据。</p>`,5),H=n("li",null,[s("UserInput中有roleIds，需要转成User中的"),n("code",null,"List<UserRoleRel> roles()"),s(";")],-1),W=n("li",null,"UserInput是User的Dto，因此它可以通过userInput.toEntity()转成User对象",-1),z={href:"https://babyfish-ct.gitee.io/jimmer-doc/docs/object/draft",target:"_blank",rel:"noopener noreferrer"},X=t(`<p>通过上面三点可以知道Input类型的Dto插入到数据库需要哪些步骤，在<code>UserService</code>的save方法中新增下面的代码。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token class-name">UserInput</span> userInput<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">User</span> user <span class="token operator">=</span> userInput<span class="token punctuation">.</span><span class="token function">toEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> userRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token class-name">UserDraft</span><span class="token punctuation">.</span>$<span class="token punctuation">.</span><span class="token function">produce</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> draft <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// 将List&lt;String&gt; roleIds map映射--&gt; List&lt;UserRoleRel&gt; roles</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>userInput<span class="token punctuation">.</span><span class="token function">getRoleIds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>roleId <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// 向user对象中添加UserRoleRel</span>
            draft<span class="token punctuation">.</span><span class="token function">addIntoRoles</span><span class="token punctuation">(</span>userRole <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token comment">// 设置UserRoleRel，</span>
                userRole<span class="token punctuation">.</span><span class="token function">applyRole</span><span class="token punctuation">(</span>role <span class="token operator">-&gt;</span> role<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>roleId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// user中有@Key phone，要不然需要创建完用户得到id才可以。</span>
                userRole<span class="token punctuation">.</span><span class="token function">setUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="前端实现" tabindex="-1"><a class="header-anchor" href="#前端实现" aria-hidden="true">#</a> 前端实现</h3>`,3),Z=t('<div style="text-align:center;"><figure><img src="'+r+`" alt="图1 选择角色" tabindex="0" loading="lazy"><figcaption>图1 选择角色</figcaption></figure></div><ol><li><p>提供待选项获取方法</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">roleQueryOptions</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>keyword<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">await</span> api<span class="token punctuation">.</span>roleController<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">{</span> body<span class="token operator">:</span> <span class="token punctuation">{</span> query<span class="token operator">:</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> keyword <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>content
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>双向绑定已选的角色</p><p>在user-store.ts中定义了<code>createForm</code>，类型是UserInput。在<a href="#%E4%BF%AE%E6%94%B9dto">dto修改</a>中新增了roleIds，代表前端需要传roleIds。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// roleIds和remote-select双向绑定</span>
<span class="token keyword">const</span> initForm<span class="token operator">:</span> UserInput <span class="token operator">=</span> <span class="token punctuation">{</span> roleIds<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> password<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> nickname<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> phone<span class="token operator">:</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> createForm <span class="token operator">=</span> <span class="token generic-function"><span class="token function">ref</span><span class="token generic class-name"><span class="token operator">&lt;</span>UserInput<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>initForm<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>映射待选项到label和value</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>remote-select</span>
        <span class="token attr-name">:query-options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>roleQueryOptions<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>updateForm.roleIds<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">label-prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">multiple</span>
      <span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>label-prop=&quot;name&quot;</code>代表角色的名称映射到el-option的label属性</li><li><code>value-prop=&quot;id&quot;&quot;</code>代表角色的id映射到el-option的value属性（默认就是id，所以这边没填）</li></ul></li><li><p>汇总</p></li></ol><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> userStore <span class="token operator">=</span> <span class="token function">useUserStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> createForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">storeToRefs</span><span class="token punctuation">(</span>userStore<span class="token punctuation">)</span>
<span class="token comment">// 获取角色列表</span>
<span class="token keyword">const</span> <span class="token function-variable function">roleQueryOptions</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">keyword</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">await</span> api<span class="token punctuation">.</span>roleController<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> keyword <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>content
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>create-form<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createFormRef<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createForm<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:rules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rules<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form<span class="token punctuation">&quot;</span></span> <span class="token attr-name">labelWidth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>120<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>角色<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--  双向绑定和定义映射 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>remote-select</span>
          <span class="token attr-name">:query-options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>roleQueryOptions<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createForm.roleIds<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">label-prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">multiple</span>
        <span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>remote-select</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),Y={class:"hint-container info"},J=n("p",{class:"hint-container-title"},"相关信息",-1),nn=t(`<h2 id="编辑用户-回显-修改角色" tabindex="-1"><a class="header-anchor" href="#编辑用户-回显-修改角色" aria-hidden="true">#</a> 编辑用户（回显）修改角色</h2><p>当创建完用户之后，当编辑用户的时候需要显示用户已有的角色。</p><ol><li>后端查询编辑用户的角色</li><li>前端遍历roleVies得到roleIds</li><li>双向绑定到RemoteSelect组件即可实现默认选中已有的角色</li></ol><h3 id="视图属性rolesview" tabindex="-1"><a class="header-anchor" href="#视图属性rolesview" aria-hidden="true">#</a> 视图属性RolesView</h3><p><code>rolesView</code>是<code>roles</code>的视图属性，获得<code>UserRoleRel</code>中的<code>role</code>得到<code>List&lt;Role&gt;</code>。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  <span class="token annotation punctuation">@ManyToManyView</span><span class="token punctuation">(</span>
      prop <span class="token operator">=</span> <span class="token string">&quot;roles&quot;</span><span class="token punctuation">,</span>
      deeperProp <span class="token operator">=</span> <span class="token string">&quot;role&quot;</span>
  <span class="token punctuation">)</span>
  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Role</span><span class="token punctuation">&gt;</span></span> <span class="token function">rolesView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),sn={class:"hint-container info"},an=n("p",{class:"hint-container-title"},"相关信息",-1),tn={href:"https://babyfish-ct.gitee.io/jimmer-doc/docs/mapping/advanced/view/many-to-many-view#%E5%88%9D%E8%AF%86manytomanyview",target:"_blank",rel:"noopener noreferrer"},en=n("br",null,null,-1),pn=n("code",null,"List<Role> roles=user.getRoles().map(userRoleRel -> userRoleRel.getRole()).toList();",-1),on=n("br",null,null,-1),cn=n("code",null,"@ManyToManyView",-1),ln=n("code",null,"UserRoleRel",-1),un=n("code",null,"Role",-1),rn=t(`<h3 id="属性抓取" tabindex="-1"><a class="header-anchor" href="#属性抓取" aria-hidden="true">#</a> 属性抓取</h3><p>在<code>UserRepository</code>中定义了一个通用的对象抓取器。在这个数据抓取，<code>.allScalarFields()</code>代表抓取普通属性。后面又新增了<code>rolesView(RoleFetcher.$.name())</code>抓取角色视图且列表中的角色只抓取name字段，这样就可以返用户关联的角色。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">UserFetcher</span> <span class="token constant">USER_ROLE_FETCHER</span> <span class="token operator">=</span> <span class="token class-name">UserFetcher</span><span class="token punctuation">.</span>$<span class="token punctuation">.</span><span class="token function">allScalarFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rolesView</span><span class="token punctuation">(</span><span class="token class-name">RoleFetcher</span><span class="token punctuation">.</span>$<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>返回的结果，可以看见除了普通属性之外，还包含了一个视图属性rolesView</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;操作成功&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;result&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;createdTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2024-01-10 10:48:02&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;editedTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2024-01-15 14:45:10&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0f07d638-f1bc-4011-88d8-6dc650ab06a7&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;phone&quot;</span><span class="token operator">:</span> <span class="token string">&quot;13656987994&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;$2a$10$pl/GmO3mDaqWjBtmfXzppOFQwnW/jlinORR6.83Lo7QdTuU4uh5AG&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;nickname&quot;</span><span class="token operator">:</span> <span class="token string">&quot;默认用户&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;avatar&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://my-community.oss-cn-qingdao.aliyuncs.com/20240110212158起凡.jpg&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;gender&quot;</span><span class="token operator">:</span> <span class="token string">&quot;PRIVATE&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;rolesView&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;4a83f185-30bb-4464-9e68-239698e89a5e&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;普通用户&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;5f785900-d317-4210-979d-d17a40ba8ecc&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;管理员&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;success&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),dn={class:"hint-container info"},kn=n("p",{class:"hint-container-title"},"相关信息",-1),vn={href:"https://babyfish-ct.gitee.io/jimmer-doc/docs/query/object-fetcher/",target:"_blank",rel:"noopener noreferrer"},mn=n("ul",null,[n("li",null,"普通属性，数据库表中和实体对应的属性"),n("li",null,"关联属性，一对一，一对多，多对一，多对多"),n("li",null,"视图属性，就像上面的rolesView，就是一种视图属性")],-1),bn=t(`<h3 id="返回形状" tabindex="-1"><a class="header-anchor" href="#返回形状" aria-hidden="true">#</a> 返回形状</h3><p>之前的查询用户信息并没有返回角色信息。将<code>UserController</code>中的用户信息查询接口返回形状指定为<code>USER_ROLE_FETCHER</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;{id}&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">public</span> <span class="token annotation punctuation">@FetchBy</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;USER_ROLE_FETCHER&quot;</span><span class="token punctuation">)</span> <span class="token class-name">User</span> <span class="token function">findById</span><span class="token punctuation">(</span>
      <span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;user-info&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">public</span> <span class="token annotation punctuation">@FetchBy</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;USER_ROLE_FETCHER&quot;</span><span class="token punctuation">)</span> <span class="token class-name">User</span> <span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="前端遍历获取roleid" tabindex="-1"><a class="header-anchor" href="#前端遍历获取roleid" aria-hidden="true">#</a> 前端遍历获取roleId</h3><p>前端将<code>res.rolesView</code>映射成<code>roleIds</code></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> api<span class="token punctuation">.</span>userController<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span><span class="token punctuation">{</span> id<span class="token operator">:</span> updateForm<span class="token punctuation">.</span>value<span class="token punctuation">.</span>id <span class="token operator">||</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
updateForm<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>res<span class="token punctuation">,</span> roleIds<span class="token operator">:</span> res<span class="token punctuation">.</span>rolesView<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>role<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> role<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="双向绑定roleids" tabindex="-1"><a class="header-anchor" href="#双向绑定roleids" aria-hidden="true">#</a> 双向绑定roleIds</h3><p>由于roleIds中已经有值，此时下拉框中会选中该用户已有的角色。</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>remote-select</span>
        <span class="token attr-name">:query-options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>roleQueryOptions<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>updateForm.roleIds<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">label-prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">multiple</span>
<span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>remote-select</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9);function hn(gn,qn){const p=c("RouterLink"),e=c("ExternalLinkIcon");return i(),u("div",null,[k,n("p",null,[s("根据"),a(p,{to:"/project/qifan-mall/permission/README.md/#er%E5%9B%BE"},{default:o(()=>[s("ER图")]),_:1}),s("中可以知道角色是权限模型的核心部分，它不仅和用户建立起了多对多关系，同时也和菜单建立起了多对多关系。"),v,m,s("负责建立起用户和角色的多对多关联。")]),b,n("div",h,[g,n("p",null,[n("a",q,[s('@OneToMany(mappedBy = "xxx")'),a(e)]),s("代表一对多映射，和ER图中的一对多相对应。"),y,s(" 由于一对多的一方不存在外键，因此为了确定是哪张表关联了自己需要指定"),_,s("。")]),n("p",null,[n("a",f,[s("@Key"),a(e)]),s("是业务主键。还有一种主键是"),w,s("，这种主键和业务无关。"),E,s(" 两者都可以唯一的标识一行记录，只是前者有业务的意义。如User表中的Phone也可以唯一代表一个用户，但是它多了一个业务含义——手机号。")]),n("p",null,[a(p,{to:"/project/qifan-mall/reference/backend/README.md/#baseentity"},{default:o(()=>[s("BaseEntity")]),_:1}),s("包含通用的id, editedTime, createdTime, editor, creator。并且会在创建或者更新时自动填写这些字段。")])]),R,U,I,n("p",null,[s("用户拥有多个角色，当减少关联的角色时我们希望删除掉UserRoleRel中相应的记录。"),n("a",x,[j,a(e)]),B,s(" 即可达到这种脱钩操作。")]),F,n("div",T,[D,n("p",null,[n("a",A,[S,a(e)]),s("当删除时触发的脱钩操作。有级联删除/置空/检查报错。")])]),O,n("div",V,[L,n("p",null,[a(p,{to:"/project/qifan-mall/reference/backend/README.md/#baseentity"},{default:o(()=>[s("BaseEntity")]),_:1}),s("包含通用的 editedTime, createdTime。并且会在创建或者更新时自动填写这些字段。")])]),C,n("p",null,[s("运行"),G,s("。将template目录下的前后端增删改查复制到相应的位置，请参考"),a(p,{to:"/project/qifan-mall/start/develop.html"},{default:o(()=>[s("开发流程")]),_:1}),s("。")]),M,K,n("p",null,[n("a",N,[s("Dto"),a(e)]),s("有input，view，speciation三种类型。input专门用于输入，在当前的场景中需要接收前端传入的roleIds。"),$,s(" 因此要在UserInput中添加"),Q,s("。")]),P,n("ol",null,[H,W,n("li",null,[s("由于User是不可变对象，要修改需要同"),n("a",z,[s("Draft对象"),a(e)]),s("。如UserDraft")])]),X,n("p",null,[s("使用"),a(p,{to:"/project/qifan-mall/reference/front/README.md/#%E8%BF%9C%E7%A8%8B%E9%80%89%E6%8B%A9%E5%99%A8"},{default:o(()=>[s("RemoteSelect组件")]),_:1}),s("即可实现下图效果")]),Z,n("div",Y,[J,n("p",null,[a(p,{to:"/project/qifan-mall/reference/front/#%E8%BF%9C%E7%A8%8B%E9%80%89%E6%8B%A9%E5%99%A8"},{default:o(()=>[s("RemoteSelect组件")]),_:1}),s("：快速选择远程数据")])]),nn,n("div",sn,[an,n("p",null,[n("a",tn,[s("@ManyToManyView"),a(e)]),s("："),en,s(" 在权限模型中，如果用户需要获得它关联的角色，需要通过下面这种方式获得"),pn,s("。"),on,s(" 使用"),cn,s("可以便捷的将"),ln,s("中的"),un,s("获取。")])]),rn,n("div",dn,[kn,n("p",null,[n("a",vn,[s("对象抓取器（Fetcher）"),a(e)]),s("：抓取的属性包含三种类型")]),mn]),bn])}const fn=l(d,[["render",hn],["__file","role.html.vue"]]);export{fn as default};
