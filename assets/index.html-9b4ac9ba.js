import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as p,c as r,e as n,f as t,d as e,a}from"./app-3ff41b37.js";const c={},i=a('<h1 id="起凡小商店" tabindex="-1"><a class="header-anchor" href="#起凡小商店" aria-hidden="true">#</a> 起凡小商店</h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>电商项目中的各种业务可以说是软件开发中的经典业务。比如多规格商品，优惠券，订单状态机，支付等等。每个一个经典业务都有它的设计思想，首先就是表的设计，表结构如何拆分。如果业务复杂的话还需要考虑到设计模式，比如策略模式，模板模式，状态模式，适配器模式。再深入到细节时就需要具备各种技术知识，比如ORM框架，Web框架（SpringMVC），多线程，IO，计算机基础知识，前端开发框架，UI框架等等。</p><p>而本项目没有深入到各种技术知识，不过在代码上看到也是会有注释的，主要是在于实现这些业务场景，理解其中业务设计思想。</p><h2 id="技术栈" tabindex="-1"><a class="header-anchor" href="#技术栈" aria-hidden="true">#</a> 技术栈</h2><h3 id="微信小程序端" tabindex="-1"><a class="header-anchor" href="#微信小程序端" aria-hidden="true">#</a> 微信小程序端</h3><p>在小程序端我选择使用京东的<code>Taro</code>小程序开发框架。其实采用<code>Taro</code>，<code>Uni-App</code>，<code>微信小程序官方语法</code>这三个框架开发并没有多大的差别。它们的配置，目录结构，API，都是遵循统一的规范。主要差别是在于<code>Taro</code>对于<code>Vue3</code>+<code>TypeScript</code>支持较好。</p>',7),u={class:"hint-container tip"},d=n("p",{class:"hint-container-title"},"提示",-1),h={href:"https://cn.vuejs.org/guide/extras/render-function.html#jsx-tsx",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"JSX(TSX)",-1),k=n("code",null,"<template></template>",-1),g=n("code",null,"onClick={handleClick}",-1),v=n("code",null,'@click="handleClick"',-1),f=a(`<div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tsx<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>defineComponent<span class="token punctuation">,</span> ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>

  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;User&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> msg <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> <span class="token function-variable function">handleClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;触发点击事件&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
          <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;user&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>div onClick<span class="token operator">=</span><span class="token punctuation">{</span>handleClick<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>msg<span class="token punctuation">.</span>value<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scss<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),b=n("thead",null,[n("tr",null,[n("th",null,"技术"),n("th",null,"说明"),n("th",null,"官网")])],-1),m=n("td",null,"Taro",-1),y=n("td",null,"小程序统一开发框架",-1),S={href:"https://docs.taro.zone/",target:"_blank",rel:"noopener noreferrer"},w=n("td",null,"Vue3",-1),x=n("td",null,"Vue 基于标准 HTML 拓展了一套模板语法。Vue 会自动跟踪 JavaScript 状态并在其发生变化时响应式地更新 DOM",-1),q={href:"https://cn.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},j=n("td",null,"NutUI",-1),V=n("td",null,"支持TypeScript提示的TaroUI组件库，80+ 高质量组件，覆盖移动端主流场景",-1),J={href:"https://nutui.jd.com/taro/vue/4x/#/zh-CN/guide/intro",target:"_blank",rel:"noopener noreferrer"},T=n("td",null,"Pinia",-1),C=n("td",null,"全局状态管理框架，支持TypeScript类型提示",-1),P={href:"https://pinia.web3doc.top/",target:"_blank",rel:"noopener noreferrer"},A=n("td",null,"TypeScript",-1),M=n("td",null,"让 JS 具备类型声明",-1),O={href:"https://www.typescriptlang.org/",target:"_blank",rel:"noopener noreferrer"},I=n("td",null,"ESLint",-1),N=n("td",null,"语法校验和格式整理",-1),E={href:"https://eslint.org/",target:"_blank",rel:"noopener noreferrer"},z=a('<h3 id="java服务端" tabindex="-1"><a class="header-anchor" href="#java服务端" aria-hidden="true">#</a> Java服务端</h3><p>以我做过十几个小程序项目和实际工作的经验来说，实际上大部分的需求都是增删改查，我前三年的所有项目的ORM框架都是选用<code>MyBatis（Plus）</code>。每次写动态查询、多表查询、字段映射、字段修改（增加/删除/修改）都需要耗费很多精力去修改Mapper。特别是当需求比较多时，大量的时间被这种无聊的增删改查SQL占用，写代码就变得很无趣。</p><p>最近的三个项目我都是用<code>JPA（Hibernate）</code>。<code>JPA</code>很好用但是国内用的人似乎不多，其实主要原因是因为<code>JPA</code>太难了，没有什么中文资料和好的开源项目。这个项目的ORM框架我依然选用<code>JPA</code>，大家放心我会详细的讲解<code>JPA</code>的基础知识，绝对会刷新大家对<code>JPA</code>的认知。</p>',3),D=n("thead",null,[n("tr",null,[n("th",null,"技术"),n("th",null,"说明"),n("th",null,"官网")])],-1),L=n("td",null,"SpringBoot3",-1),U=n("td",null,"Web应用开发框架，需要JDK17及以上版本",-1),B={href:"https://spring.io/projects/spring-boot",target:"_blank",rel:"noopener noreferrer"},H=n("td",null,"SaToken",-1),R=n("td",null,"一个轻量级 Java 权限认证框架，主要解决：登录认证、权限认证、单点登录、OAuth2.0、分布式Session会话、微服务网关鉴权 等一系列权限相关问题",-1),X={href:"https://sa-token.cc/",target:"_blank",rel:"noopener noreferrer"},W=n("td",null,"Spring Data JPA",-1),G=n("td",null,"在Hibernate ORM框架上进行了增强。",-1),F={href:"https://spring.io/projects/spring-data-jpa/",target:"_blank",rel:"noopener noreferrer"},Q=n("tr",null,[n("td",null,"QiFanGenerator"),n("td",null,"自己写的代码生成器，快速生成前后端增删改查。"),n("td",null,[t("无官网，在代码里面参考"),n("code",null,"@GenEentity"),t("和"),n("code",null,"@GenField"),t("就两个注解就行了")])],-1),K=n("td",null,"Mapstruct",-1),Y=n("td",null,"DTO和Entity之间进行复杂的映射关系。",-1),Z={href:"https://mapstruct.org/",target:"_blank",rel:"noopener noreferrer"},$=n("td",null,"阿里云OSS",-1),nn=n("td",null,"存储图片，学习用途基本上免费。",-1),tn={href:"https://help.aliyun.com/zh/oss/",target:"_blank",rel:"noopener noreferrer"},sn=n("td",null,"微信小程序服务端API",-1),en=n("td",null,"用户登录，订阅消息等接口",-1),an={href:"https://developers.weixin.qq.com/miniprogram/dev/OpenApiDoc/",target:"_blank",rel:"noopener noreferrer"},on=n("td",null,"微信支付V3",-1),ln=n("td",null,"用户支付订单",-1),pn={href:"https://pay.weixin.qq.com/wiki/doc/apiv3/wxpay/pages/index.shtml",target:"_blank",rel:"noopener noreferrer"},rn=a('<h3 id="后台管理端" tabindex="-1"><a class="header-anchor" href="#后台管理端" aria-hidden="true">#</a> 后台管理端</h3><p>后台管理端和小程序端使用的技术栈差不多。主要差别在后台管理的打包框架是<code>Vite</code>+<code>Vue官方插件</code>。小程序端是<code>Webpack</code>+<code>Taro插件</code>。当你了解各种技术的作用是什么之后就会发现，原来好多知识是可以复用的。只需要针对主要差别的地方去学习，这样才能够看懂官方文档。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>同样后台管理的模板语法也是<code>JSX</code>不是默认的<code>&lt;template/&gt;</code>模板语法。只需要重写学习模板语法这一章的内容就行了，剩下的内容一模一样。</p></div>',3),cn=n("thead",null,[n("tr",null,[n("th",null,"技术"),n("th",null,"说明"),n("th",null,"官网")])],-1),un=n("td",null,"Vite",-1),dn=n("td",null,"开箱即用的现代前端打包工具",-1),hn={href:"https://cn.vitejs.dev/",target:"_blank",rel:"noopener noreferrer"},_n=n("td",null,"Vue3",-1),kn=n("td",null,"Vue 基于标准 HTML 拓展了一套模板语法。Vue 会自动跟踪 JavaScript 状态并在其发生变化时响应式地更新 DOM",-1),gn={href:"https://cn.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},vn=n("td",null,"Vue Router",-1),fn=n("td",null,"Vue官方路由管理框架",-1),bn={href:"https://router.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},mn=n("td",null,"ElementUI Plus",-1),yn=n("td",null,"支持TypeScript提示的Vue3前端UI框架",-1),Sn={href:"https://element-plus.gitee.io/zh-CN/",target:"_blank",rel:"noopener noreferrer"},wn=n("td",null,"Pinia",-1),xn=n("td",null,"全局状态管理框架，支持TypeScript类型提示",-1),qn={href:"https://pinia.web3doc.top/",target:"_blank",rel:"noopener noreferrer"},jn=n("td",null,"TypeScript",-1),Vn=n("td",null,"让 JS 具备类型声明",-1),Jn={href:"https://www.typescriptlang.org/",target:"_blank",rel:"noopener noreferrer"},Tn=n("td",null,"ESLint",-1),Cn=n("td",null,"语法校验和格式整理",-1),Pn={href:"https://eslint.org/",target:"_blank",rel:"noopener noreferrer"},An=n("td",null,"DayJS",-1),Mn=n("td",null,"日期取值/赋值/运算等操作",-1),On={href:"https://dayjs.fenxianglu.cn/",target:"_blank",rel:"noopener noreferrer"};function In(Nn,En){const s=l("ExternalLinkIcon");return p(),r("div",null,[i,n("div",u,[d,n("p",null,[t("在编写Vue代码时我大部分用的是"),n("a",h,[_,e(s)]),t("。 其实就是Vue的渲染函数啦，相比于正常在"),k,t(" 中写的模板语法有一些改变，比如你看下面的"),g,t("与模板语法中的"),v,t("就不太一样。总的来说你会写Vue只需要花一些时间学习一下JSX就行了，不用害怕这个JSX语法很困难之类的。")]),f]),n("table",null,[b,n("tbody",null,[n("tr",null,[m,y,n("td",null,[n("a",S,[t("https://docs.taro.zone/"),e(s)])])]),n("tr",null,[w,x,n("td",null,[n("a",q,[t("https://cn.vuejs.org/"),e(s)])])]),n("tr",null,[j,V,n("td",null,[n("a",J,[t("https://nutui.jd.com/taro/vue/4x/#/zh-CN/guide/intro"),e(s)])])]),n("tr",null,[T,C,n("td",null,[n("a",P,[t("https://pinia.web3doc.top/"),e(s)])])]),n("tr",null,[A,M,n("td",null,[n("a",O,[t("https://www.typescriptlang.org/"),e(s)])])]),n("tr",null,[I,N,n("td",null,[n("a",E,[t("https://eslint.org/"),e(s)])])])])]),z,n("table",null,[D,n("tbody",null,[n("tr",null,[L,U,n("td",null,[n("a",B,[t("https://spring.io/projects/spring-boot"),e(s)])])]),n("tr",null,[H,R,n("td",null,[n("a",X,[t("https://sa-token.cc/"),e(s)])])]),n("tr",null,[W,G,n("td",null,[n("a",F,[t("https://spring.io/projects/spring-data-jpa/"),e(s)])])]),Q,n("tr",null,[K,Y,n("td",null,[n("a",Z,[t("https://mapstruct.org/"),e(s)])])]),n("tr",null,[$,nn,n("td",null,[n("a",tn,[t("对象存储 OSS-阿里云帮助中心 (aliyun.com)"),e(s)])])]),n("tr",null,[sn,en,n("td",null,[n("a",an,[t("微信开放文档 (qq.com)"),e(s)])])]),n("tr",null,[on,ln,n("td",null,[n("a",pn,[t("微信支付开发者文档 (qq.com)"),e(s)])])])])]),rn,n("table",null,[cn,n("tbody",null,[n("tr",null,[un,dn,n("td",null,[n("a",hn,[t("https://cn.vitejs.dev/"),e(s)])])]),n("tr",null,[_n,kn,n("td",null,[n("a",gn,[t("https://cn.vuejs.org/"),e(s)])])]),n("tr",null,[vn,fn,n("td",null,[n("a",bn,[t("https://router.vuejs.org/"),e(s)])])]),n("tr",null,[mn,yn,n("td",null,[n("a",Sn,[t("https://element-plus.gitee.io/zh-CN/"),e(s)])])]),n("tr",null,[wn,xn,n("td",null,[n("a",qn,[t("https://pinia.web3doc.top/"),e(s)])])]),n("tr",null,[jn,Vn,n("td",null,[n("a",Jn,[t("https://www.typescriptlang.org/"),e(s)])])]),n("tr",null,[Tn,Cn,n("td",null,[n("a",Pn,[t("https://eslint.org/"),e(s)])])]),n("tr",null,[An,Mn,n("td",null,[n("a",On,[t("https://dayjs.fenxianglu.cn/"),e(s)])])])])])])}const Ln=o(c,[["render",In],["__file","index.html.vue"]]);export{Ln as default};
