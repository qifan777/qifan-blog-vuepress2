const n=JSON.parse('{"key":"v-40e1b088","path":"/project/qifan-mall/reference/mp/page.html","title":"分页工具类","lang":"zh-CN","frontmatter":{"description":"分页工具类 使用组合式API的思想，将小程序分页加载数据的逻辑封装成一个工具类，使用起来非常简单。 加载动画 触底加载下页 下拉刷新 首次加载 import { type Ref, ref } from \\"vue\\"; import type { Page, QueryRequest } from \\"@/apis/__generated/model/static\\"; import _ from \\"lodash\\"; import Taro from \\"@tarojs/taro\\"; export type PageResult&lt;T&gt; = Pick&lt; Page&lt;T&gt;, \\"content\\" | \\"number\\" | \\"size\\" | \\"totalElements\\" | \\"totalPages\\" &gt;; export const usePageHelper = &lt;T extends Object, E&gt;( // 调用后端的查询接口 queryApi: (options: { readonly body: QueryRequest&lt;T&gt;; }) =&gt; Promise&lt;PageResult&lt;E&gt;&gt;, object: unknown, // 查询条件 initQuery?: T, // 分页数据后置处理 postProcessor?: (data: PageResult&lt;E&gt;) =&gt; void, ) =&gt; { const pageData = ref({ content: [] as E, number: 1, size: 10, totalElements: 0, totalPages: 0, }) as Ref&lt;PageResult&lt;E&gt;&gt;; const queryRequest = ref({ query: { ...initQuery } ?? {}, pageNum: 1, pageSize: 10, likeMode: \\"ANYWHERE\\", sorts: [{ property: \\"createdTime\\", direction: \\"DESC\\" }], }) as Ref&lt;QueryRequest&lt;T&gt;&gt;; const loading = ref(false); const finish = ref(false); // 请求分页数据 const loadPageData = (request: Partial&lt;QueryRequest&lt;T&gt;&gt; = {}) =&gt; { // 通用查询对象，防止传入空值 queryRequest.value = { ...queryRequest.value, ..._.omitBy(request, _.isNil), }; // 如果查询条件为null，undefined，空字符串则过滤不提交 queryRequest.value.query = { ..._.omitBy(queryRequest.value.query, (row) =&gt; { if (_.isString(row)) { return _.isEmpty(row); } else { return _.isNil(row); } }), } as T; if (finish.value) return; // 显示加载动画 loading.value = true; // 调用查询接口 queryApi.apply(object, [{ body: queryRequest.value }]).then( (res: PageResult&lt;E&gt;) =&gt; { if (postProcessor !== undefined) { postProcessor(res); } // 返回结果 pageData.value.content.push(...res.content); finish.value = res.content.length &lt; res.size; queryRequest.value.pageNum = (queryRequest.value.pageNum || 1) + 1; // 取消加载动画 loading.value = false; }, (res) =&gt; { console.log(res); }, ); }; // 重新请求分页数据，pageNum=1, pageSize=10 const reloadPageData = ( queryRequest: Partial&lt;QueryRequest&lt;T&gt;&gt; = { pageNum: 1, pageSize: 10 }, ) =&gt; { loadPageData(queryRequest); }; // 下拉刷新 Taro.usePullDownRefresh(() =&gt; { finish.value = false; pageData.value.content = []; reloadPageData(); setTimeout(() =&gt; { Taro.stopPullDownRefresh(); }, 300); }); // 触底加载 Taro.useReachBottom(() =&gt; { loadPageData(); }); // 首次进入页面加载 Taro.useLoad(() =&gt; { loadPageData(); }); return { loading, queryRequest, pageData, loadPageData, reloadPageData, }; };","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/qifan-blog-vuepress2/project/qifan-mall/reference/mp/page.html"}],["meta",{"property":"og:site_name","content":"起凡Code闲聊"}],["meta",{"property":"og:title","content":"分页工具类"}],["meta",{"property":"og:description","content":"分页工具类 使用组合式API的思想，将小程序分页加载数据的逻辑封装成一个工具类，使用起来非常简单。 加载动画 触底加载下页 下拉刷新 首次加载 import { type Ref, ref } from \\"vue\\"; import type { Page, QueryRequest } from \\"@/apis/__generated/model/static\\"; import _ from \\"lodash\\"; import Taro from \\"@tarojs/taro\\"; export type PageResult&lt;T&gt; = Pick&lt; Page&lt;T&gt;, \\"content\\" | \\"number\\" | \\"size\\" | \\"totalElements\\" | \\"totalPages\\" &gt;; export const usePageHelper = &lt;T extends Object, E&gt;( // 调用后端的查询接口 queryApi: (options: { readonly body: QueryRequest&lt;T&gt;; }) =&gt; Promise&lt;PageResult&lt;E&gt;&gt;, object: unknown, // 查询条件 initQuery?: T, // 分页数据后置处理 postProcessor?: (data: PageResult&lt;E&gt;) =&gt; void, ) =&gt; { const pageData = ref({ content: [] as E, number: 1, size: 10, totalElements: 0, totalPages: 0, }) as Ref&lt;PageResult&lt;E&gt;&gt;; const queryRequest = ref({ query: { ...initQuery } ?? {}, pageNum: 1, pageSize: 10, likeMode: \\"ANYWHERE\\", sorts: [{ property: \\"createdTime\\", direction: \\"DESC\\" }], }) as Ref&lt;QueryRequest&lt;T&gt;&gt;; const loading = ref(false); const finish = ref(false); // 请求分页数据 const loadPageData = (request: Partial&lt;QueryRequest&lt;T&gt;&gt; = {}) =&gt; { // 通用查询对象，防止传入空值 queryRequest.value = { ...queryRequest.value, ..._.omitBy(request, _.isNil), }; // 如果查询条件为null，undefined，空字符串则过滤不提交 queryRequest.value.query = { ..._.omitBy(queryRequest.value.query, (row) =&gt; { if (_.isString(row)) { return _.isEmpty(row); } else { return _.isNil(row); } }), } as T; if (finish.value) return; // 显示加载动画 loading.value = true; // 调用查询接口 queryApi.apply(object, [{ body: queryRequest.value }]).then( (res: PageResult&lt;E&gt;) =&gt; { if (postProcessor !== undefined) { postProcessor(res); } // 返回结果 pageData.value.content.push(...res.content); finish.value = res.content.length &lt; res.size; queryRequest.value.pageNum = (queryRequest.value.pageNum || 1) + 1; // 取消加载动画 loading.value = false; }, (res) =&gt; { console.log(res); }, ); }; // 重新请求分页数据，pageNum=1, pageSize=10 const reloadPageData = ( queryRequest: Partial&lt;QueryRequest&lt;T&gt;&gt; = { pageNum: 1, pageSize: 10 }, ) =&gt; { loadPageData(queryRequest); }; // 下拉刷新 Taro.usePullDownRefresh(() =&gt; { finish.value = false; pageData.value.content = []; reloadPageData(); setTimeout(() =&gt; { Taro.stopPullDownRefresh(); }, 300); }); // 触底加载 Taro.useReachBottom(() =&gt; { loadPageData(); }); // 首次进入页面加载 Taro.useLoad(() =&gt; { loadPageData(); }); return { loading, queryRequest, pageData, loadPageData, reloadPageData, }; };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-23T13:35:55.000Z"}],["meta",{"property":"article:author","content":"起凡"}],["meta",{"property":"article:modified_time","content":"2024-01-23T13:35:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"分页工具类\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-23T13:35:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"起凡\\",\\"url\\":\\"https://www.jarcheng.top\\"}]}"]]},"headers":[],"git":{"createdTime":1706016955000,"updatedTime":1706016955000,"contributors":[{"name":"linjiacheng","email":"1507906763@qq.com","commits":1}]},"readingTime":{"minutes":1.27,"words":380},"filePathRelative":"project/qifan-mall/reference/mp/page.md","localizedDate":"2024年1月23日","excerpt":"<h1> 分页工具类</h1>\\n<p>使用组合式API的思想，将小程序分页加载数据的逻辑封装成一个工具类，使用起来非常简单。</p>\\n<ol>\\n<li>加载动画</li>\\n<li>触底加载下页</li>\\n<li>下拉刷新</li>\\n<li>首次加载</li>\\n</ol>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">type</span> <span class=\\"token class-name\\">Ref</span><span class=\\"token punctuation\\">,</span> ref <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\\"vue\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token keyword\\">type</span> <span class=\\"token punctuation\\">{</span> Page<span class=\\"token punctuation\\">,</span> QueryRequest <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\\"@/apis/__generated/model/static\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> _ <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\\"lodash\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> Taro <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\\"@tarojs/taro\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">type</span> <span class=\\"token class-name\\">PageResult<span class=\\"token operator\\">&lt;</span><span class=\\"token constant\\">T</span><span class=\\"token operator\\">&gt;</span></span> <span class=\\"token operator\\">=</span> Pick<span class=\\"token operator\\">&lt;</span>\\n  Page<span class=\\"token operator\\">&lt;</span><span class=\\"token constant\\">T</span><span class=\\"token operator\\">&gt;</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token string\\">\\"content\\"</span> <span class=\\"token operator\\">|</span> <span class=\\"token string\\">\\"number\\"</span> <span class=\\"token operator\\">|</span> <span class=\\"token string\\">\\"size\\"</span> <span class=\\"token operator\\">|</span> <span class=\\"token string\\">\\"totalElements\\"</span> <span class=\\"token operator\\">|</span> <span class=\\"token string\\">\\"totalPages\\"</span>\\n<span class=\\"token operator\\">&gt;</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">const</span> usePageHelper <span class=\\"token operator\\">=</span> <span class=\\"token operator\\">&lt;</span><span class=\\"token constant\\">T</span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\">Object</span><span class=\\"token punctuation\\">,</span> <span class=\\"token constant\\">E</span><span class=\\"token operator\\">&gt;</span><span class=\\"token punctuation\\">(</span>\\n  <span class=\\"token comment\\">// 调用后端的查询接口</span>\\n  <span class=\\"token function-variable function\\">queryApi</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span>options<span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">readonly</span> body<span class=\\"token operator\\">:</span> QueryRequest<span class=\\"token operator\\">&lt;</span><span class=\\"token constant\\">T</span><span class=\\"token operator\\">&gt;</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token builtin\\">Promise</span><span class=\\"token operator\\">&lt;</span>PageResult<span class=\\"token operator\\">&lt;</span><span class=\\"token constant\\">E</span><span class=\\"token operator\\">&gt;&gt;</span><span class=\\"token punctuation\\">,</span>\\n  object<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">unknown</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token comment\\">// 查询条件</span>\\n  initQuery<span class=\\"token operator\\">?</span><span class=\\"token operator\\">:</span> <span class=\\"token constant\\">T</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token comment\\">// 分页数据后置处理</span>\\n  postProcessor<span class=\\"token operator\\">?</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span>data<span class=\\"token operator\\">:</span> PageResult<span class=\\"token operator\\">&lt;</span><span class=\\"token constant\\">E</span><span class=\\"token operator\\">&gt;</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">const</span> pageData <span class=\\"token operator\\">=</span> <span class=\\"token function\\">ref</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n    content<span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token keyword\\">as</span> <span class=\\"token constant\\">E</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token builtin\\">number</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span>\\n    size<span class=\\"token operator\\">:</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">,</span>\\n    totalElements<span class=\\"token operator\\">:</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span>\\n    totalPages<span class=\\"token operator\\">:</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">as</span> Ref<span class=\\"token operator\\">&lt;</span>PageResult<span class=\\"token operator\\">&lt;</span><span class=\\"token constant\\">E</span><span class=\\"token operator\\">&gt;&gt;</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">const</span> queryRequest <span class=\\"token operator\\">=</span> <span class=\\"token function\\">ref</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n    query<span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token operator\\">...</span>initQuery <span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">??</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n    pageNum<span class=\\"token operator\\">:</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span>\\n    pageSize<span class=\\"token operator\\">:</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">,</span>\\n    likeMode<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"ANYWHERE\\"</span><span class=\\"token punctuation\\">,</span>\\n    sorts<span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">{</span> property<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"createdTime\\"</span><span class=\\"token punctuation\\">,</span> direction<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"DESC\\"</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">as</span> Ref<span class=\\"token operator\\">&lt;</span>QueryRequest<span class=\\"token operator\\">&lt;</span><span class=\\"token constant\\">T</span><span class=\\"token operator\\">&gt;&gt;</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">const</span> loading <span class=\\"token operator\\">=</span> <span class=\\"token function\\">ref</span><span class=\\"token punctuation\\">(</span><span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">const</span> finish <span class=\\"token operator\\">=</span> <span class=\\"token function\\">ref</span><span class=\\"token punctuation\\">(</span><span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token comment\\">// 请求分页数据</span>\\n  <span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">loadPageData</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>request<span class=\\"token operator\\">:</span> Partial<span class=\\"token operator\\">&lt;</span>QueryRequest<span class=\\"token operator\\">&lt;</span><span class=\\"token constant\\">T</span><span class=\\"token operator\\">&gt;&gt;</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 通用查询对象，防止传入空值</span>\\n    queryRequest<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token operator\\">...</span>queryRequest<span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token operator\\">...</span>_<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">omitBy</span><span class=\\"token punctuation\\">(</span>request<span class=\\"token punctuation\\">,</span> _<span class=\\"token punctuation\\">.</span>isNil<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 如果查询条件为null，undefined，空字符串则过滤不提交</span>\\n    queryRequest<span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">.</span>query <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token operator\\">...</span>_<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">omitBy</span><span class=\\"token punctuation\\">(</span>queryRequest<span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">.</span>query<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span>row<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>_<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">isString</span><span class=\\"token punctuation\\">(</span>row<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n          <span class=\\"token keyword\\">return</span> _<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">isEmpty</span><span class=\\"token punctuation\\">(</span>row<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n          <span class=\\"token keyword\\">return</span> _<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">isNil</span><span class=\\"token punctuation\\">(</span>row<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n      <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">as</span> <span class=\\"token constant\\">T</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>finish<span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 显示加载动画</span>\\n    loading<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 调用查询接口</span>\\n    <span class=\\"token function\\">queryApi</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">apply</span><span class=\\"token punctuation\\">(</span>object<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">{</span> body<span class=\\"token operator\\">:</span> queryRequest<span class=\\"token punctuation\\">.</span>value <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">then</span><span class=\\"token punctuation\\">(</span>\\n      <span class=\\"token punctuation\\">(</span>res<span class=\\"token operator\\">:</span> PageResult<span class=\\"token operator\\">&lt;</span><span class=\\"token constant\\">E</span><span class=\\"token operator\\">&gt;</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>postProcessor <span class=\\"token operator\\">!==</span> <span class=\\"token keyword\\">undefined</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n          <span class=\\"token function\\">postProcessor</span><span class=\\"token punctuation\\">(</span>res<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token comment\\">// 返回结果</span>\\n        pageData<span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">.</span>content<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">...</span>res<span class=\\"token punctuation\\">.</span>content<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        finish<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> res<span class=\\"token punctuation\\">.</span>content<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">&lt;</span> res<span class=\\"token punctuation\\">.</span>size<span class=\\"token punctuation\\">;</span>\\n        queryRequest<span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">.</span>pageNum <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>queryRequest<span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">.</span>pageNum <span class=\\"token operator\\">||</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 取消加载动画</span>\\n        loading<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token punctuation\\">(</span>res<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>res<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token comment\\">// 重新请求分页数据，pageNum=1, pageSize=10</span>\\n  <span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">reloadPageData</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>\\n    queryRequest<span class=\\"token operator\\">:</span> Partial<span class=\\"token operator\\">&lt;</span>QueryRequest<span class=\\"token operator\\">&lt;</span><span class=\\"token constant\\">T</span><span class=\\"token operator\\">&gt;&gt;</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span> pageNum<span class=\\"token operator\\">:</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> pageSize<span class=\\"token operator\\">:</span> <span class=\\"token number\\">10</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">loadPageData</span><span class=\\"token punctuation\\">(</span>queryRequest<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token comment\\">// 下拉刷新</span>\\n  Taro<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">usePullDownRefresh</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    finish<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n    pageData<span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">.</span>content <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token function\\">reloadPageData</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token function\\">setTimeout</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n      Taro<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">stopPullDownRefresh</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">300</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token comment\\">// 触底加载</span>\\n  Taro<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">useReachBottom</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">loadPageData</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token comment\\">// 首次进入页面加载</span>\\n  Taro<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">useLoad</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">loadPageData</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">{</span>\\n    loading<span class=\\"token punctuation\\">,</span>\\n    queryRequest<span class=\\"token punctuation\\">,</span>\\n    pageData<span class=\\"token punctuation\\">,</span>\\n    loadPageData<span class=\\"token punctuation\\">,</span>\\n    reloadPageData<span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
