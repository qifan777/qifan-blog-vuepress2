import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{o as t,c as e,b as p,e as n,f as a,a as o}from"./app-8bdc0ac5.js";const c={},i=n("p",null,[a("利用Idea的HttpClient向SpringBoot发起各种请求参数。后端使用"),n("code",null,"@RequestParam"),a("，"),n("code",null,"@ModelAttribute"),a("，"),n("code",null,"@PathVariable"),a("，"),n("code",null,"@RequestBody"),a("，"),n("code",null,"@RequestPart"),a("去接收。")],-1),l=o(`<h1 id="http各种参数发送" tabindex="-1"><a class="header-anchor" href="#http各种参数发送" aria-hidden="true">#</a> HTTP各种参数发送</h1><h2 id="_1-spring-mvc-中的参数接受之-get-请求" tabindex="-1"><a class="header-anchor" href="#_1-spring-mvc-中的参数接受之-get-请求" aria-hidden="true">#</a> 1. spring mvc 中的参数接受之 GET 请求</h2><p>Get 请求是没有 body 的，参数都是放在 url 上面。<br> 根据在 url 参数格式不同，一共有下面这几种</p><ol><li>Path Variable</li><li>Query</li><li>Matrix Variable（不常用）</li></ol><h2 id="_1-1-path-variable" tabindex="-1"><a class="header-anchor" href="#_1-1-path-variable" aria-hidden="true">#</a> 1.1 path variable</h2><h3 id="_1-1-1-使用-pathvariable" tabindex="-1"><a class="header-anchor" href="#_1-1-1-使用-pathvariable" aria-hidden="true">#</a> 1.1.1 使用 <code>@PathVariable</code></h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>GET http://localhost:7720/user/find/123/起凡
                                    \\ /
                                这里的&quot;123&quot;和&quot;起凡&quot;是参数
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种传参格式就如同名字一样&quot;路径变量&quot;，参数在路径上。</p><p>针对这种传参方式后端可以这么接受。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token comment">// 在路径中用id占位，代表这个地方将会是参数</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;find/{id}/{username}&quot;</span><span class="token punctuation">)</span>
    <span class="token comment">// 方法上面通过占位名称得到参数</span>
    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> <span class="token function">pathVariable</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> id<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1-2-query-传参" tabindex="-1"><a class="header-anchor" href="#_1-2-query-传参" aria-hidden="true">#</a> 1.2 query 传参</h2><h3 id="_1-2-1-使用-requestparam" tabindex="-1"><a class="header-anchor" href="#_1-2-1-使用-requestparam" aria-hidden="true">#</a> 1.2.1 使用 <code>@RequestParam</code></h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>###
GET http://localhost:7720/user/find?username=起凡&amp;password=123456

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在路径的最后用 &quot;?&quot; 隔开要传输的参数。 通过 &quot;&amp;&quot; 分割多个 <code>key=value</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;find&quot;</span><span class="token punctuation">)</span>
    <span class="token comment">// 通过key接受参数</span>
    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-2-使用-modelattribute" tabindex="-1"><a class="header-anchor" href="#_1-2-2-使用-modelattribute" aria-hidden="true">#</a> 1.2.2 使用 <code>@ModelAttribute</code></h3><p>如果现在需要做一个用户搜索功能，前端会传 pageNum（页数）, pageSize（每页大小）, keyword（关键词），startTime（创建日期）。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>GET http://localhost:7720/user/search?pageNum=1&amp;pageSize=10
&amp;keyword=起凡&amp;startTime=Fri Apr 29 2022 21:16:50
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 <code>@RequestParam</code>，我们需要在接口上接受四个参数，这样会显得接口过于庞大，不雅观。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;search&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">Integer</span> pageSize<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">Integer</span> pageNum<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> keyword<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">Date</span> startTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>改造一下，我们可以创建一个 SearchDto</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SearchDto</span> <span class="token punctuation">{</span>
    <span class="token class-name">Integer</span> pageNum<span class="token punctuation">;</span>
    <span class="token class-name">Integer</span> pageSize<span class="token punctuation">;</span>
    <span class="token class-name">String</span> keyword<span class="token punctuation">;</span>
    <span class="token class-name">Date</span> startTime<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过 <code>@ModelAttribute</code> 就可以接受多个 query 参数</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;search&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token annotation punctuation">@ModelAttribute</span> <span class="token class-name">SearchDto</span> searchDto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>searchDto<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-3-使用-modelattribute-和-requestparam" tabindex="-1"><a class="header-anchor" href="#_1-2-3-使用-modelattribute-和-requestparam" aria-hidden="true">#</a> 1.2.3 使用 <code>@ModelAttribute</code> 和 <code>@RequestParam</code></h3><p>刚刚我们做的是用户搜索功能，现在假设我们需要做文章搜索功能。文章搜索的过滤条件比用户搜索多了一个 category（文章类别）。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>GET http://localhost:7720/article/search?pageNum=1&amp;pageSize=10
&amp;keyword=spring boot&amp;startTime=Fri Apr 29 2022 21:16:50&amp;category=科技
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这时我们可以再创建一个 ArticleSearchDto 然后继承 SearchDto</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArticleSearchDto</span> <span class="token keyword">extends</span> <span class="token class-name">SearchDto</span><span class="token punctuation">{</span>
    <span class="token class-name">String</span> category<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在文章搜索接口上接受 ArticleSearchDto</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;search&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token annotation punctuation">@ModelAttribute</span> <span class="token class-name">ArticleSearchDto</span> searchDto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>searchDto<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是这样真的方便吗？因为多出一个字段就要再建立一个类，是不是有点麻烦了。我们完全可以把<code>@ModelAttribute</code> 和 <code>@RequestParam</code><br> 结合起来使用</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;search&quot;</span><span class="token punctuation">)</span>
    <span class="token comment">// @RequestParam 获取新增的过滤条件</span>
    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token annotation punctuation">@ModelAttribute</span> <span class="token class-name">SearchDto</span> searchDto<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> category<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>searchDto<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>category<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-spring-mvc-中的参数接受之-post-请求" tabindex="-1"><a class="header-anchor" href="#_2-spring-mvc-中的参数接受之-post-请求" aria-hidden="true">#</a> 2. spring mvc 中的参数接受之 POST 请求</h2><p>POST 请求的参数可以放在 url 上，也可以放在 body 种。<br> POST 请求的 body 格式大概可以分为两种，</p><ol><li>一种是只能传输一个对象</li><li>一种是可以传输多个对象。</li></ol><p>application/json，application/x-www-form-urlencoded 属于第一种</p><p>multipart/form-data 属于第二种。</p><h2 id="_2-1-application-x-www-form-urlencoded-传参" tabindex="-1"><a class="header-anchor" href="#_2-1-application-x-www-form-urlencoded-传参" aria-hidden="true">#</a> 2.1 application/x-www-form-urlencoded 传参</h2><h3 id="_2-1-1-requestparam-和-modelattribute" tabindex="-1"><a class="header-anchor" href="#_2-1-1-requestparam-和-modelattribute" aria-hidden="true">#</a> 2.1.1 <code>@RequestParam</code> 和 <code>@ModelAttribute</code></h3><p>通过上面的例子可以知道，<code>@RequestParam</code> 和 <code>@ModelAttribute</code>可以获取 query 里面的参数。</p><p>实际上这两个注解还可以获取 application/x-www-form-urlencoded 里面的参数。</p><p>之前是通过 get 请求进行文章搜索。现在改造一下，前端通过 post 请求进行文章搜索。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>POST http://localhost:7720/article/search?author=起凡&amp;pageSize=10
Content-Type: application/x-www-form-urlencoded

pageNum=1&amp;keyword=spring boot&amp;startTime=Fri Apr 29 2022 21:16:50&amp;category=科技
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我特意把 author 和 pageSize 放在 query 里面，看看 springboot 是否能接受到参数。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;search&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token annotation punctuation">@ModelAttribute</span> <span class="token class-name">SearchDto</span> searchDto<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> category<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> author<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>searchDto<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;category = &quot;</span> <span class="token operator">+</span> category<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;author = &quot;</span> <span class="token operator">+</span> author<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SearchDto(pageNum=1, pageSize=10, keyword=spring boot, startTime=Fri Apr 29 21:16:50 CST 2022)
category = 科技
author = 起凡
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果分析：</p><ol><li>pageSize 和 pageNum 分别在 query 和 form 里面，但是依然被 <code>@ModelAttribute</code> 正确绑定到 SearchDto 的 pageSize 和<br> pageNum 属性上。</li><li>category 和 author 分别在 query 和 form 里面， 但是依然被 <code>@RequestParam</code> 正确的获取到。</li></ol><h2 id="_2-2-application-json-传参" tabindex="-1"><a class="header-anchor" href="#_2-2-application-json-传参" aria-hidden="true">#</a> 2.2 application/json 传参</h2><h3 id="_2-2-1-requestbody-和-requestparam" tabindex="-1"><a class="header-anchor" href="#_2-2-1-requestbody-和-requestparam" aria-hidden="true">#</a> 2.2.1 <code>@RequestBody</code> 和 <code>@RequestParam</code></h3><p>还是上面的文章搜索功能，但是这次前端会把搜索条件用 json 格式发送</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>###
POST http://localhost:7720/article/search?category=科技
Content-Type: application/json
jctoken: bef84c6b-e160-4590-82a9-191f0c8a17fa

{
  &quot;pageNum&quot;: 1,
  &quot;pageSize&quot;: 10,
  &quot;startTime&quot;: &quot;2022-04-29T22:52:00&quot;,
  &quot;keyword&quot;: &quot;spring boot&quot;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后台接收</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;search&quot;</span><span class="token punctuation">)</span>
    <span class="token comment">// 通过@RequestParam获取query中的额外参数</span>
    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">SearchDto</span> searchDto<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> category<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>searchDto<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;category = &quot;</span> <span class="token operator">+</span> category<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为文章搜索多出了 category 这个参数，后端的 SearchDto 中没有这个属性，如果放在 json 里面 <code>@RequestBody</code> 就无法接收这个参数。所以把<br> category 放在 query 中然后通过 <code>@RequestParam</code> 接收。</p><p><code>@RequestBody</code> 还可以接收嵌套的 json对象，只需要后端创建相应的类就可以了</p><h2 id="_2-3-multipart-form-data" tabindex="-1"><a class="header-anchor" href="#_2-3-multipart-form-data" aria-hidden="true">#</a> 2.3 multipart/form-data</h2><p>这种格式的 body 有许多 part，每个 part 通过一个分隔符分割。<br> body 格式如下</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">## boundary 参数告诉请求接受者，要使用 &quot;aBoundaryString&quot; 对 body 进行分割。</span>
Content<span class="token operator">-</span>Type<span class="token punctuation">:</span> multipart<span class="token operator">/</span>form<span class="token operator">-</span>data<span class="token punctuation">;</span> boundary<span class="token operator">=</span>aBoundaryString

<span class="token comment">## 发送请求时，使用 &quot;aBoundaryString&quot; 进行分割，</span>
<span class="token comment">## 这个分隔符一定要和上面规定的一样</span>
<span class="token operator">-</span><span class="token operator">-</span>aBoundaryString
<span class="token comment">## name是每一部分的名称，后端可以通过@RequestParam(&quot;myFile&quot;) 获取到这个部分</span>
Content<span class="token operator">-</span>Disposition<span class="token punctuation">:</span> form<span class="token operator">-</span>data<span class="token punctuation">;</span> name<span class="token operator">=</span><span class="token string">&quot;myFile&quot;</span><span class="token punctuation">;</span> filename<span class="token operator">=</span><span class="token string">&quot;img.jpg&quot;</span>
<span class="token comment">## 二进制数据的格式是什么</span>
Content<span class="token operator">-</span>Type<span class="token punctuation">:</span> image<span class="token operator">/</span>jpeg

<span class="token punctuation">(</span>二进制数据<span class="token punctuation">)</span>
<span class="token operator">-</span><span class="token operator">-</span>aBoundaryString
<span class="token comment">## name是每一部分的名称，后端可以通过@RequestParam(&quot;text&quot;) 获取到这个部分</span>
Content<span class="token operator">-</span>Disposition<span class="token punctuation">:</span> form<span class="token operator">-</span>data<span class="token punctuation">;</span> name<span class="token operator">=</span><span class="token string">&quot;text&quot;</span>

<span class="token punctuation">(</span>二进制文本数据，可以是json，xml，文本<span class="token punctuation">)</span>
<span class="token operator">-</span><span class="token operator">-</span>aBoundaryString
<span class="token punctuation">(</span>more subparts<span class="token punctuation">)</span>
<span class="token comment">## 结尾分割符 需要在末尾加上 &quot;--&quot;</span>
<span class="token operator">-</span><span class="token operator">-</span>aBoundaryString<span class="token operator">-</span><span class="token operator">-</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-1-requestparam-单个接受文件" tabindex="-1"><a class="header-anchor" href="#_2-3-1-requestparam-单个接受文件" aria-hidden="true">#</a> 2.3.1 <code>@RequestParam</code> 单个接受文件</h3><p>现在前端想要上传一张图片，图片的名称为 123.png，接受参数为 file。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>POST http<span class="token punctuation">:</span><span class="token operator">//</span>localhost<span class="token punctuation">:</span><span class="token number">7720</span><span class="token operator">/</span>test<span class="token operator">/</span>upload1
Content<span class="token operator">-</span>Type<span class="token punctuation">:</span> multipart<span class="token operator">/</span>form<span class="token operator">-</span>data<span class="token punctuation">;</span> boundary<span class="token operator">=</span>起凡分隔符

<span class="token operator">-</span><span class="token operator">-</span>起凡分隔符
Content<span class="token operator">-</span>Disposition<span class="token punctuation">:</span> form<span class="token operator">-</span>data<span class="token punctuation">;</span> name<span class="token operator">=</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">;</span> filename<span class="token operator">=</span><span class="token string">&quot;123.png&quot;</span>
Content<span class="token operator">-</span>Type<span class="token punctuation">:</span> image<span class="token operator">/</span>png

<span class="token punctuation">(</span>文件数据<span class="token punctuation">)</span>
<span class="token operator">-</span><span class="token operator">-</span>起凡分隔符<span class="token operator">-</span><span class="token operator">-</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后端接收</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;upload1&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">)</span> <span class="token class-name">MultipartFile</span> multipartFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>multipartFile<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-2-requestparam-接受多个文件" tabindex="-1"><a class="header-anchor" href="#_2-3-2-requestparam-接受多个文件" aria-hidden="true">#</a> 2.3.2 <code>@RequestParam</code> 接受多个文件</h3><p>前端现在想批量上传文件，后端应该如何接受呢？</p><p>因为文件的数量是不固定的，并且 name<br> 参数也是未知的，后端不能像上面那样以这种方式接收 <code> @RequestParam(&quot;file1&quot;)</code>，<code>@RequestParam(&quot;file2&quot;)</code> ...</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>POST http<span class="token punctuation">:</span><span class="token operator">//</span>localhost<span class="token punctuation">:</span><span class="token number">7720</span><span class="token operator">/</span>test<span class="token operator">/</span>upload2
Content<span class="token operator">-</span>Type<span class="token punctuation">:</span> multipart<span class="token operator">/</span>form<span class="token operator">-</span>data<span class="token punctuation">;</span> boundary<span class="token operator">=</span>起凡分隔符

<span class="token operator">-</span><span class="token operator">-</span>起凡分隔符
<span class="token comment">## name 随机取值</span>
Content<span class="token operator">-</span>Disposition<span class="token punctuation">:</span> form<span class="token operator">-</span>data<span class="token punctuation">;</span> name<span class="token operator">=</span><span class="token string">&quot;asdasdas&quot;</span><span class="token punctuation">;</span> filename<span class="token operator">=</span><span class="token string">&quot;123.png&quot;</span>
Content<span class="token operator">-</span>Type<span class="token punctuation">:</span> image<span class="token operator">/</span>png

<span class="token punctuation">(</span>二进制数据<span class="token punctuation">)</span>
<span class="token operator">-</span><span class="token operator">-</span>起凡分隔符
<span class="token comment">## name 随机取值</span>
Content<span class="token operator">-</span>Disposition<span class="token punctuation">:</span> form<span class="token operator">-</span>data<span class="token punctuation">;</span> name<span class="token operator">=</span><span class="token string">&quot;asdasdasssdasdsada&quot;</span><span class="token punctuation">;</span> filename<span class="token operator">=</span><span class="token string">&quot;mytext.txt&quot;</span>
Content<span class="token operator">-</span>Type<span class="token punctuation">:</span> text<span class="token operator">/</span>plain

<span class="token punctuation">(</span>二进制数据<span class="token punctuation">)</span>
<span class="token operator">-</span><span class="token operator">-</span>起凡分隔符<span class="token operator">-</span><span class="token operator">-</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后端接收</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;upload2&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> <span class="token function">upload2</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">MultipartFile</span><span class="token punctuation">&gt;</span></span> multipartFileMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        multipartFileMap<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> file<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;name = &quot;</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;filename = &quot;</span> <span class="token operator">+</span> file<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>name = asdasdas
filename = 123.png
-----------------------
name = asdasdasssdasdsada
filename = mytext.txt
-----------------------
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>分析结果：</p><p>后端通一个 map 把前端传过来的参数封装起来，map 的 key 是 name，map 的 value 是文件内容</p><h3 id="_2-3-3-requestpart-接收-json-和文件" tabindex="-1"><a class="header-anchor" href="#_2-3-3-requestpart-接收-json-和文件" aria-hidden="true">#</a> 2.3.3 <code>@RequestPart</code> 接收 json 和文件</h3><p>假设前端想要发送一张图片，并且要附上这张图片的描述信息，那后端应该如何接收？</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>POST http<span class="token punctuation">:</span><span class="token operator">//</span>localhost<span class="token punctuation">:</span><span class="token number">7720</span><span class="token operator">/</span>test<span class="token operator">/</span>upload3
Content<span class="token operator">-</span>Type<span class="token punctuation">:</span> multipart<span class="token operator">/</span>form<span class="token operator">-</span>data<span class="token punctuation">;</span> boundary<span class="token operator">=</span>起凡分隔符

<span class="token operator">-</span><span class="token operator">-</span>起凡分隔符
Content<span class="token operator">-</span>Disposition<span class="token punctuation">:</span> form<span class="token operator">-</span>data<span class="token punctuation">;</span> name<span class="token operator">=</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">;</span> filename<span class="token operator">=</span><span class="token string">&quot;123.png&quot;</span>
Content<span class="token operator">-</span>Type<span class="token punctuation">:</span> image<span class="token operator">/</span>png

<span class="token punctuation">(</span>二进制数据<span class="token punctuation">)</span>
<span class="token operator">-</span><span class="token operator">-</span>起凡分隔符
Content<span class="token operator">-</span>Disposition<span class="token punctuation">:</span> form<span class="token operator">-</span>data<span class="token punctuation">;</span> name<span class="token operator">=</span><span class="token string">&quot;meta-data&quot;</span><span class="token punctuation">;</span>
Content<span class="token operator">-</span>Type<span class="token punctuation">:</span> application<span class="token operator">/</span>json<span class="token punctuation">;</span>

<span class="token punctuation">{</span>
  <span class="token string">&quot;createTime&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;2022-04-29T10:52:00&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;location&quot;</span> <span class="token punctuation">:</span> <span class="token string">&quot;福建省 泉州市 华侨大学&quot;</span>
<span class="token punctuation">}</span>
<span class="token operator">-</span><span class="token operator">-</span>起凡分隔符<span class="token operator">-</span><span class="token operator">-</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后端接收</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileMetaData</span> <span class="token punctuation">{</span>
    <span class="token class-name">Date</span> createTime<span class="token punctuation">;</span>
    <span class="token class-name">String</span> location<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;upload3&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> <span class="token function">upload3</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestPart</span><span class="token punctuation">(</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">)</span> <span class="token class-name">MultipartFile</span> multipartFile<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestPart</span><span class="token punctuation">(</span><span class="token string">&quot;meta-data&quot;</span><span class="token punctuation">)</span> <span class="token class-name">FileMetaData</span> fileMetaData<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;filename = &quot;</span> <span class="token operator">+</span> multipartFile<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>fileMetaData<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>filename = 123.png
FileMetaData(createTime=Fri Apr 29 18:52:00 CST 2022, location=福建省 泉州市 华侨大学)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>结果分析：</p><ol><li><p>meta-data 对应的 part 是 json 格式，<code>@RequestPart</code> 自动把它变成 FileMetaData。</p></li><li><p>file 对应的 part 是文件，<code>@RequestPart</code> 自动把它变成 MultipartFile</p></li></ol>`,86);function u(r,d){return t(),e("div",null,[i,p(" more "),l])}const v=s(c,[["render",u],["__file","index.html.vue"]]);export{v as default};
