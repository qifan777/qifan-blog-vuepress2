import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as i,c as u,e as n,f as a,d as s,w as p,a as t}from"./app-fd86a523.js";const r="/qifan-blog-vuepress2/assets/image_1-db01eb48.png",k={},d=t('<h1 id="商品管理" tabindex="-1"><a class="header-anchor" href="#商品管理" aria-hidden="true">#</a> 商品管理</h1><figure><img src="'+r+`" alt="商品信息" height="350" tabindex="0" loading="lazy"><figcaption>商品信息</figcaption></figure><h2 id="建表" tabindex="-1"><a class="header-anchor" href="#建表" aria-hidden="true">#</a> 建表</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- auto-generated definition</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> product
<span class="token punctuation">(</span>
    id             <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span>    <span class="token operator">not</span> <span class="token boolean">null</span>
        <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>
    created_time   <span class="token keyword">datetime</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>    <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    edited_time    <span class="token keyword">datetime</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>    <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    creator_id     <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span>    <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    editor_id      <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span>    <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    name           <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>   <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    price          <span class="token keyword">decimal</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    cover          <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>   <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    brand          <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>   <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    category_id    <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span>    <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    stock          <span class="token keyword">int</span>            <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    description    <span class="token keyword">text</span>           <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    tags           <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>   <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    specifications <span class="token keyword">text</span>           <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    attributes     <span class="token keyword">text</span>           <span class="token operator">not</span> <span class="token boolean">null</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="实体类" tabindex="-1"><a class="header-anchor" href="#实体类" aria-hidden="true">#</a> 实体类</h2><p>对应前端传来的键值对.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">KeyValue</span> <span class="token punctuation">{</span>

  <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> values<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在mysql数据库肯定是不支持键值对和列表的数据结构. 所以实际存储的时候会把键值对序列号成json字符串存储.<br> 因此你可以看到表结构中<code>tags</code>,<code>specifications</code>,<code>attributes</code>都是属于字符型. 当是在java代码中它是string类型.</p>`,8),v={href:"https://babyfish-ct.gitee.io/jimmer-doc/docs/mapping/advanced/json",target:"_blank",rel:"noopener noreferrer"},m=t(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Entity</span>
<span class="token annotation punctuation">@GenEntity</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Product</span> <span class="token keyword">extends</span> <span class="token class-name">BaseEntity</span> <span class="token punctuation">{</span>

  <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;名称&quot;</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token class-name">String</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@NotNull</span>
  <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;价格&quot;</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">ItemType</span><span class="token punctuation">.</span><span class="token constant">INPUT_NUMBER</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token class-name">BigDecimal</span> <span class="token function">price</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;封面&quot;</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">ItemType</span><span class="token punctuation">.</span><span class="token constant">PICTURE</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token class-name">String</span> <span class="token function">cover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;品牌&quot;</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span>
  <span class="token class-name">String</span> <span class="token function">brand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@ManyToOne</span>
  <span class="token class-name">ProductCategory</span> <span class="token function">category</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@IdView</span>
  <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;类别&quot;</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">)</span>
  <span class="token class-name">String</span> <span class="token function">categoryId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;库存&quot;</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">ItemType</span><span class="token punctuation">.</span><span class="token constant">INPUT_NUMBER</span><span class="token punctuation">)</span>
  <span class="token keyword">int</span> <span class="token function">stock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;描述&quot;</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">)</span>
  <span class="token class-name">String</span> <span class="token function">description</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;标签&quot;</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">)</span>
  <span class="token annotation punctuation">@Serialized</span>
  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">tags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;规格&quot;</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">)</span>
  <span class="token annotation punctuation">@Serialized</span>
  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">KeyValue</span><span class="token punctuation">&gt;</span></span> <span class="token function">specifications</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@GenField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;属性&quot;</span><span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">)</span>
  <span class="token annotation punctuation">@Serialized</span>
  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">KeyValue</span><span class="token punctuation">&gt;</span></span> <span class="token function">attributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),b={class:"hint-container info"},g=n("p",{class:"hint-container-title"},"相关信息",-1),h={href:"https://babyfish-ct.gitee.io/jimmer-doc/docs/mapping/advanced/json",target:"_blank",rel:"noopener noreferrer"},f=n("h2",{id:"生成代码",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#生成代码","aria-hidden":"true"},"#"),a(" 生成代码")],-1),q=t(`<h2 id="商品类别选择" tabindex="-1"><a class="header-anchor" href="#商品类别选择" aria-hidden="true">#</a> 商品类别选择</h2><h3 id="修改dto" tabindex="-1"><a class="header-anchor" href="#修改dto" aria-hidden="true">#</a> 修改Dto</h3><p><code>Product.dto</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>input ProductInput {
    #allScalars(Product)
    // 接受categoryId
    categoryId
    id?
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="远程选择器" tabindex="-1"><a class="header-anchor" href="#远程选择器" aria-hidden="true">#</a> 远程选择器</h3>`,5),_=t(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>类别<span class="token punctuation">&quot;</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>categoryId<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>remote-select</span>
          <span class="token attr-name">label-prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">:query-options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>categoryQueryOption<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createForm.categoryId<span class="token punctuation">&quot;</span></span>
        <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>remote-select</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="标签输入" tabindex="-1"><a class="header-anchor" href="#标签输入" aria-hidden="true">#</a> 标签输入</h2><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>标签<span class="token punctuation">&quot;</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tags<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createForm.tags<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value-input</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),y={class:"hint-container info"},E=n("p",{class:"hint-container-title"},"相关信息",-1),B=t(`<h2 id="规格输入" tabindex="-1"><a class="header-anchor" href="#规格输入" aria-hidden="true">#</a> 规格输入</h2><p>规格输入相当于购买商品时的参数. 如屏幕分别率: 1080p. 质保期: 3年. 等等这些比较杂的参数可以放在规格里面进行展示</p><p>在输入规格时相当于是输入键值对,值可以有多个.</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>规格<span class="token punctuation">&quot;</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>specifications<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>key-value-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createForm.specifications<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>key-value-input</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),x={class:"hint-container info"},w=n("p",{class:"hint-container-title"},"相关信息",-1),j=t(`<h2 id="属性输入" tabindex="-1"><a class="header-anchor" href="#属性输入" aria-hidden="true">#</a> 属性输入</h2><p>在我们购买商品时需要选择商品的属性后才会出现对应的价格,比如购买手机时选择 颜色: 黑色, 型号: 8gb+256gb.</p><p>上面的例子中,颜色和型号都是属于手机号的属性,每个属性可以对应多个值.当这些不同属性的值进行排列组合之后才是购买时的商品.</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>属性<span class="token punctuation">&quot;</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>attributes<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>key-value-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createForm.attributes<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>key-value-input</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),A={class:"hint-container info"},F=n("p",{class:"hint-container-title"},"相关信息",-1);function I(S,G){const o=c("ExternalLinkIcon"),e=c("RouterLink");return i(),u("div",null,[d,n("p",null,[a("这种映射方式请参考jimmer中的"),n("a",v,[a("json映射"),s(o)])]),m,n("div",b,[g,n("p",null,[n("a",h,[a("@Serialized"),s(o)])])]),f,n("p",null,[a("参考"),s(e,{to:"/project/qifan-mall/start/develop.html"},{default:p(()=>[a("开发流程")]),_:1})]),q,n("p",null,[s(e,{to:"/project/qifan-mall/product/product-category.md/#%E7%88%B6%E4%BA%B2%E7%B1%BB%E5%88%AB%E6%9F%A5%E8%AF%A2"},{default:p(()=>[a("categoryQueryOption")]),_:1})]),_,n("div",y,[E,n("p",null,[s(e,{to:"/project/qifan-mall/reference/front/README.md/#%E6%A0%87%E7%AD%BE%E5%88%97%E8%A1%A8%E8%BE%93%E5%85%A5%E7%BB%84%E4%BB%B6"},{default:p(()=>[a("标签输入组件")]),_:1})])]),B,n("div",x,[w,n("p",null,[s(e,{to:"/project/qifan-mall/reference/front/README.md/#%E9%94%AE%E5%80%BC%E5%AF%B9%E8%BE%93%E5%85%A5%E7%BB%84%E4%BB%B6"},{default:p(()=>[a("键值对输入组件")]),_:1})])]),j,n("div",A,[F,n("p",null,[s(e,{to:"/project/qifan-mall/reference/front/README.md/#%E9%94%AE%E5%80%BC%E5%AF%B9%E8%BE%93%E5%85%A5%E7%BB%84%E4%BB%B6"},{default:p(()=>[a("键值对输入组件")]),_:1})])])])}const P=l(k,[["render",I],["__file","product.html.vue"]]);export{P as default};
