const e=JSON.parse('{"key":"v-02b34382","path":"/knowledge/jpa/hibernate/criteria.html","title":"2. 动态SQL（Criteria）","lang":"zh-CN","frontmatter":{"order":2,"description":"2. 动态SQL（Criteria） Criteria 查询提供了用编程的形式去写JPQL或者SQL，同时它也是类型安全的。通过它可以编写动态的SQL，比如where条件动态拼接，order by 动态字段等操作。相比于传统的字符串SQL拼接，它的优点就是类型安全。 criteria被很多初学者认为不直观，难以学习。其实是他们习惯了写SQL换成编程的形式去写SQL，现在需要去理解各种接口各种类不想花一些时间去学习。 这张图是criteria中涉及的所有接口以及他们之间的关系。是不是看着感觉很难，不用害怕，下面我用几个例子带你看懂这张图。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/qifan-blog-vuepress2/knowledge/jpa/hibernate/criteria.html"}],["meta",{"property":"og:site_name","content":"起凡Code闲聊"}],["meta",{"property":"og:title","content":"2. 动态SQL（Criteria）"}],["meta",{"property":"og:description","content":"2. 动态SQL（Criteria） Criteria 查询提供了用编程的形式去写JPQL或者SQL，同时它也是类型安全的。通过它可以编写动态的SQL，比如where条件动态拼接，order by 动态字段等操作。相比于传统的字符串SQL拼接，它的优点就是类型安全。 criteria被很多初学者认为不直观，难以学习。其实是他们习惯了写SQL换成编程的形式去写SQL，现在需要去理解各种接口各种类不想花一些时间去学习。 这张图是criteria中涉及的所有接口以及他们之间的关系。是不是看着感觉很难，不用害怕，下面我用几个例子带你看懂这张图。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-23T15:16:03.000Z"}],["meta",{"property":"article:author","content":"起凡"}],["meta",{"property":"article:modified_time","content":"2023-09-23T15:16:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2. 动态SQL（Criteria）\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-23T15:16:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"起凡\\",\\"url\\":\\"https://www.jarcheng.top\\"}]}"]]},"headers":[{"level":2,"title":"Select","slug":"select","link":"#select","children":[{"level":3,"title":"SelectExpression","slug":"selectexpression","link":"#selectexpression","children":[]},{"level":3,"title":"SelectMultiExpression","slug":"selectmultiexpression","link":"#selectmultiexpression","children":[]},{"level":3,"title":"SelectDto1","slug":"selectdto1","link":"#selectdto1","children":[]},{"level":3,"title":"SelectDto2","slug":"selectdto2","link":"#selectdto2","children":[]},{"level":3,"title":"SelectRoot","slug":"selectroot","link":"#selectroot","children":[]},{"level":3,"title":"SelectMultiRoot","slug":"selectmultiroot","link":"#selectmultiroot","children":[]}]},{"level":2,"title":"条件表达式（Conditional Expressions）","slug":"条件表达式-conditional-expressions","link":"#条件表达式-conditional-expressions","children":[]}],"git":{"createdTime":1695482163000,"updatedTime":1695482163000,"contributors":[{"name":"qifan","email":"1507906763@qq.com","commits":1}]},"readingTime":{"minutes":4,"words":1201},"filePathRelative":"knowledge/jpa/hibernate/criteria.md","localizedDate":"2023年9月23日","excerpt":"<h1> 2. 动态SQL（Criteria）</h1>\\n<p>Criteria 查询提供了用编程的形式去写JPQL或者SQL，同时它也是类型安全的。通过它可以编写动态的SQL，比如where条件动态拼接，order by 动态字段等操作。相比于传统的字符串SQL拼接，它的优点就是类型安全。</p>\\n<p>criteria被很多初学者认为不直观，难以学习。其实是他们习惯了写SQL换成编程的形式去写SQL，现在需要去理解各种接口各种类不想花一些时间去学习。</p>\\n\\n<p>这张图是criteria中涉及的所有接口以及他们之间的关系。是不是看着感觉很难，不用害怕，下面我用几个例子带你看懂这张图。</p>","autoDesc":true}');export{e as data};
