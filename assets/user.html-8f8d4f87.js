import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c as u,e as n,f as s,d as t,w as c,a}from"./app-5cdac6c5.js";const r="/qifan-blog-vuepress2/assets/img_2-4de7c0ea.png",d={},k=a('<h1 id="用户" tabindex="-1"><a class="header-anchor" href="#用户" aria-hidden="true">#</a> 用户</h1><h2 id="用户创建配置角色" tabindex="-1"><a class="header-anchor" href="#用户创建配置角色" aria-hidden="true">#</a> 用户创建配置角色</h2><h3 id="修改dto" tabindex="-1"><a class="header-anchor" href="#修改dto" aria-hidden="true">#</a> 修改dto</h3>',3),v={href:"https://babyfish-ct.gitee.io/jimmer-doc/docs/object/view/dto-language#3-viewinput%E5%92%8Cspecification",target:"_blank",rel:"noopener noreferrer"},m=n("br",null,null,-1),b=n("code",null,"roleIds",-1),g=a(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># mall-server/src/main/dto/io/qifan/mall/server/user/entity/User.dto
input UserInput {
    #allScalars(User)
    id?
    # 新增roleIds
    roleIds: Array&lt;String&gt;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="前端实现" tabindex="-1"><a class="header-anchor" href="#前端实现" aria-hidden="true">#</a> 前端实现</h3>`,2),q=a('<div style="text-align:center;"><figure><img src="'+r+`" alt="图1 选择角色" tabindex="0" loading="lazy"><figcaption>图1 选择角色</figcaption></figure></div><ol><li><p>提供待选项获取方法</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">roleQueryOptions</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>keyword<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">await</span> api<span class="token punctuation">.</span>roleController<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">{</span> body<span class="token operator">:</span> <span class="token punctuation">{</span> query<span class="token operator">:</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> keyword <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>content
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>双向绑定已选的角色</p><p>在user-store.ts中定义了<code>createForm</code>，类型是UserInput。在<a href="#%E4%BF%AE%E6%94%B9dto">dto修改</a>中新增了roleIds，代表前端需要传roleIds。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// roleIds和remote-select双向绑定</span>
<span class="token keyword">const</span> initForm<span class="token operator">:</span> UserInput <span class="token operator">=</span> <span class="token punctuation">{</span> roleIds<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> password<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> nickname<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> phone<span class="token operator">:</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> createForm <span class="token operator">=</span> <span class="token generic-function"><span class="token function">ref</span><span class="token generic class-name"><span class="token operator">&lt;</span>UserInput<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>initForm<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>映射待选项到label和value</p><ul><li><code>label-prop=&quot;name&quot;</code>代表角色的名称映射到el-option的label属性</li><li><code>value-prop=&quot;id&quot;&quot;</code>代表角色的id映射到el-option的value属性（默认就是id，所以这边没填）</li></ul></li><li><p>汇总</p></li></ol><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> userStore <span class="token operator">=</span> <span class="token function">useUserStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> createForm <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">storeToRefs</span><span class="token punctuation">(</span>userStore<span class="token punctuation">)</span>
<span class="token comment">// 获取角色列表</span>
<span class="token keyword">const</span> <span class="token function-variable function">roleQueryOptions</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">keyword</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">await</span> api<span class="token punctuation">.</span>roleController<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> keyword <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>content
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>create-form<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createFormRef<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createForm<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:rules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rules<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form<span class="token punctuation">&quot;</span></span> <span class="token attr-name">labelWidth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>120<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>角色<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--  双向绑定和定义映射 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>remote-select</span>
          <span class="token attr-name">:query-options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>roleQueryOptions<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createForm.roleIds<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">label-prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">multiple</span>
        <span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>remote-select</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),h={class:"hint-container info"},f=n("p",{class:"hint-container-title"},"相关信息",-1),y=a(`<h3 id="后端实现" tabindex="-1"><a class="header-anchor" href="#后端实现" aria-hidden="true">#</a> 后端实现</h3><p>前端实现提交的数据结构如下</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;createdTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-11-24 17:13:08&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;editedTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-11-29 17:09:43&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1cb4db50-66fa-4250-9916-73283e536fa0&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;phone&quot;</span><span class="token operator">:</span> <span class="token string">&quot;13656987994&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;$2a$10$UeZxmCdikKwYFK.wk7lp8Oj6ZzoXUZKUhV9qFGXuc74.IqgDP9AU2&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;nickname&quot;</span><span class="token operator">:</span> <span class="token string">&quot;默认用户&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;avatar&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
  <span class="token property">&quot;gender&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0710c8a5-021c-404d-b09e-56db95c259e9&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;roleIds&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;17509f5c-9a6b-429c-b467-cadbd8873d2d&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在图1中可知选中了两个角色，所以roleIds里面包含两条id数据。</p>`,4),_=n("li",null,[s("UserInput中有roleIds，需要转成User中的"),n("code",null,"List<UserRoleRel> roles()"),s(";")],-1),w=n("li",null,"UserInput是User的Dto，因此它可以通过userInput.toEntity()转成User对象",-1),I={href:"https://babyfish-ct.gitee.io/jimmer-doc/docs/object/draft",target:"_blank",rel:"noopener noreferrer"},U=a(`<p>通过上面三点可以知道Input类型的Dto插入到数据库需要哪些步骤，在<code>UserService</code>的save方法中新增下面的代码。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token class-name">UserInput</span> userInput<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">User</span> user <span class="token operator">=</span> userInput<span class="token punctuation">.</span><span class="token function">toEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> userRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token class-name">UserDraft</span><span class="token punctuation">.</span>$<span class="token punctuation">.</span><span class="token function">produce</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> draft <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// 将List&lt;String&gt; roleIds map映射--&gt; List&lt;UserRoleRel&gt; roles</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>userInput<span class="token punctuation">.</span><span class="token function">getRoleIds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>roleId <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// 向user对象中添加UserRoleRel</span>
            draft<span class="token punctuation">.</span><span class="token function">addIntoRoles</span><span class="token punctuation">(</span>userRole <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token comment">// 设置UserRoleRel，</span>
                userRole<span class="token punctuation">.</span><span class="token function">applyRole</span><span class="token punctuation">(</span>role <span class="token operator">-&gt;</span> role<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>roleId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// user中有@Key phone，要不然需要创建完用户得到id才可以。</span>
                userRole<span class="token punctuation">.</span><span class="token function">setUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="编辑用户-回显-修改角色" tabindex="-1"><a class="header-anchor" href="#编辑用户-回显-修改角色" aria-hidden="true">#</a> 编辑用户（回显）修改角色</h2><p>当创建完用户之后，当编辑用户的时候需要显示用户已有的角色。</p><ol><li>后端查询编辑用户的角色</li><li>前端遍历roleVies得到roleIds</li><li>双向绑定到RemoteSelect组件即可实现默认选中已有的角色</li></ol><h3 id="视图属性rolesview" tabindex="-1"><a class="header-anchor" href="#视图属性rolesview" aria-hidden="true">#</a> 视图属性RolesView</h3><p><code>rolesView</code>是<code>roles</code>的视图属性，获得<code>UserRoleRel</code>中的<code>role</code>得到<code>List&lt;Role&gt;</code>。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token annotation punctuation">@OneToMany</span><span class="token punctuation">(</span>mappedBy <span class="token operator">=</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span>
 <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserRoleRel</span><span class="token punctuation">&gt;</span></span> <span class="token function">roles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token annotation punctuation">@ManyToManyView</span><span class="token punctuation">(</span>
         prop <span class="token operator">=</span> <span class="token string">&quot;roles&quot;</span><span class="token punctuation">,</span>
         deeperProp <span class="token operator">=</span> <span class="token string">&quot;role&quot;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 <span class="token punctuation">)</span>
 <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Role</span><span class="token punctuation">&gt;</span></span> <span class="token function">rolesView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="属性抓取" tabindex="-1"><a class="header-anchor" href="#属性抓取" aria-hidden="true">#</a> 属性抓取</h3><p>在<code>UserRepository</code>中定义了一个通用的对象抓取器。在这个数据抓取，<code>.allScalarFields()</code>代表抓取普通属性。后面又新增了<code>rolesView(true)</code>抓取视图属性，这样就可以返用户关联的角色。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">UserFetcher</span> <span class="token constant">COMPLEX_FETCHER</span> <span class="token operator">=</span> <span class="token class-name">UserFetcher</span><span class="token punctuation">.</span>$<span class="token punctuation">.</span><span class="token function">allScalarFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rolesView</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>返回的结果，可以看见除了普通属性之外，还包含了一个视图属性rolesView</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
   <span class="token property">&quot;createdTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-11-24 17:13:08&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;editedTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-11-30 14:00:55&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1cb4db50-66fa-4250-9916-73283e536fa0&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;phone&quot;</span><span class="token operator">:</span> <span class="token string">&quot;13656987994&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;$2a$10$UeZxmCdikKwYFK.wk7lp8Oj6ZzoXUZKUhV9qFGXuc74.IqgDP9AU2&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;nickname&quot;</span><span class="token operator">:</span> <span class="token string">&quot;默认用户&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;avatar&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
   <span class="token property">&quot;gender&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0710c8a5-021c-404d-b09e-56db95c259e9&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;rolesView&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
         <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
         <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;17509f5c-9a6b-429c-b467-cadbd8873d2d&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
         <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;d5352808-e463-4af9-9252-6db6b7df2ca0&quot;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),x={class:"hint-container info"},R=n("p",{class:"hint-container-title"},"相关信息",-1),j={href:"https://babyfish-ct.gitee.io/jimmer-doc/docs/query/object-fetcher/",target:"_blank",rel:"noopener noreferrer"},E=n("ul",null,[n("li",null,"普通属性，数据库表中和实体对应的属性"),n("li",null,"关联属性，一对一，一对多，多对一，多对多"),n("li",null,"视图属性，就像上面的rolesView，就是一种视图属性")],-1),F=a(`<h3 id="前端遍历获取roleid" tabindex="-1"><a class="header-anchor" href="#前端遍历获取roleid" aria-hidden="true">#</a> 前端遍历获取roleId</h3><p>前端将<code>res.rolesView</code>映射成<code>roleIds</code></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> api<span class="token punctuation">.</span>userController<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span><span class="token punctuation">{</span> id<span class="token operator">:</span> updateForm<span class="token punctuation">.</span>value<span class="token punctuation">.</span>id <span class="token operator">||</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
updateForm<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>res<span class="token punctuation">,</span> roleIds<span class="token operator">:</span> res<span class="token punctuation">.</span>rolesView<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>role<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> role<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="双向绑定roleids" tabindex="-1"><a class="header-anchor" href="#双向绑定roleids" aria-hidden="true">#</a> 双向绑定roleIds</h3><p>由于roleIds中已经有值，此时下拉框中会选中该用户已有的角色。</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>remote-select</span>
        <span class="token attr-name">:query-options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>roleQueryOptions<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>updateForm.roleIds<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">label-prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">multiple</span>
<span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>remote-select</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function V(S,B){const e=o("ExternalLinkIcon"),p=o("RouterLink");return i(),u("div",null,[k,n("p",null,[n("a",v,[s("Dto"),t(e)]),s("有input，view，speciation三种类型。input专门用于输入，在当前的场景中需要接收前端传入的roleIds。"),m,s(" 因此要在UserInput中添加"),b,s("。")]),g,n("p",null,[s("使用"),t(p,{to:"/project/qifan-mall/reference/front/README.md/#%E8%BF%9C%E7%A8%8B%E9%80%89%E6%8B%A9%E5%99%A8"},{default:c(()=>[s("RemoteSelect组件")]),_:1}),s("即可实现下图效果")]),q,n("div",h,[f,n("p",null,[t(p,{to:"/project/qifan-mall/reference/front/#%E8%BF%9C%E7%A8%8B%E9%80%89%E6%8B%A9%E5%99%A8"},{default:c(()=>[s("RemoteSelect组件")]),_:1}),s("：快速选择远程数据")])]),y,n("ol",null,[_,w,n("li",null,[s("由于User是不可变对象，要修改需要同"),n("a",I,[s("Draft对象"),t(e)]),s("。如UserDraft")])]),U,n("div",x,[R,n("p",null,[n("a",j,[s("对象抓取器（Fetcher）"),t(e)]),s("：抓取的属性包含三种类型")]),E]),F])}const L=l(d,[["render",V],["__file","user.html.vue"]]);export{L as default};
